{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Transfer/CustomData.js\";\nimport React from \"react\";\nimport { Card, Transfer } from \"antd\";\n\nvar CustomData =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomData, _React$Component);\n\n  function CustomData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      mockData: [],\n      targetKeys: []\n    };\n\n    _this.getMock = function () {\n      var targetKeys = [];\n      var mockData = [];\n\n      for (var i = 0; i < 20; i++) {\n        var data = {\n          key: i.toString(),\n          title: \"content\".concat(i + 1),\n          description: \"description of content\".concat(i + 1),\n          chosen: Math.random() * 2 > 1\n        };\n\n        if (data.chosen) {\n          targetKeys.push(data.key);\n        }\n\n        mockData.push(data);\n      }\n\n      _this.setState({\n        mockData: mockData,\n        targetKeys: targetKeys\n      });\n    };\n\n    _this.handleChange = function (targetKeys, direction, moveKeys) {\n      console.log(targetKeys, direction, moveKeys);\n\n      _this.setState({\n        targetKeys: targetKeys\n      });\n    };\n\n    _this.renderItem = function (item) {\n      var customLabel = React.createElement(\"span\", {\n        className: \"custom-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, item.title, \" - \", item.description);\n      return {\n        label: customLabel,\n        // for displayed item\n        value: item.title // for title and filter matching\n\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMock();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        className: \"gx-card\",\n        title: \"CustomData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Transfer, {\n        className: \"gx-ant-transfer-width\",\n        dataSource: this.state.mockData,\n        listStyle: {\n          width: 300,\n          height: 300\n        },\n        targetKeys: this.state.targetKeys,\n        onChange: this.handleChange,\n        render: this.renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomData;\n}(React.Component);\n\nexport default CustomData;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Transfer/CustomData.js"],"names":["React","Card","Transfer","CustomData","state","mockData","targetKeys","getMock","i","data","key","toString","title","description","chosen","Math","random","push","setState","handleChange","direction","moveKeys","console","log","renderItem","item","customLabel","label","value","width","height","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,MAA7B;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,UAAU,EAAE;AAFN,K;;UAIRC,O,GAAU,YAAM;AACd,UAAMD,UAAU,GAAG,EAAnB;AACA,UAAMD,QAAQ,GAAG,EAAjB;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,YAAMC,IAAI,GAAG;AACXC,UAAAA,GAAG,EAAEF,CAAC,CAACG,QAAF,EADM;AAEXC,UAAAA,KAAK,mBAAYJ,CAAC,GAAG,CAAhB,CAFM;AAGXK,UAAAA,WAAW,kCAA2BL,CAAC,GAAG,CAA/B,CAHA;AAIXM,UAAAA,MAAM,EAAEC,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB;AAJjB,SAAb;;AAMA,YAAIP,IAAI,CAACK,MAAT,EAAiB;AACfR,UAAAA,UAAU,CAACW,IAAX,CAAgBR,IAAI,CAACC,GAArB;AACD;;AACDL,QAAAA,QAAQ,CAACY,IAAT,CAAcR,IAAd;AACD;;AACD,YAAKS,QAAL,CAAc;AAACb,QAAAA,QAAQ,EAARA,QAAD;AAAWC,QAAAA,UAAU,EAAVA;AAAX,OAAd;AACD,K;;UACDa,Y,GAAe,UAACb,UAAD,EAAac,SAAb,EAAwBC,QAAxB,EAAqC;AAClDC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ,EAAwBc,SAAxB,EAAmCC,QAAnC;;AACA,YAAKH,QAAL,CAAc;AAACZ,QAAAA,UAAU,EAAVA;AAAD,OAAd;AACD,K;;UACDkB,U,GAAa,UAACC,IAAD,EAAU;AACrB,UAAMC,WAAW,GACf;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACb,KADR,SACkBa,IAAI,CAACZ,WADvB,CADF;AAMA,aAAO;AACLc,QAAAA,KAAK,EAAED,WADF;AACe;AACpBE,QAAAA,KAAK,EAAEH,IAAI,CAACb,KAFP,CAEc;;AAFd,OAAP;AAID,K;;;;;;;wCAEmB;AAClB,WAAKL,OAAL;AACD;;;6BAEQ;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,SAAhB;AAA0B,QAAA,KAAK,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,uBAApB;AACU,QAAA,UAAU,EAAE,KAAKH,KAAL,CAAWC,QADjC;AAEU,QAAA,SAAS,EAAE;AACTwB,UAAAA,KAAK,EAAE,GADE;AAETC,UAAAA,MAAM,EAAE;AAFC,SAFrB;AAMU,QAAA,UAAU,EAAE,KAAK1B,KAAL,CAAWE,UANjC;AAOU,QAAA,QAAQ,EAAE,KAAKa,YAPzB;AAQU,QAAA,MAAM,EAAE,KAAKK,UARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAcD;;;;EA1DsBxB,KAAK,CAAC+B,S;;AA6D/B,eAAe5B,UAAf","sourcesContent":["import React from \"react\";\nimport {Card, Transfer} from \"antd\";\n\nclass CustomData extends React.Component {\n  state = {\n    mockData: [],\n    targetKeys: [],\n  };\n  getMock = () => {\n    const targetKeys = [];\n    const mockData = [];\n    for (let i = 0; i < 20; i++) {\n      const data = {\n        key: i.toString(),\n        title: `content${i + 1}`,\n        description: `description of content${i + 1}`,\n        chosen: Math.random() * 2 > 1,\n      };\n      if (data.chosen) {\n        targetKeys.push(data.key);\n      }\n      mockData.push(data);\n    }\n    this.setState({mockData, targetKeys});\n  };\n  handleChange = (targetKeys, direction, moveKeys) => {\n    console.log(targetKeys, direction, moveKeys);\n    this.setState({targetKeys});\n  };\n  renderItem = (item) => {\n    const customLabel = (\n      <span className=\"custom-item\">\n        {item.title} - {item.description}\n      </span>\n    );\n\n    return {\n      label: customLabel, // for displayed item\n      value: item.title, // for title and filter matching\n    };\n  };\n\n  componentDidMount() {\n    this.getMock();\n  }\n\n  render() {\n    return (\n      <Card className=\"gx-card\" title=\"CustomData\">\n        <Transfer className=\"gx-ant-transfer-width\"\n                  dataSource={this.state.mockData}\n                  listStyle={{\n                    width: 300,\n                    height: 300,\n                  }}\n                  targetKeys={this.state.targetKeys}\n                  onChange={this.handleChange}\n                  render={this.renderItem}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default CustomData;\n"]},"metadata":{},"sourceType":"module"}