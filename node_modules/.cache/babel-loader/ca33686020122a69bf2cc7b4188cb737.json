{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport reducers from \"../reducers/index\";\nimport { routerMiddleware } from \"react-router-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/index\";\nimport thunk from 'redux-thunk';\n\nvar createHistory = require(\"history\").createBrowserHistory;\n\nvar history = createHistory();\nvar routeMiddleware = routerMiddleware(history);\nvar sagaMiddleware = createSagaMiddleware();\nvar middlewares = [thunk, sagaMiddleware, routeMiddleware];\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default function configureStore(initialState) {\n  var store = createStore(reducers, initialState, composeEnhancers(applyMiddleware.apply(void 0, middlewares)));\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers/index', function () {\n      var nextRootReducer = require('../reducers/index');\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\nexport { history };","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/appRedux/store/index.js"],"names":["applyMiddleware","compose","createStore","reducers","routerMiddleware","createSagaMiddleware","rootSaga","thunk","createHistory","require","createBrowserHistory","history","routeMiddleware","sagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","initialState","store","run","module","hot","accept","nextRootReducer","replaceReducer"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,IAAMC,aAAa,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,oBAAzC;;AAEA,IAAMC,OAAO,GAAGH,aAAa,EAA7B;AACA,IAAMI,eAAe,GAAGR,gBAAgB,CAACO,OAAD,CAAxC;AACA,IAAME,cAAc,GAAGR,oBAAoB,EAA3C;AAEA,IAAMS,WAAW,GAAG,CAACP,KAAD,EAAOM,cAAP,EAAuBD,eAAvB,CAApB;AACA,IAAMG,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+ChB,OAAxE;AAEA,eAAe,SAASiB,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,MAAMC,KAAK,GAAGlB,WAAW,CAACC,QAAD,EAAWgB,YAAX,EACvBJ,gBAAgB,CAACf,eAAe,MAAf,SAAmBc,WAAnB,CAAD,CADO,CAAzB;AAGAD,EAAAA,cAAc,CAACQ,GAAf,CAAmBf,QAAnB;;AAEA,MAAIgB,MAAM,CAACC,GAAX,EAAgB;AACd;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,mBAAlB,EAAuC,YAAM;AAC3C,UAAMC,eAAe,GAAGhB,OAAO,CAAC,mBAAD,CAA/B;;AACAW,MAAAA,KAAK,CAACM,cAAN,CAAqBD,eAArB;AACD,KAHD;AAID;;AACD,SAAOL,KAAP;AACD;AACD,SAAQT,OAAR","sourcesContent":["import {applyMiddleware, compose, createStore} from \"redux\";\nimport reducers from \"../reducers/index\";\nimport {routerMiddleware} from \"react-router-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/index\";\nimport thunk from 'redux-thunk';\n\nconst createHistory = require(\"history\").createBrowserHistory;\n\nconst history = createHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [thunk,sagaMiddleware, routeMiddleware];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(initialState) {\n  const store = createStore(reducers, initialState,\n    composeEnhancers(applyMiddleware(...middlewares)));\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers/index', () => {\n      const nextRootReducer = require('../reducers/index');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n  return store;\n}\nexport {history};\n"]},"metadata":{},"sourceType":"module"}