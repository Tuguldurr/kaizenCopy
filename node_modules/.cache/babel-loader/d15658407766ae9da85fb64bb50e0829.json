{"ast":null,"code":"import _objectSpread from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/inBuiltApps/Chat/index.js\";\nimport React, { Component } from \"react\";\nimport { Avatar, Button, Drawer, Input, Tabs } from \"antd\";\nimport CustomScrollbars from \"util/CustomScrollbars\";\nimport Moment from \"moment\";\nimport ChatUserList from \"components/chat/ChatUserList\";\nimport conversationList from \"./data/conversationList\";\nimport Conversation from \"components/chat/Conversation/index\";\nimport users from \"./data/chatUsers\";\nimport ContactList from \"components/chat/ContactList/index\";\nimport IntlMessages from \"util/IntlMessages\";\nimport SearchBox from \"components/SearchBox\";\nimport CircularProgress from \"../../../components/CircularProgress/index\";\nvar TabPane = Tabs.TabPane;\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this));\n\n    _this.filterContact = function (userName) {\n      if (userName === '') {\n        return users.filter(function (user) {\n          return !user.recent;\n        });\n      }\n\n      return users.filter(function (user) {\n        return !user.recent && user.name.toLowerCase().indexOf(userName.toLowerCase()) > -1;\n      });\n    };\n\n    _this.filterUsers = function (userName) {\n      if (userName === '') {\n        return users.filter(function (user) {\n          return user.recent;\n        });\n      }\n\n      return users.filter(function (user) {\n        return user.recent && user.name.toLowerCase().indexOf(userName.toLowerCase()) > -1;\n      });\n    };\n\n    _this.Communication = function () {\n      var _this$state = _this.state,\n          message = _this$state.message,\n          selectedUser = _this$state.selectedUser,\n          conversation = _this$state.conversation;\n      var conversationData = conversation.conversationData;\n      return React.createElement(\"div\", {\n        className: \"gx-chat-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-chat-main-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"gx-d-block gx-d-lg-none gx-chat-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"gx-icon-btn icon icon-chat\",\n        onClick: _this.onToggleDrawer.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gx-chat-main-header-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-chat-avatar gx-mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-status-pos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        src: selectedUser.thumb,\n        className: \"gx-rounded-circle gx-size-60\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"gx-status gx-\".concat(selectedUser.status),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"gx-chat-contact-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, selectedUser.name))), React.createElement(CustomScrollbars, {\n        className: \"gx-chat-list-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Conversation, {\n        conversationData: conversationData,\n        selectedUser: selectedUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gx-chat-main-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-flex-row gx-align-items-center\",\n        style: {\n          maxHeight: 51\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"required\",\n        className: \"gx-border-0 ant-input gx-chat-textarea\",\n        onKeyUp: _this._handleKeyPress.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        onChange: _this.updateMessageValue.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        value: message,\n        placeholder: \"Type and hit enter to send message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(\"i\", {\n        className: \"gx-icon-btn icon icon-sent\",\n        onClick: _this.submitComment.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))));\n    };\n\n    _this.AppUsersInfo = function () {\n      return React.createElement(\"div\", {\n        className: \"gx-chat-sidenav-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-bg-grey-light gx-chat-sidenav-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-chat-user-hd gx-mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"gx-icon-btn icon icon-arrow-left\",\n        onClick: function onClick() {\n          _this.setState({\n            userState: 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gx-chat-user gx-chat-user-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-chat-avatar gx-mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        src: \"https://via.placeholder.com/150x150\",\n        className: \"gx-size-60\",\n        alt: \"John Doe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gx-user-name h4 gx-my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Robert Johnson\"))), React.createElement(\"div\", {\n        className: \"gx-chat-sidenav-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(CustomScrollbars, {\n        className: \"gx-chat-sidenav-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-form-group gx-mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Mood\"), React.createElement(Input, {\n        fullWidth: true,\n        id: \"exampleTextarea\",\n        multiline: true,\n        rows: 3,\n        onKeyUp: _this._handleKeyPress.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        onChange: _this.updateMessageValue.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        defaultValue: \"it's a status....not your diary...\",\n        placeholder: \"Status\",\n        margin: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })))))));\n    };\n\n    _this.ChatUsers = function () {\n      return React.createElement(\"div\", {\n        className: \"gx-chat-sidenav-main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-chat-sidenav-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-chat-user-hd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-chat-avatar gx-mr-3\",\n        onClick: function onClick() {\n          _this.setState({\n            userState: 2\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-status-pos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        id: \"avatar-button\",\n        src: \"https://via.placeholder.com/150x150\",\n        className: \"gx-size-50\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"gx-status gx-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"gx-module-user-info gx-flex-column gx-justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-module-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"gx-mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Robert Johnson\")), React.createElement(\"div\", {\n        className: \"gx-module-user-detail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"gx-text-grey gx-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"robert@example.com\")))), React.createElement(\"div\", {\n        className: \"gx-chat-search-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(SearchBox, {\n        styleName: \"gx-chat-search-bar gx-lt-icon-search-bar-lg\",\n        placeholder: \"Search or start new chat\",\n        onChange: _this.updateSearchChatUser.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        value: _this.state.searchChatUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"gx-chat-sidenav-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        className: \"gx-tabs-half\",\n        defaultActiveKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        label: React.createElement(IntlMessages, {\n          id: \"chat.chatUser\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }),\n        tab: React.createElement(IntlMessages, {\n          id: \"chat.chatUser\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }),\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(CustomScrollbars, {\n        className: \"gx-chat-sidenav-scroll-tab-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, _this.state.chatUsers.length === 0 ? React.createElement(\"div\", {\n        className: \"gx-p-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, _this.state.userNotFound) : React.createElement(ChatUserList, {\n        chatUsers: _this.state.chatUsers,\n        selectedSectionId: _this.state.selectedSectionId,\n        onSelectUser: _this.onSelectUser.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }))), React.createElement(TabPane, {\n        label: React.createElement(IntlMessages, {\n          id: \"chat.contacts\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }),\n        tab: React.createElement(IntlMessages, {\n          id: \"chat.contacts\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }),\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(CustomScrollbars, {\n        className: \"gx-chat-sidenav-scroll-tab-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, _this.state.contactList.length === 0 ? React.createElement(\"div\", {\n        className: \"gx-p-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, _this.state.userNotFound) : React.createElement(ContactList, {\n        contactList: _this.state.contactList,\n        selectedSectionId: _this.state.selectedSectionId,\n        onSelectUser: _this.onSelectUser.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }))))));\n    };\n\n    _this._handleKeyPress = function (e) {\n      if (e.key === 'Enter') {\n        _this.submitComment();\n      }\n    };\n\n    _this.handleChange = function (event, value) {\n      _this.setState({\n        selectedTabIndex: value\n      });\n    };\n\n    _this.handleChangeIndex = function (index) {\n      _this.setState({\n        selectedTabIndex: index\n      });\n    };\n\n    _this.onSelectUser = function (user) {\n      _this.setState({\n        loader: true,\n        selectedSectionId: user.id,\n        drawerState: _this.props.drawerState,\n        selectedUser: user,\n        conversation: _this.state.conversationList.find(function (data) {\n          return data.id === user.id;\n        })\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          loader: false\n        });\n      }, 1500);\n    };\n\n    _this.showCommunication = function () {\n      return React.createElement(\"div\", {\n        className: \"gx-chat-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, _this.state.selectedUser === null ? React.createElement(\"div\", {\n        className: \"gx-comment-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-fs-80\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon icon-chat gx-text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })), React.createElement(\"h1\", {\n        className: \"gx-text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"chat.selectUserChat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: \"gx-d-block gx-d-lg-none\",\n        type: \"primary\",\n        onClick: _this.onToggleDrawer.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"chat.selectContactChat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }))) : _this.Communication());\n    };\n\n    _this.state = {\n      loader: false,\n      userNotFound: 'No user found',\n      drawerState: false,\n      selectedSectionId: '',\n      selectedTabIndex: 1,\n      userState: 1,\n      searchChatUser: '',\n      contactList: users.filter(function (user) {\n        return !user.recent;\n      }),\n      selectedUser: null,\n      message: '',\n      chatUsers: users.filter(function (user) {\n        return user.recent;\n      }),\n      conversationList: conversationList,\n      conversation: null\n    };\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"submitComment\",\n    value: function submitComment() {\n      var _this2 = this;\n\n      if (this.state.message !== '') {\n        var updatedConversation = this.state.conversation.conversationData.concat({\n          'type': 'sent',\n          'message': this.state.message,\n          'sentAt': Moment().format('hh:mm:ss A')\n        });\n        this.setState({\n          conversation: _objectSpread({}, this.state.conversation, {\n            conversationData: updatedConversation\n          }),\n          message: '',\n          conversationList: this.state.conversationList.map(function (conversationData) {\n            if (conversationData.id === _this2.state.conversation.id) {\n              return _objectSpread({}, _this2.state.conversation, {\n                conversationData: updatedConversation\n              });\n            } else {\n              return conversationData;\n            }\n          })\n        });\n      }\n    }\n  }, {\n    key: \"updateMessageValue\",\n    value: function updateMessageValue(evt) {\n      this.setState({\n        message: evt.target.value\n      });\n    }\n  }, {\n    key: \"updateSearchChatUser\",\n    value: function updateSearchChatUser(evt) {\n      this.setState({\n        searchChatUser: evt.target.value,\n        contactList: this.filterContact(evt.target.value),\n        chatUsers: this.filterUsers(evt.target.value)\n      });\n    }\n  }, {\n    key: \"onToggleDrawer\",\n    value: function onToggleDrawer() {\n      this.setState({\n        drawerState: !this.state.drawerState\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          loader = _this$state2.loader,\n          userState = _this$state2.userState,\n          drawerState = _this$state2.drawerState;\n      return React.createElement(\"div\", {\n        className: \"gx-main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-app-module gx-chat-module\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-chat-module-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-d-block gx-d-lg-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        placement: \"left\",\n        closable: false,\n        visible: drawerState,\n        onClose: this.onToggleDrawer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, userState === 1 ? this.ChatUsers() : this.AppUsersInfo())), React.createElement(\"div\", {\n        className: \"gx-chat-sidenav gx-d-none gx-d-lg-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, userState === 1 ? this.ChatUsers() : this.AppUsersInfo()), loader ? React.createElement(\"div\", {\n        className: \"gx-loader-view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      })) : this.showCommunication())));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport default Chat;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/inBuiltApps/Chat/index.js"],"names":["React","Component","Avatar","Button","Drawer","Input","Tabs","CustomScrollbars","Moment","ChatUserList","conversationList","Conversation","users","ContactList","IntlMessages","SearchBox","CircularProgress","TabPane","Chat","filterContact","userName","filter","user","recent","name","toLowerCase","indexOf","filterUsers","Communication","state","message","selectedUser","conversation","conversationData","onToggleDrawer","bind","thumb","status","maxHeight","_handleKeyPress","updateMessageValue","submitComment","AppUsersInfo","setState","userState","ChatUsers","updateSearchChatUser","searchChatUser","chatUsers","length","userNotFound","selectedSectionId","onSelectUser","contactList","e","key","handleChange","event","value","selectedTabIndex","handleChangeIndex","index","loader","id","drawerState","props","find","data","setTimeout","showCommunication","updatedConversation","concat","format","map","evt","target"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {Avatar, Button, Drawer, Input, Tabs} from \"antd\";\nimport CustomScrollbars from \"util/CustomScrollbars\";\nimport Moment from \"moment\";\n\nimport ChatUserList from \"components/chat/ChatUserList\";\nimport conversationList from \"./data/conversationList\";\nimport Conversation from \"components/chat/Conversation/index\";\nimport users from \"./data/chatUsers\";\nimport ContactList from \"components/chat/ContactList/index\";\nimport IntlMessages from \"util/IntlMessages\";\nimport SearchBox from \"components/SearchBox\";\nimport CircularProgress from \"../../../components/CircularProgress/index\";\n\nconst TabPane = Tabs.TabPane;\n\nclass Chat extends Component {\n  filterContact = (userName) => {\n    if (userName === '') {\n      return users.filter(user => !user.recent);\n    }\n    return users.filter((user) =>\n      !user.recent && user.name.toLowerCase().indexOf(userName.toLowerCase()) > -1\n    );\n  };\n  filterUsers = (userName) => {\n    if (userName === '') {\n      return users.filter(user => user.recent);\n    }\n    return users.filter((user) =>\n      user.recent && user.name.toLowerCase().indexOf(userName.toLowerCase()) > -1\n    );\n  };\n  Communication = () => {\n    const {message, selectedUser, conversation} = this.state;\n    const {conversationData} = conversation;\n    return <div className=\"gx-chat-main\">\n      <div className=\"gx-chat-main-header\">\n        <span className=\"gx-d-block gx-d-lg-none gx-chat-btn\"><i className=\"gx-icon-btn icon icon-chat\"\n                                                                 onClick={this.onToggleDrawer.bind(this)}/></span>\n        <div className=\"gx-chat-main-header-info\">\n\n          <div className=\"gx-chat-avatar gx-mr-2\">\n            <div className=\"gx-status-pos\">\n              <Avatar src={selectedUser.thumb}\n                      className=\"gx-rounded-circle gx-size-60\"\n                      alt=\"\"/>\n\n              <span className={`gx-status gx-${selectedUser.status}`}/>\n            </div>\n          </div>\n\n          <div className=\"gx-chat-contact-name\">\n            {selectedUser.name}\n          </div>\n        </div>\n\n      </div>\n\n      <CustomScrollbars className=\"gx-chat-list-scroll\">\n        <Conversation conversationData={conversationData}\n                      selectedUser={selectedUser}/>\n      </CustomScrollbars>\n\n      <div className=\"gx-chat-main-footer\">\n        <div className=\"gx-flex-row gx-align-items-center\" style={{maxHeight: 51}}>\n          <div className=\"gx-col\">\n            <div className=\"gx-form-group\">\n                            <textarea\n                              id=\"required\" className=\"gx-border-0 ant-input gx-chat-textarea\"\n                              onKeyUp={this._handleKeyPress.bind(this)}\n                              onChange={this.updateMessageValue.bind(this)}\n                              value={message}\n                              placeholder=\"Type and hit enter to send message\"\n                            />\n            </div>\n          </div>\n          <i className=\"gx-icon-btn icon icon-sent\" onClick={this.submitComment.bind(this)}/>\n        </div>\n      </div>\n    </div>\n  };\n\n  AppUsersInfo = () => {\n    return <div className=\"gx-chat-sidenav-main\">\n      <div className=\"gx-bg-grey-light gx-chat-sidenav-header\">\n\n        <div className=\"gx-chat-user-hd gx-mb-0\">\n          <i className=\"gx-icon-btn icon icon-arrow-left\" onClick={() => {\n            this.setState({userState: 1});\n          }}/>\n\n        </div>\n        <div className=\"gx-chat-user gx-chat-user-center\">\n          <div className=\"gx-chat-avatar gx-mx-auto\">\n            <Avatar src='https://via.placeholder.com/150x150'\n                    className=\"gx-size-60\" alt=\"John Doe\"/>\n          </div>\n\n          <div className=\"gx-user-name h4 gx-my-2\">Robert Johnson</div>\n\n        </div>\n      </div>\n      <div className=\"gx-chat-sidenav-content\">\n\n        <CustomScrollbars className=\"gx-chat-sidenav-scroll\">\n          <div className=\"gx-p-4\">\n            <form>\n              <div className=\"gx-form-group gx-mt-4\">\n                <label>Mood</label>\n\n                <Input\n                  fullWidth\n                  id=\"exampleTextarea\"\n                  multiline\n                  rows={3}\n                  onKeyUp={this._handleKeyPress.bind(this)}\n                  onChange={this.updateMessageValue.bind(this)}\n                  defaultValue=\"it's a status....not your diary...\"\n                  placeholder=\"Status\"\n                  margin=\"none\"/>\n\n              </div>\n            </form>\n          </div>\n        </CustomScrollbars>\n\n      </div>\n    </div>\n  };\n  ChatUsers = () => {\n    return <div className=\"gx-chat-sidenav-main\">\n\n      <div className=\"gx-chat-sidenav-header\">\n\n        <div className=\"gx-chat-user-hd\">\n\n          <div className=\"gx-chat-avatar gx-mr-3\" onClick={() => {\n            this.setState({\n              userState: 2\n            });\n          }}>\n            <div className=\"gx-status-pos\">\n              <Avatar id=\"avatar-button\" src='https://via.placeholder.com/150x150'\n                      className=\"gx-size-50\"\n                      alt=\"\"/>\n              <span className=\"gx-status gx-online\"/>\n            </div>\n          </div>\n\n          <div className=\"gx-module-user-info gx-flex-column gx-justify-content-center\">\n            <div className=\"gx-module-title\">\n              <h5 className=\"gx-mb-0\">Robert Johnson</h5>\n            </div>\n            <div className=\"gx-module-user-detail\">\n              <span className=\"gx-text-grey gx-link\">robert@example.com</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"gx-chat-search-wrapper\">\n\n          <SearchBox styleName=\"gx-chat-search-bar gx-lt-icon-search-bar-lg\"\n                     placeholder=\"Search or start new chat\"\n                     onChange={this.updateSearchChatUser.bind(this)}\n                     value={this.state.searchChatUser}/>\n\n        </div>\n      </div>\n\n      <div className=\"gx-chat-sidenav-content\">\n        {/*<AppBar position=\"static\" className=\"no-shadow chat-tabs-header\">*/}\n        <Tabs className=\"gx-tabs-half\" defaultActiveKey=\"1\">\n          <TabPane label={<IntlMessages id=\"chat.chatUser\"/>} tab={<IntlMessages id=\"chat.chatUser\"/>} key=\"1\">\n            <CustomScrollbars className=\"gx-chat-sidenav-scroll-tab-1\">\n              {this.state.chatUsers.length === 0 ?\n                <div className=\"gx-p-5\">{this.state.userNotFound}</div>\n                :\n                <ChatUserList chatUsers={this.state.chatUsers}\n                              selectedSectionId={this.state.selectedSectionId}\n                              onSelectUser={this.onSelectUser.bind(this)}/>\n              }\n            </CustomScrollbars>\n          </TabPane>\n          <TabPane label={<IntlMessages id=\"chat.contacts\"/>} tab={<IntlMessages id=\"chat.contacts\"/>} key=\"2\">\n            <CustomScrollbars className=\"gx-chat-sidenav-scroll-tab-2\">\n              {\n                this.state.contactList.length === 0 ?\n                  <div className=\"gx-p-5\">{this.state.userNotFound}</div>\n                  :\n                  <ContactList contactList={this.state.contactList}\n                               selectedSectionId={this.state.selectedSectionId}\n                               onSelectUser={this.onSelectUser.bind(this)}/>\n              }\n            </CustomScrollbars>\n          </TabPane>\n        </Tabs>\n\n\n      </div>\n    </div>\n  };\n  _handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      this.submitComment();\n    }\n  };\n\n  handleChange = (event, value) => {\n    this.setState({selectedTabIndex: value});\n  };\n\n  handleChangeIndex = index => {\n    this.setState({selectedTabIndex: index});\n  };\n  onSelectUser = (user) => {\n    this.setState({\n      loader: true,\n      selectedSectionId: user.id,\n      drawerState: this.props.drawerState,\n      selectedUser: user,\n      conversation: this.state.conversationList.find((data) => data.id === user.id)\n    });\n    setTimeout(() => {\n      this.setState({loader: false});\n    }, 1500);\n  };\n  showCommunication = () => {\n    return (\n      <div className=\"gx-chat-box\">\n        {this.state.selectedUser === null ?\n          <div className=\"gx-comment-box\">\n            <div className=\"gx-fs-80\"><i className=\"icon icon-chat gx-text-muted\"/></div>\n            <h1 className=\"gx-text-muted\">{<IntlMessages id=\"chat.selectUserChat\"/>}</h1>\n            <Button className=\"gx-d-block gx-d-lg-none\" type=\"primary\"\n                    onClick={this.onToggleDrawer.bind(this)}>{<IntlMessages\n              id=\"chat.selectContactChat\"/>}</Button>\n\n          </div>\n          : this.Communication()}\n      </div>)\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      loader: false,\n      userNotFound: 'No user found',\n      drawerState: false,\n      selectedSectionId: '',\n      selectedTabIndex: 1,\n      userState: 1,\n      searchChatUser: '',\n      contactList: users.filter((user) => !user.recent),\n      selectedUser: null,\n      message: '',\n      chatUsers: users.filter((user) => user.recent),\n      conversationList: conversationList,\n      conversation: null\n    }\n  }\n\n  submitComment() {\n    if (this.state.message !== '') {\n      const updatedConversation = this.state.conversation.conversationData.concat({\n        'type': 'sent',\n        'message': this.state.message,\n        'sentAt': Moment().format('hh:mm:ss A'),\n      });\n      this.setState({\n        conversation: {\n          ...this.state.conversation, conversationData: updatedConversation\n        },\n        message: '',\n        conversationList: this.state.conversationList.map(conversationData => {\n          if (conversationData.id === this.state.conversation.id) {\n            return {...this.state.conversation, conversationData: updatedConversation};\n          } else {\n            return conversationData;\n          }\n        })\n      });\n    }\n  }\n\n  updateMessageValue(evt) {\n    this.setState({\n      message: evt.target.value\n    });\n  }\n\n  updateSearchChatUser(evt) {\n    this.setState({\n      searchChatUser: evt.target.value,\n      contactList: this.filterContact(evt.target.value),\n      chatUsers: this.filterUsers(evt.target.value)\n    });\n  }\n\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState\n    });\n  }\n\n  render() {\n    const {loader, userState, drawerState} = this.state;\n    return (\n      <div className=\"gx-main-content\">\n        <div className=\"gx-app-module gx-chat-module\">\n          <div className=\"gx-chat-module-box\">\n            <div className=\"gx-d-block gx-d-lg-none\">\n              <Drawer\n                placement=\"left\"\n                closable={false}\n                visible={drawerState}\n                onClose={this.onToggleDrawer.bind(this)}>\n                {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\n              </Drawer>\n            </div>\n            <div className=\"gx-chat-sidenav gx-d-none gx-d-lg-flex\">\n              {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\n            </div>\n            {loader ?\n              <div className=\"gx-loader-view\">\n                <CircularProgress/>\n              </div> : this.showCommunication()\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}