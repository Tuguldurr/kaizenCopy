{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/extensions/map/googlemap/mapOverlay/Components/MapOverlay.js\";\nimport React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport { GoogleMap, OverlayView, withGoogleMap } from \"react-google-maps\";\nvar STYLES = {\n  mapContainer: {\n    height: 500\n  },\n  overlayView: {\n    background: '#fff',\n    border: '1px solid #ccc',\n    padding: 15\n  }\n};\n\nfunction getPixelPositionOffset(width, height) {\n  return {\n    x: -(width / 2),\n    y: -(height / 2)\n  };\n}\n\nvar OverlayViewExampleGoogleMap = withGoogleMap(function (props) {\n  return React.createElement(GoogleMap, {\n    defaultZoom: 15,\n    defaultCenter: {\n      lat: 47.646935,\n      lng: -122.303763\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(OverlayView, {\n    position: {\n      lat: 47.646935,\n      lng: -122.303763\n    }\n    /*\n     * An alternative to specifying position is specifying bounds.\n     * bounds can either be an instance of google.maps.LatLngBounds\n     * or an object in the following format:\n     * bounds={{\n     *    ne: { lat: 62.400471, lng: -150.005608 },\n     *    sw: { lat: 62.281819, lng: -150.287132 }\n     * }}\n     */\n\n    /*\n     * 1. Specify the pane the OverlayView will be rendered to. For\n     *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\n     *    Defaults to `OverlayView.OVERLAY_LAYER`.\n     */\n    ,\n    mapPaneName: OverlayView.OVERLAY_MOUSE_TARGET\n    /*\n     * 2. Tweak the OverlayView's pixel position. In this case, we're\n     *    centering the content.\n     */\n    ,\n    getPixelPositionOffset: getPixelPositionOffset\n    /*\n     * 3. Create OverlayView content using standard React components.\n     */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"gx-map-content\",\n    style: STYLES.overlayView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"OverlayView\"), React.createElement(Button, {\n    variant: \"raised\",\n    color: \"primary\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"I have been clicked \", props.count, \" time\", props.count === 1 ? \"\" : \"s\"))));\n});\n/*\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\n\nvar MapOverlay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapOverlay, _Component);\n\n  function MapOverlay() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapOverlay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapOverlay)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MapOverlay, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        count: this.state.count + 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(OverlayViewExampleGoogleMap, {\n        loadingElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }),\n        containerElement: React.createElement(\"div\", {\n          style: {\n            height: \"550px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }),\n        count: this.state.count,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MapOverlay;\n}(Component);\n\nexport { MapOverlay as default };","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/extensions/map/googlemap/mapOverlay/Components/MapOverlay.js"],"names":["React","Component","Button","GoogleMap","OverlayView","withGoogleMap","STYLES","mapContainer","height","overlayView","background","border","padding","getPixelPositionOffset","width","x","y","OverlayViewExampleGoogleMap","props","lat","lng","OVERLAY_MOUSE_TARGET","onClick","count","MapOverlay","state","handleClick","bind","setState"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {Button} from \"antd\";\nimport {GoogleMap, OverlayView, withGoogleMap} from \"react-google-maps\";\n\nconst STYLES = {\n  mapContainer: {\n    height: 500,\n  },\n  overlayView: {\n    background: '#fff',\n    border: '1px solid #ccc',\n    padding: 15,\n  },\n};\n\nfunction getPixelPositionOffset(width, height) {\n  return {x: -(width / 2), y: -(height / 2)};\n}\n\nconst OverlayViewExampleGoogleMap = withGoogleMap(props => (\n  <GoogleMap\n    defaultZoom={15}\n    defaultCenter={{lat: 47.646935, lng: -122.303763}}\n  >\n    <OverlayView\n      position={{lat: 47.646935, lng: -122.303763}}\n      /*\n       * An alternative to specifying position is specifying bounds.\n       * bounds can either be an instance of google.maps.LatLngBounds\n       * or an object in the following format:\n       * bounds={{\n       *    ne: { lat: 62.400471, lng: -150.005608 },\n       *    sw: { lat: 62.281819, lng: -150.287132 }\n       * }}\n       */\n      /*\n       * 1. Specify the pane the OverlayView will be rendered to. For\n       *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\n       *    Defaults to `OverlayView.OVERLAY_LAYER`.\n       */\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n      /*\n       * 2. Tweak the OverlayView's pixel position. In this case, we're\n       *    centering the content.\n       */\n      getPixelPositionOffset={getPixelPositionOffset}\n      /*\n       * 3. Create OverlayView content using standard React components.\n       */\n    >\n      <div className=\"gx-map-content\" style={STYLES.overlayView}>\n        <h1>OverlayView</h1>\n        <Button variant=\"raised\" color=\"primary\" onClick={props.onClick}>\n          I have been clicked {props.count} time{props.count === 1 ? `` : `s`}\n        </Button>\n      </div>\n    </OverlayView>\n  </GoogleMap>\n));\n\n/*\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nexport default class MapOverlay extends Component {\n  state = {\n    count: 0,\n  };\n\n  handleClick = this.handleClick.bind(this);\n\n  handleClick() {\n    this.setState({count: this.state.count + 1});\n  }\n\n  render() {\n    return (\n      <OverlayViewExampleGoogleMap\n        loadingElement={<div style={{height: `100%`}}/>}\n        containerElement={<div style={{height: `550px`}}/>}\n        mapElement={<div style={{height: `100%`}}/>}\n        count={this.state.count}\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}