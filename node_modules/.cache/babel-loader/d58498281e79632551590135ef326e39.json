{"ast":null,"code":"var _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Upload/DragDrop.js\";\nimport React from \"react\";\nimport { Card, Icon, message, Upload } from \"antd\";\nvar Dragger = Upload.Dragger;\nvar props = {\n  name: 'file',\n  multiple: true,\n  action: '//jsonplaceholder.typicode.com/posts/',\n  onChange: function onChange(info) {\n    var status = info.file.status;\n\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n\n    if (status === 'done') {\n      message.success(\"\".concat(info.file.name, \" file uploaded successfully.\"));\n    } else if (status === 'error') {\n      message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n    }\n  }\n};\n\nvar DragDrop = function DragDrop() {\n  return React.createElement(Card, {\n    className: \"gx-card\",\n    title: \"DragDrop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Dragger, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"ant-upload-drag-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: \"inbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"ant-upload-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Click or drag file to this area to upload\"), React.createElement(\"p\", {\n    className: \"ant-upload-hint\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\")));\n};\n\nexport default DragDrop;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Upload/DragDrop.js"],"names":["React","Card","Icon","message","Upload","Dragger","props","name","multiple","action","onChange","info","status","file","console","log","fileList","success","error","DragDrop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,MAA7B,QAA0C,MAA1C;AAEA,IAAMC,OAAO,GAAGD,MAAM,CAACC,OAAvB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,MADM;AAEZC,EAAAA,QAAQ,EAAE,IAFE;AAGZC,EAAAA,MAAM,EAAE,uCAHI;AAIZC,EAAAA,QAJY,oBAIHC,IAJG,EAIG;AACb,QAAMC,MAAM,GAAGD,IAAI,CAACE,IAAL,CAAUD,MAAzB;;AACA,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1BE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,IAAjB,EAAuBF,IAAI,CAACK,QAA5B;AACD;;AACD,QAAIJ,MAAM,KAAK,MAAf,EAAuB;AACrBT,MAAAA,OAAO,CAACc,OAAR,WAAmBN,IAAI,CAACE,IAAL,CAAUN,IAA7B;AACD,KAFD,MAEO,IAAIK,MAAM,KAAK,OAAf,EAAwB;AAC7BT,MAAAA,OAAO,CAACe,KAAR,WAAiBP,IAAI,CAACE,IAAL,CAAUN,IAA3B;AACD;AACF;AAdW,CAAd;;AAiBA,IAAMY,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD,oBAAab,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAJF,EAKE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8GALF,CADF,CADF;AAYD,CAbH;;AAgBA,eAAea,QAAf","sourcesContent":["import React from \"react\";\nimport {Card, Icon, message, Upload} from \"antd\";\n\nconst Dragger = Upload.Dragger;\n\nconst props = {\n  name: 'file',\n  multiple: true,\n  action: '//jsonplaceholder.typicode.com/posts/',\n  onChange(info) {\n    const status = info.file.status;\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully.`);\n    } else if (status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n};\n\nconst DragDrop = () => {\n    return (\n      <Card className=\"gx-card\" title=\"DragDrop\">\n        <Dragger {...props}>\n          <p className=\"ant-upload-drag-icon\">\n            <Icon type=\"inbox\"/>\n          </p>\n          <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n          <p className=\"ant-upload-hint\">Support for a single or bulk upload. Strictly prohibit from uploading company\n            data or other band files</p>\n        </Dragger>\n      </Card>\n    );\n  }\n;\n\nexport default DragDrop;\n"]},"metadata":{},"sourceType":"module"}