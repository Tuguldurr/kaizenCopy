{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/components/dashboard/CRM/TaskList.js\";\nimport React from \"react\";\nimport { Tabs } from \"antd\";\nimport Widget from \"components/Widget\";\nimport TaskItem from \"./TaskItem\";\nvar TabPane = Tabs.TabPane;\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TaskList, _React$Component);\n\n  function TaskList(props) {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskList).call(this, props));\n\n    _this.onChange = function (data, index) {\n      _this.setState(function (prevState) {\n        return {\n          taskList: prevState.taskList.map(function (task) {\n            if (task.id === data.id) {\n              task.completed = !data.completed;\n            }\n\n            return task;\n          })\n        };\n      });\n    };\n\n    _this.state = {\n      taskList: props.taskList\n    };\n    return _this;\n  }\n\n  _createClass(TaskList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Widget, {\n        title: \"Task List\",\n        styleName: \"gx-card-tabs\",\n        extra: React.createElement(\"i\", {\n          className: \"icon icon-search-new gx-pointer gx-fs-xxl gx-text-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"All Task\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.state.taskList.map(function (task, index) {\n        return React.createElement(TaskItem, {\n          key: index,\n          data: task,\n          onChange: _this2.onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      })), React.createElement(TabPane, {\n        tab: \"My Task\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.state.taskList.map(function (task, index) {\n        return React.createElement(TaskItem, {\n          key: \"2\" + index,\n          data: task,\n          onChange: _this2.onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return TaskList;\n}(React.Component);\n\nexport default TaskList;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/components/dashboard/CRM/TaskList.js"],"names":["React","Tabs","Widget","TaskItem","TabPane","TaskList","props","onChange","data","index","setState","prevState","taskList","map","task","id","completed","state","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,OAAO,GAAGH,IAAI,CAACG,OAArB;;IAEMC,Q;;;;;AAYJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAXnBC,QAWmB,GAXR,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC1B,YAAKC,QAAL,CAAc,UAACC,SAAD;AAAA,eAAgB;AAC5BC,UAAAA,QAAQ,EAAED,SAAS,CAACC,QAAV,CAAmBC,GAAnB,CAAuB,UAAAC,IAAI,EAAI;AACvC,gBAAIA,IAAI,CAACC,EAAL,KAAYP,IAAI,CAACO,EAArB,EAAyB;AACvBD,cAAAA,IAAI,CAACE,SAAL,GAAiB,CAACR,IAAI,CAACQ,SAAvB;AACD;;AACD,mBAAOF,IAAP;AACD,WALS;AADkB,SAAhB;AAAA,OAAd;AAQD,KAEkB;;AAEjB,UAAKG,KAAL,GAAa;AAACL,MAAAA,QAAQ,EAAEN,KAAK,CAACM;AAAjB,KAAb;AAFiB;AAGlB;;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,SAAS,EAAC,cAApC;AACQ,QAAA,KAAK,EAAE;AAAG,UAAA,SAAS,EAAC,2DAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,gBAAgB,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAC,UAAb;AAAwB,QAAA,GAAG,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKK,KAAL,CAAWL,QAAX,CAAoBC,GAApB,CAAwB,UAACC,IAAD,EAAOL,KAAP;AAAA,eACtB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,KAAf;AAAsB,UAAA,IAAI,EAAEK,IAA5B;AAAkC,UAAA,QAAQ,EAAE,MAAI,CAACP,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADsB;AAAA,OAAxB,CAFJ,CADF,EAOE,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAC,SAAb;AAAuB,QAAA,GAAG,EAAC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKU,KAAL,CAAWL,QAAX,CAAoBC,GAApB,CAAwB,UAACC,IAAD,EAAOL,KAAP;AAAA,eACtB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAE,MAAMA,KAArB;AAA4B,UAAA,IAAI,EAAEK,IAAlC;AAAwC,UAAA,QAAQ,EAAE,MAAI,CAACP,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADsB;AAAA,OAAxB,CADF,CAPF,CAFF,CADF;AAiBD;;;;EAnCoBP,KAAK,CAACkB,S;;AAuC7B,eAAeb,QAAf","sourcesContent":["import React from \"react\";\nimport {Tabs} from \"antd\";\nimport Widget from \"components/Widget\";\nimport TaskItem from \"./TaskItem\";\n\nconst TabPane = Tabs.TabPane;\n\nclass TaskList extends React.Component {\n  onChange = (data, index) => {\n    this.setState((prevState) => ({\n      taskList: prevState.taskList.map(task => {\n        if (task.id === data.id) {\n          task.completed = !data.completed;\n        }\n        return task;\n      })\n    }))\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {taskList: props.taskList}\n  }\n\n  render() {\n    return (\n      <Widget title=\"Task List\" styleName=\"gx-card-tabs\"\n              extra={<i className=\"icon icon-search-new gx-pointer gx-fs-xxl gx-text-primary\"/>}>\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"All Task\" key=\"1\">\n            {\n              this.state.taskList.map((task, index) =>\n                <TaskItem key={index} data={task} onChange={this.onChange}/>)\n            }\n          </TabPane>\n          <TabPane tab=\"My Task\" key=\"2\">{\n            this.state.taskList.map((task, index) =>\n              <TaskItem key={\"2\" + index} data={task} onChange={this.onChange}/>)\n          }</TabPane>\n        </Tabs>\n      </Widget>\n    );\n  }\n}\n\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}