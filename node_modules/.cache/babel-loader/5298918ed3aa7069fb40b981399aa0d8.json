{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Form/Basic.js\";\nimport React, { Component } from \"react\";\nimport { Button, Card, Form, Icon, Input } from \"antd\";\nvar FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(function (field) {\n    return fieldsError[field];\n  });\n}\n\nvar Basic =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Basic, _Component);\n\n  function Basic() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Basic);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Basic)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Basic, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // To disabled submit button at the beginning.\n      this.props.form.validateFields();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldsError = _this$props$form.getFieldsError,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched; // Only show error after a field is touched.\n\n      var userNameError = isFieldTouched('userName') && getFieldError('userName');\n      var passwordError = isFieldTouched('password') && getFieldError('password');\n      return React.createElement(Card, {\n        className: \"gx-card\",\n        title: \"Basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        validateStatus: userNameError ? 'error' : '',\n        help: userNameError || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        validateStatus: passwordError ? 'error' : '',\n        help: passwordError || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"gx-mb-0\",\n        type: \"primary\",\n        htmlType: \"submit\",\n        disabled: hasErrors(getFieldsError()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Log in\"))));\n    }\n  }]);\n\n  return Basic;\n}(Component);\n\nvar WrappedNormalLoginForm = Form.create()(Basic);\nexport default WrappedNormalLoginForm;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Form/Basic.js"],"names":["React","Component","Button","Card","Form","Icon","Input","FormItem","Item","hasErrors","fieldsError","Object","keys","some","field","Basic","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","userNameError","passwordError","rules","required","message","color","WrappedNormalLoginForm","create"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {Button, Card, Form, Icon, Input} from \"antd\";\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass Basic extends Component {\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  componentDidMount() {\n    // To disabled submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  render() {\n\n    const {getFieldDecorator, getFieldsError, getFieldError, isFieldTouched} = this.props.form;\n\n    // Only show error after a field is touched.\n    const userNameError = isFieldTouched('userName') && getFieldError('userName');\n    const passwordError = isFieldTouched('password') && getFieldError('password');\n\n    return (\n      <Card className=\"gx-card\" title=\"Basic\">\n        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n          <FormItem\n            validateStatus={userNameError ? 'error' : ''}\n            help={userNameError || ''}>\n            {getFieldDecorator('userName', {\n              rules: [{required: true, message: 'Please input your username!'}],\n            })(\n              <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>} placeholder=\"Username\"/>\n            )}\n          </FormItem>\n          <FormItem\n            validateStatus={passwordError ? 'error' : ''}\n            help={passwordError || ''}\n          >\n            {getFieldDecorator('password', {\n              rules: [{required: true, message: 'Please input your Password!'}],\n            })(\n              <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\n                     placeholder=\"Password\"/>\n            )}\n          </FormItem>\n          <FormItem>\n            <Button className=\"gx-mb-0\"\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    disabled={hasErrors(getFieldsError())}\n            >\n              Log in\n            </Button>\n          </FormItem>\n        </Form>\n      </Card>\n    );\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create()(Basic);\n\n\nexport default WrappedNormalLoginForm;\n\n"]},"metadata":{},"sourceType":"module"}