{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Form/OtherFormControls.js\";\nimport React, { Component } from \"react\";\nimport { Button, Card, Form, Icon, InputNumber, Radio, Rate, Select, Slider, Switch, Upload } from \"antd\";\nimport \"./otherFormControls.less\";\nvar FormItem = Form.Item;\nvar Option = Select.Option;\nvar RadioButton = Radio.Button;\nvar RadioGroup = Radio.Group;\n\nvar OtherFormControls =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OtherFormControls, _Component);\n\n  function OtherFormControls() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OtherFormControls);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OtherFormControls)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    _this.normFile = function (e) {\n      console.log('Upload event:', e);\n\n      if (Array.isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    };\n\n    return _this;\n  }\n\n  _createClass(OtherFormControls, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: 24,\n          sm: 6\n        },\n        wrapperCol: {\n          xs: 24,\n          sm: 14\n        }\n      };\n      return React.createElement(Card, {\n        className: \"gx-card\",\n        title: \"Other Form Controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Plain Text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"ant-form-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"China\")), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Select\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), getFieldDecorator('select', {\n        rules: [{\n          required: true,\n          message: 'Please select your country!'\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"Please select a country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"china\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"China\"), React.createElement(Option, {\n        value: \"use\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"U.S.A\")))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Select[multiple]\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), getFieldDecorator('select-multiple', {\n        rules: [{\n          required: true,\n          message: 'Please select your favourite colors!',\n          type: 'array'\n        }]\n      })(React.createElement(Select, {\n        mode: \"multiple\",\n        placeholder: \"Please select favourite colors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Red\"), React.createElement(Option, {\n        value: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Green\"), React.createElement(Option, {\n        value: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Blue\")))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"InputNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), getFieldDecorator('input-number', {\n        initialValue: 3\n      })(React.createElement(InputNumber, {\n        min: 1,\n        max: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"ant-form-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \" machines\")), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Switch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), getFieldDecorator('switch', {\n        valuePropName: 'checked'\n      })(React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), getFieldDecorator('slider')(React.createElement(Slider, {\n        marks: {\n          0: 'A',\n          20: 'B',\n          40: 'C',\n          60: 'D',\n          80: 'E',\n          100: 'F'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Radio.Group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), getFieldDecorator('radio-group')(React.createElement(RadioGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        value: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"item 1\"), React.createElement(Radio, {\n        value: \"b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"item 2\"), React.createElement(Radio, {\n        value: \"c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"item 3\")))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Radio.Button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), getFieldDecorator('radio-button')(React.createElement(RadioGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(RadioButton, {\n        value: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"item 1\"), React.createElement(RadioButton, {\n        value: \"b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"item 2\"), React.createElement(RadioButton, {\n        value: \"c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"item 3\")))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Rate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), getFieldDecorator('rate', {\n        initialValue: 3.5\n      })(React.createElement(Rate, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Upload\",\n        extra: \"longgggggggggggggggggggggggggggggggggg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), getFieldDecorator('upload', {\n        valuePropName: 'fileList',\n        getValueFromEvent: this.normFile\n      })(React.createElement(Upload, {\n        name: \"logo\",\n        action: \"/upload.do\",\n        listType: \"picture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), \" Click to upload\")))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Dragger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"dropbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, getFieldDecorator('dragger', {\n        valuePropName: 'fileList',\n        getValueFromEvent: this.normFile\n      })(React.createElement(Upload.Dragger, {\n        name: \"files\",\n        action: \"/upload.do\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"inbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Click or drag file to this area to upload\"), React.createElement(\"p\", {\n        className: \"ant-upload-hint\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Support for a single or bulk upload.\"))))), React.createElement(FormItem, {\n        wrapperCol: {\n          xs: 24,\n          sm: {\n            span: 14,\n            offset: 6\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return OtherFormControls;\n}(Component);\n\nvar WrappedDemo = Form.create()(OtherFormControls);\nexport default WrappedDemo;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Form/OtherFormControls.js"],"names":["React","Component","Button","Card","Form","Icon","InputNumber","Radio","Rate","Select","Slider","Switch","Upload","FormItem","Item","Option","RadioButton","RadioGroup","Group","OtherFormControls","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","normFile","Array","isArray","fileList","getFieldDecorator","formItemLayout","labelCol","xs","sm","wrapperCol","rules","required","message","type","initialValue","valuePropName","getValueFromEvent","span","offset","WrappedDemo","create"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {Button, Card, Form, Icon, InputNumber, Radio, Rate, Select, Slider, Switch, Upload} from \"antd\";\n\nimport \"./otherFormControls.less\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\n\nclass OtherFormControls extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n  normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    const formItemLayout = {\n      labelCol: {xs: 24, sm: 6},\n      wrapperCol: {xs: 24, sm: 14},\n    };\n    return (\n      <Card className=\"gx-card\" title=\"Other Form Controls\">\n        <Form onSubmit={this.handleSubmit}>\n          <FormItem\n            {...formItemLayout}\n            label=\"Plain Text\"\n          >\n            <span className=\"ant-form-text\">China</span>\n          </FormItem>\n          <FormItem\n            {...formItemLayout}\n            label=\"Select\"\n            hasFeedback\n          >\n            {getFieldDecorator('select', {\n              rules: [\n                {required: true, message: 'Please select your country!'},\n              ],\n            })(\n              <Select placeholder=\"Please select a country\">\n                <Option value=\"china\">China</Option>\n                <Option value=\"use\">U.S.A</Option>\n              </Select>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label=\"Select[multiple]\"\n          >\n            {getFieldDecorator('select-multiple', {\n              rules: [\n                {required: true, message: 'Please select your favourite colors!', type: 'array'},\n              ],\n            })(\n              <Select mode=\"multiple\" placeholder=\"Please select favourite colors\">\n                <Option value=\"red\">Red</Option>\n                <Option value=\"green\">Green</Option>\n                <Option value=\"blue\">Blue</Option>\n              </Select>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label=\"InputNumber\"\n          >\n            {getFieldDecorator('input-number', {initialValue: 3})(\n              <InputNumber min={1} max={10}/>\n            )}\n            <span className=\"ant-form-text\"> machines</span>\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label=\"Switch\"\n          >\n            {getFieldDecorator('switch', {valuePropName: 'checked'})(\n              <Switch/>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label=\"Slider\"\n          >\n            {getFieldDecorator('slider')(\n              <Slider marks={{0: 'A', 20: 'B', 40: 'C', 60: 'D', 80: 'E', 100: 'F'}}/>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label=\"Radio.Group\"\n          >\n            {getFieldDecorator('radio-group')(\n              <RadioGroup>\n                <Radio value=\"a\">item 1</Radio>\n                <Radio value=\"b\">item 2</Radio>\n                <Radio value=\"c\">item 3</Radio>\n              </RadioGroup>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label=\"Radio.Button\"\n          >\n            {getFieldDecorator('radio-button')(\n              <RadioGroup>\n                <RadioButton value=\"a\">item 1</RadioButton>\n                <RadioButton value=\"b\">item 2</RadioButton>\n                <RadioButton value=\"c\">item 3</RadioButton>\n              </RadioGroup>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label=\"Rate\"\n          >\n            {getFieldDecorator('rate', {\n              initialValue: 3.5,\n            })(\n              <Rate/>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label=\"Upload\"\n            extra=\"longgggggggggggggggggggggggggggggggggg\"\n          >\n            {getFieldDecorator('upload', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.normFile,\n            })(\n              <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n                <Button>\n                  <Icon type=\"upload\"/> Click to upload\n                </Button>\n              </Upload>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label=\"Dragger\"\n          >\n            <div className=\"dropbox\">\n              {getFieldDecorator('dragger', {\n                valuePropName: 'fileList',\n                getValueFromEvent: this.normFile,\n              })(\n                <Upload.Dragger name=\"files\" action=\"/upload.do\">\n                  <p className=\"ant-upload-drag-icon\">\n                    <Icon type=\"inbox\"/>\n                  </p>\n                  <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                  <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n                </Upload.Dragger>\n              )}\n            </div>\n          </FormItem>\n\n          <FormItem\n            wrapperCol={{xs: 24, sm: {span: 14, offset: 6}}}>\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n          </FormItem>\n        </Form>\n      </Card>\n    );\n  }\n}\n\nconst WrappedDemo = Form.create()(OtherFormControls);\n\n\nexport default WrappedDemo;\n"]},"metadata":{},"sourceType":"module"}