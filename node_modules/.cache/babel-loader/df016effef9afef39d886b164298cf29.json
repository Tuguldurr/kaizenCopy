{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/inBuiltApps/FirebaseCRUD/AddContact/index.js\";\nimport React from \"react\";\nimport { Avatar, Input, Modal } from \"antd\";\nimport IntlMessages from \"util/IntlMessages\";\n\nvar AddContact =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddContact, _React$Component);\n\n  function AddContact(props) {\n    var _this;\n\n    _classCallCheck(this, AddContact);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddContact).call(this, props));\n    var _props$contact = props.contact,\n        id = _props$contact.id,\n        thumb = _props$contact.thumb,\n        name = _props$contact.name,\n        email = _props$contact.email,\n        phone = _props$contact.phone,\n        designation = _props$contact.designation,\n        starred = _props$contact.starred,\n        frequently = _props$contact.frequently;\n    _this.state = {\n      id: id,\n      thumb: thumb,\n      name: name,\n      email: email,\n      phone: phone,\n      designation: designation,\n      starred: starred,\n      frequently: frequently\n    };\n    return _this;\n  }\n\n  _createClass(AddContact, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          contactId = _this$props.contactId,\n          onSaveContact = _this$props.onSaveContact,\n          onContactClose = _this$props.onContactClose,\n          open = _this$props.open,\n          contact = _this$props.contact;\n      var _this$state = this.state,\n          id = _this$state.id,\n          name = _this$state.name,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          designation = _this$state.designation,\n          starred = _this$state.starred,\n          frequently = _this$state.frequently;\n      var thumb = this.state.thumb;\n\n      if (!thumb) {\n        thumb = require('assets/images/placeholder.jpg');\n      }\n\n      return React.createElement(Modal, {\n        title: contact.name === '' ? React.createElement(IntlMessages, {\n          id: \"contact.addContact\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }) : React.createElement(IntlMessages, {\n          id: \"contact.saveContact\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }),\n        toggle: onContactClose,\n        visible: open,\n        closable: false,\n        onOk: function onOk() {\n          if (name === '') return;\n          onContactClose();\n          onSaveContact(contactId, {\n            'id': id,\n            'name': name,\n            'thumb': thumb,\n            'email': email,\n            'phone': phone,\n            'designation': designation,\n            'starred': starred,\n            'frequently': frequently\n          });\n\n          _this2.setState({\n            'id': id + 1,\n            'name': '',\n            'thumb': '',\n            'email': '',\n            'phone': '',\n            'designation': ''\n          });\n        },\n        onCancel: onContactClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-modal-box-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-modal-box-avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        size: \"large\",\n        src: thumb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gx-modal-box-form-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Input, {\n        required: true,\n        placeholder: \"Name\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        },\n        defaultValue: name,\n        margin: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gx-form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Email\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        },\n        value: email,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gx-form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Phone\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            phone: event.target.value\n          });\n        },\n        value: phone,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gx-form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Designation\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            designation: event.target.value\n          });\n        },\n        value: designation,\n        autosize: {\n          minRows: 2,\n          maxRows: 6\n        },\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return AddContact;\n}(React.Component);\n\nexport default AddContact;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/inBuiltApps/FirebaseCRUD/AddContact/index.js"],"names":["React","Avatar","Input","Modal","IntlMessages","AddContact","props","contact","id","thumb","name","email","phone","designation","starred","frequently","state","contactId","onSaveContact","onContactClose","open","require","setState","event","target","value","minRows","maxRows","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Avatar, Input, Modal} from \"antd\";\n\nimport IntlMessages from \"util/IntlMessages\";\n\nclass AddContact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {id, thumb, name, email, phone, designation, starred, frequently} = props.contact;\n    this.state = {\n      id,\n      thumb,\n      name,\n      email,\n      phone,\n      designation,\n      starred,\n      frequently\n    }\n  }\n\n  render() {\n    const {contactId, onSaveContact, onContactClose, open, contact} = this.props;\n    const {id, name, email, phone, designation, starred, frequently} = this.state;\n    let {thumb} = this.state;\n    if (!thumb) {\n      thumb = require('assets/images/placeholder.jpg');\n    }\n    return (\n      <Modal\n        title={contact.name === '' ?\n          <IntlMessages id=\"contact.addContact\"/> :\n          <IntlMessages id=\"contact.saveContact\"/>}\n        toggle={onContactClose} visible={open}\n        closable={false}\n        onOk={() => {\n          if (name === '')\n            return;\n          onContactClose();\n          onSaveContact(contactId,\n            {\n              'id': id,\n              'name': name,\n              'thumb': thumb,\n              'email': email,\n              'phone': phone,\n              'designation': designation,\n              'starred': starred,\n              'frequently': frequently\n            });\n          this.setState({\n            'id': id + 1,\n            'name': '',\n            'thumb': '',\n            'email': '',\n            'phone': '',\n            'designation': '',\n          })\n\n        }}\n        onCancel={onContactClose}>\n\n        <div className=\"gx-modal-box-row\">\n          <div className=\"gx-modal-box-avatar\">\n            <Avatar size=\"large\" src={thumb}/>\n          </div>\n\n          <div className=\"gx-modal-box-form-item\">\n            <div className=\"gx-form-group\">\n              <Input\n                required\n                placeholder=\"Name\"\n                onChange={(event) => this.setState({name: event.target.value})}\n                defaultValue={name}\n                margin=\"none\"/>\n            </div>\n            <div className=\"gx-form-group\">\n              <Input\n                placeholder=\"Email\"\n                onChange={(event) => this.setState({email: event.target.value})}\n                value={email}\n                margin=\"normal\"/>\n            </div>\n            <div className=\"gx-form-group\">\n              <Input\n                placeholder=\"Phone\"\n                onChange={(event) => this.setState({phone: event.target.value})}\n                value={phone}\n                margin=\"normal\"\n              />\n            </div>\n            <div className=\"gx-form-group\">\n              <Input\n                placeholder=\"Designation\"\n                onChange={(event) => this.setState({designation: event.target.value})}\n                value={designation}\n                autosize={{minRows: 2, maxRows: 6}}\n                margin=\"normal\"/>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default AddContact;\n"]},"metadata":{},"sourceType":"module"}