{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/table/Data/ResetFilter.js\";\nimport React from \"react\";\nimport { Button, Card, Table } from \"antd\";\nvar data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\n\nvar ResetFilter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResetFilter, _React$Component);\n\n  function ResetFilter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResetFilter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResetFilter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      filteredInfo: null,\n      sortedInfo: null\n    };\n\n    _this.handleChange = function (pagination, filters, sorter) {\n      console.log('Various parameters', pagination, filters, sorter);\n\n      _this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    };\n\n    _this.clearFilters = function () {\n      _this.setState({\n        filteredInfo: null\n      });\n    };\n\n    _this.clearAll = function () {\n      _this.setState({\n        filteredInfo: null,\n        sortedInfo: null\n      });\n    };\n\n    _this.setAgeSort = function () {\n      _this.setState({\n        sortedInfo: {\n          order: 'descend',\n          columnKey: 'age'\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ResetFilter, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          sortedInfo = _this$state.sortedInfo,\n          filteredInfo = _this$state.filteredInfo;\n      sortedInfo = sortedInfo || {};\n      filteredInfo = filteredInfo || {};\n      var columns = [{\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        filters: [{\n          text: 'Joe',\n          value: 'Joe'\n        }, {\n          text: 'Jim',\n          value: 'Jim'\n        }],\n        filteredValue: filteredInfo.name || null,\n        onFilter: function onFilter(value, record) {\n          return record.name.includes(value);\n        },\n        sorter: function sorter(a, b) {\n          return a.name.length - b.name.length;\n        },\n        sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order\n      }, {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        sorter: function sorter(a, b) {\n          return a.age - b.age;\n        },\n        sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order\n      }, {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n        filters: [{\n          text: 'London',\n          value: 'London'\n        }, {\n          text: 'New York',\n          value: 'New York'\n        }],\n        filteredValue: filteredInfo.address || null,\n        onFilter: function onFilter(value, record) {\n          return record.address.includes(value);\n        },\n        sorter: function sorter(a, b) {\n          return a.address.length - b.address.length;\n        },\n        sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order\n      }];\n      return React.createElement(Card, {\n        title: \"Reset Filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-operations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setAgeSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Sort age\"), React.createElement(Button, {\n        onClick: this.clearFilters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Clear filters\"), React.createElement(Button, {\n        onClick: this.clearAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Clear filters and sorters\")), React.createElement(Table, {\n        className: \"gx-table-responsive\",\n        columns: columns,\n        dataSource: data,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ResetFilter;\n}(React.Component);\n\nexport default ResetFilter;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/table/Data/ResetFilter.js"],"names":["React","Button","Card","Table","data","key","name","age","address","ResetFilter","state","filteredInfo","sortedInfo","handleChange","pagination","filters","sorter","console","log","setState","clearFilters","clearAll","setAgeSort","order","columnKey","columns","title","dataIndex","text","value","filteredValue","onFilter","record","includes","a","b","length","sortOrder","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Card, Table} from \"antd\";\n\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park',\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park',\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park',\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park',\n}];\n\nclass ResetFilter extends React.Component {\n  state = {\n    filteredInfo: null,\n    sortedInfo: null,\n  };\n  handleChange = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  };\n  clearFilters = () => {\n    this.setState({filteredInfo: null});\n  };\n  clearAll = () => {\n    this.setState({\n      filteredInfo: null,\n      sortedInfo: null,\n    });\n  };\n  setAgeSort = () => {\n    this.setState({\n      sortedInfo: {\n        order: 'descend',\n        columnKey: 'age',\n      },\n    });\n  };\n\n  render() {\n    let {sortedInfo, filteredInfo} = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      filters: [\n        {text: 'Joe', value: 'Joe'},\n        {text: 'Jim', value: 'Jim'},\n      ],\n      filteredValue: filteredInfo.name || null,\n      onFilter: (value, record) => record.name.includes(value),\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\n    }, {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      sorter: (a, b) => a.age - b.age,\n      sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\n    }, {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      filters: [\n        {text: 'London', value: 'London'},\n        {text: 'New York', value: 'New York'},\n      ],\n      filteredValue: filteredInfo.address || null,\n      onFilter: (value, record) => record.address.includes(value),\n      sorter: (a, b) => a.address.length - b.address.length,\n      sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\n    }];\n    return (\n      <Card title=\"Reset Filter\">\n        <div className=\"table-operations\">\n          <Button onClick={this.setAgeSort}>Sort age</Button>\n          <Button onClick={this.clearFilters}>Clear filters</Button>\n          <Button onClick={this.clearAll}>Clear filters and sorters</Button>\n        </div>\n        <Table className=\"gx-table-responsive\" columns={columns} dataSource={data} onChange={this.handleChange}/>\n      </Card>\n    );\n  }\n}\n\nexport default ResetFilter;\n"]},"metadata":{},"sourceType":"module"}