{"ast":null,"code":"import _objectSpread from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/inBuiltApps/Todo/index.js\";\nimport React, { Component } from \"react\";\nimport { Button, Checkbox, Drawer, Dropdown, Menu, message } from \"antd\";\nimport CustomScrollbars from \"util/CustomScrollbars\";\nimport toDos from \"./data/todo\";\nimport filters from \"./data/filters\";\nimport labels from \"./data/labels\";\nimport options from \"./data/options\";\nimport todoConversation from \"./data/todoConversation\";\nimport ToDoList from \"components/todo/ToDoList\";\nimport ToDoDetail from \"components/todo/ToDoDetail/index\";\nimport AppModuleHeader from \"components/AppModuleHeader/index\";\nimport IntlMessages from \"util/IntlMessages\";\nimport CircularProgress from \"../../../components/CircularProgress/index\";\nimport Auxiliary from \"../../../util/Auxiliary\";\nvar ITEM_HEIGHT = 34;\n\nvar ToDo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToDo, _Component);\n\n  function ToDo() {\n    var _this;\n\n    _classCallCheck(this, ToDo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToDo).call(this));\n\n    _this.onSortEnd = function (_ref) {\n      var oldIndex = _ref.oldIndex,\n          newIndex = _ref.newIndex;\n\n      _this.setState({\n        toDos: (_this.state.toDos, oldIndex, newIndex)\n      });\n    };\n\n    _this.onLabelSelect = function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget,\n        labelMenuState: !_this.state.labelMenuState\n      });\n    };\n\n    _this.onOptionMenuSelect = function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget,\n        optionMenuState: !_this.state.optionMenuState\n      });\n    };\n\n    _this.onOptionMenuItemSelect = function (e) {\n      switch (e.key) {\n        case 'All':\n          _this.handleRequestClose();\n\n          _this.getAllTodo();\n\n          break;\n\n        case 'None':\n          _this.handleRequestClose();\n\n          _this.getUnselectedAllTodo();\n\n          break;\n\n        case 'Starred':\n          _this.handleRequestClose();\n\n          _this.getStarredToDo();\n\n          break;\n\n        case 'Unstarred':\n          _this.handleRequestClose();\n\n          _this.getUnStarredTodo();\n\n          break;\n\n        case 'Important':\n          _this.handleRequestClose();\n\n          _this.getImportantToDo();\n\n          break;\n\n        case 'Unimportant':\n          _this.handleRequestClose();\n\n          _this.getUnimportantToDo();\n\n          break;\n\n        default:\n          return '';\n      }\n    };\n\n    _this.getAllTodo = function () {\n      var toDos = _this.state.allToDos.map(function (todo) {\n        return todo ? _objectSpread({}, todo, {\n          selected: true\n        }) : todo;\n      });\n\n      _this.setState({\n        selectedToDos: toDos.length,\n        allToDos: toDos,\n        optionName: 'All',\n        toDos: toDos\n      });\n    };\n\n    _this.getUnselectedAllTodo = function () {\n      var toDos = _this.state.allToDos.map(function (todo) {\n        return todo ? _objectSpread({}, todo, {\n          selected: false\n        }) : todo;\n      });\n\n      _this.setState({\n        selectedToDos: 0,\n        allToDos: toDos,\n        optionName: 'None',\n        toDos: toDos\n      });\n    };\n\n    _this.getStarredToDo = function () {\n      var selectedToDos = 0;\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.starred) {\n          selectedToDos++;\n          return _objectSpread({}, todo, {\n            selected: true\n          });\n        }\n\n        return _objectSpread({}, todo, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedToDos: selectedToDos,\n        allToDos: toDos,\n        toDos: toDos.filter(function (todo) {\n          return !todo.deleted;\n        })\n      });\n\n      return toDos;\n    };\n\n    _this.getUnStarredTodo = function () {\n      var selectedToDos = 0;\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (!todo.starred) {\n          selectedToDos++;\n          return _objectSpread({}, todo, {\n            selected: true\n          });\n        }\n\n        return _objectSpread({}, todo, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedToDos: selectedToDos,\n        allToDos: toDos,\n        optionName: 'Unstarred',\n        toDos: toDos.filter(function (todo) {\n          return !todo.deleted;\n        })\n      });\n\n      return toDos;\n    };\n\n    _this.getImportantToDo = function () {\n      var selectedToDos = 0;\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.important) {\n          selectedToDos++;\n          return _objectSpread({}, todo, {\n            selected: true\n          });\n        }\n\n        return _objectSpread({}, todo, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedToDos: selectedToDos,\n        allToDos: toDos,\n        optionName: 'Important',\n        toDos: toDos.filter(function (todo) {\n          return !todo.deleted;\n        })\n      });\n\n      return toDos;\n    };\n\n    _this.getUnimportantToDo = function () {\n      var selectedToDos = 0;\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (!todo.important) {\n          selectedToDos++;\n          return _objectSpread({}, todo, {\n            selected: true\n          });\n        }\n\n        return _objectSpread({}, todo, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedToDos: selectedToDos,\n        allToDos: toDos,\n        optionName: 'Unimportant',\n        toDos: toDos.filter(function (todo) {\n          return !todo.deleted;\n        })\n      });\n\n      return toDos;\n    };\n\n    _this.onLabelMenuItemSelect = function (e) {\n      var label = +e.key;\n\n      _this.handleRequestClose();\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.selected) {\n          if (todo.labels.includes(label.id)) {\n            return _objectSpread({}, todo, {\n              labels: _this.removeLabel(todo, label.id)\n            });\n          } else {\n            return _objectSpread({}, todo, {\n              labels: _this.addLabel(todo, label.id)\n            });\n          }\n        } else {\n          return todo;\n        }\n      });\n\n      _this.setState({\n        alertMessage: 'Label Updated Successfully',\n        showMessage: true,\n        allToDos: toDos,\n        toDos: toDos\n      });\n    };\n\n    _this.handleRequestClose = function () {\n      _this.setState({\n        showMessage: false,\n        addTodo: false,\n        labelMenuState: false,\n        optionMenuState: false\n      });\n    };\n\n    _this.onLabelUpdate = function (data, label) {\n      if (data.labels.includes(label.id)) {\n        data.labels = _this.removeLabel(data, label.id);\n      } else {\n        data.labels = _this.addLabel(data, label.id);\n      }\n\n      _this.handleRequestClose();\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.id === data.id) {\n          return data;\n        } else {\n          return todo;\n        }\n      });\n\n      _this.setState({\n        alertMessage: 'Label Updated Successfully',\n        showMessage: true,\n        currentTodo: data,\n        allToDos: toDos,\n        toDos: toDos\n      });\n    };\n\n    _this.onMarkAsStart = function (data) {\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.id === data.id) {\n          return data;\n        } else {\n          return todo;\n        }\n      });\n\n      _this.setState({\n        alertMessage: 'ToDo Updated Successfully',\n        showMessage: true,\n        allToDos: toDos,\n        toDos: toDos\n      });\n    };\n\n    _this.onToDoUpdate = function (data) {\n      _this.handleRequestClose();\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.id === data.id) {\n          return data;\n        } else {\n          return todo;\n        }\n      });\n\n      _this.setState({\n        alertMessage: 'ToDo Updated Successfully',\n        showMessage: true,\n        currentTodo: data,\n        allToDos: toDos,\n        toDos: toDos\n      });\n    };\n\n    _this.onDeleteToDo = function (data) {\n      var selectedToDos = 0;\n\n      var toDos = _this.state.allToDos.map(function (todo) {\n        if (todo.selected) {\n          selectedToDos++;\n        }\n\n        if (data.id === todo.id) {\n          if (todo.selected) {\n            selectedToDos--;\n          }\n\n          return _objectSpread({}, todo, {\n            deleted: true\n          });\n        } else {\n          return todo;\n        }\n      });\n\n      _this.setState({\n        alertMessage: 'ToDo Deleted Successfully',\n        showMessage: true,\n        allToDos: toDos,\n        currentTodo: null,\n        selectedToDos: selectedToDos,\n        toDos: toDos.filter(function (todo) {\n          return !todo.deleted;\n        })\n      });\n    };\n\n    _this.getNavFilters = function () {\n      return filters.map(function (filter, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            var filterMails = _this.state.allToDos.filter(function (todo) {\n              if (filter.id === 0 && todo.starred) {\n                return todo;\n              } else if (filter.id === 1 && todo.important) {\n                return todo;\n              } else if (filter.id === 2 && todo.important) {\n                return todo;\n              } else if (filter.id === 3 && todo.important) {\n                return todo;\n              } else if (filter.id === 4 && todo.completed) {\n                return todo;\n              } else if (filter.id === 5 && todo.deleted) {\n                return todo;\n              } else return todo;\n            });\n\n            _this.setState({\n              loader: true,\n              currentTodo: null,\n              filter: filter.id,\n              toDos: filterMails\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                loader: false\n              });\n            }, 1500);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: filter.id === _this.state.selectedSectionId ? 'gx-link active' : 'gx-link',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"icon icon-\".concat(filter.icon),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, filter.title)));\n      });\n    };\n\n    _this.getNavLabels = function () {\n      return labels.map(function (label, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            var filterMails = _this.state.allToDos.filter(function (todo) {\n              return todo.labels.includes(label.id);\n            });\n\n            _this.setState({\n              loader: true,\n              currentTodo: null,\n              toDos: filterMails\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                loader: false\n              });\n            }, 1500);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"gx-link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"icon icon-circle gx-text-\".concat(label.color),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, label.title)));\n      });\n    };\n\n    _this.ToDoSideBar = function () {\n      return React.createElement(\"div\", {\n        className: \"gx-module-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-module-side-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-module-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon icon-check-circle-o gx-mr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), React.createElement(IntlMessages, {\n        id: \"sidebar.todoApp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"gx-module-side-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(CustomScrollbars, {\n        className: \"gx-module-side-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-module-add-task\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"raised\",\n        type: \"primary\",\n        className: \"gx-btn-block\",\n        onClick: function onClick() {\n          _this.setState({\n            addTodo: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \" \", React.createElement(IntlMessages, {\n        id: \"todo.addTask\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }), \" \")), React.createElement(\"ul\", {\n        className: \"gx-module-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: function onClick() {\n          _this.setState({\n            currentTodo: null,\n            toDos: _this.state.allToDos\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"gx-link active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon icon-all-contacts gx-pt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"todo.all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      })))), React.createElement(\"li\", {\n        className: \"gx-module-nav-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"todo.filters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      })), _this.getNavFilters(), React.createElement(\"li\", {\n        className: \"gx-module-nav-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"todo.labels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      })), _this.getNavLabels()))));\n    };\n\n    _this.searchTodo = function (searchText) {\n      if (searchText === '') {\n        _this.setState({\n          toDos: _this.state.allToDos.filter(function (todo) {\n            return !todo.deleted;\n          })\n        });\n      } else {\n        var searchToDos = _this.state.allToDos.filter(function (todo) {\n          return !todo.deleted && todo.title.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\n        });\n\n        _this.setState({\n          toDos: searchToDos\n        });\n      }\n    };\n\n    _this.showToDos = function (_ref2) {\n      var currentTodo = _ref2.currentTodo,\n          toDos = _ref2.toDos,\n          conversation = _ref2.conversation,\n          user = _ref2.user;\n      return currentTodo === null ? React.createElement(ToDoList, {\n        toDos: toDos,\n        onSortEnd: _this.onSortEnd,\n        onMarkAsStart: _this.onMarkAsStart.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        onTodoSelect: _this.onTodoSelect.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        onTodoChecked: _this.onTodoChecked.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        useDragHandle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }) : React.createElement(ToDoDetail, {\n        todo: currentTodo,\n        user: user,\n        conversation: conversation,\n        onLabelUpdate: _this.onLabelUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        onToDoUpdate: _this.onToDoUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        onDeleteToDo: _this.onDeleteToDo.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      });\n    };\n\n    _this.optionMenu = function () {\n      return React.createElement(Menu, {\n        id: \"option-menu\",\n        onClick: _this.onOptionMenuItemSelect.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        onClose: _this.handleRequestClose,\n        style: {\n          maxHeight: ITEM_HEIGHT * 5.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, options.map(function (option) {\n        return React.createElement(Menu.Item, {\n          key: option.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }, option.title);\n      }));\n    };\n\n    _this.labelMenu = function () {\n      return React.createElement(Menu, {\n        id: \"label-menu\",\n        onClick: _this.onLabelMenuItemSelect.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        onClose: _this.handleRequestClose,\n        style: {\n          maxHeight: ITEM_HEIGHT * 4.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, labels.map(function (label) {\n        return React.createElement(Menu.Item, {\n          key: label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418\n          },\n          __self: this\n        }, label.title);\n      }));\n    };\n\n    _this.state = {\n      searchTodo: '',\n      alertMessage: '',\n      loader: false,\n      showMessage: false,\n      drawerState: false,\n      optionName: 'None',\n      anchorEl: null,\n      allToDos: toDos,\n      currentTodo: null,\n      user: {\n        name: 'Robert Johnson',\n        email: 'robert.johnson@example.com',\n        avatar: 'https://via.placeholder.com/150x150'\n      },\n      selectedToDos: 0,\n      labelMenuState: false,\n      optionMenuState: false,\n      toDos: toDos,\n      filter: -1,\n      todoConversation: todoConversation,\n      conversation: null\n    };\n    return _this;\n  }\n\n  _createClass(ToDo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.manageHeight();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.manageHeight();\n    }\n  }, {\n    key: \"getToDoConversation\",\n    value: function getToDoConversation(id) {\n      return todoConversation.find(function (conversation) {\n        return conversation.id === id;\n      });\n    }\n  }, {\n    key: \"onTodoChecked\",\n    value: function onTodoChecked(data) {\n      data.selected = !data.selected;\n      var selectedToDos = 0;\n      var toDos = this.state.toDos.map(function (todo) {\n        if (todo.selected) {\n          selectedToDos++;\n        }\n\n        if (todo.id === data.id) {\n          if (todo.selected) {\n            selectedToDos++;\n          }\n\n          return data;\n        } else {\n          return todo;\n        }\n      });\n      this.setState({\n        selectedToDos: selectedToDos,\n        toDos: toDos\n      });\n    }\n  }, {\n    key: \"onAllTodoSelect\",\n    value: function onAllTodoSelect() {\n      var selectAll = this.state.selectedToDos < this.state.toDos.length;\n\n      if (selectAll) {\n        this.getAllTodo();\n      } else {\n        this.getUnselectedAllTodo();\n      }\n    }\n  }, {\n    key: \"onTodoAdd\",\n    value: function onTodoAdd(data) {\n      this.setState({\n        toDos: this.state.allToDos.concat(data),\n        allToDos: this.state.allToDos.concat(data)\n      });\n    }\n  }, {\n    key: \"manageHeight\",\n    value: function manageHeight() {}\n  }, {\n    key: \"onTodoSelect\",\n    value: function onTodoSelect(todo) {\n      var _this2 = this;\n\n      var conversationList = this.getToDoConversation(todo.id);\n\n      if (conversationList) {\n        conversationList = conversationList.conversationData;\n      } else {\n        conversationList = [];\n      }\n\n      this.setState({\n        currentTodo: todo,\n        loader: true,\n        conversation: conversationList\n      });\n      setTimeout(function () {\n        _this2.setState({\n          loader: false\n        });\n      }, 1500);\n    }\n  }, {\n    key: \"removeLabel\",\n    value: function removeLabel(todo, label) {\n      todo.labels.splice(todo.labels.indexOf(label), 1);\n      return todo.labels;\n    }\n  }, {\n    key: \"addLabel\",\n    value: function addLabel(todo, label) {\n      todo.labels = todo.labels.concat(label);\n      return todo.labels;\n    }\n  }, {\n    key: \"onToggleDrawer\",\n    value: function onToggleDrawer() {\n      this.setState({\n        drawerState: !this.state.drawerState\n      });\n    }\n  }, {\n    key: \"updateSearch\",\n    value: function updateSearch(evt) {\n      this.setState({\n        searchTodo: evt.target.value\n      });\n      this.searchTodo(evt.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          selectedToDos = _this$state.selectedToDos,\n          loader = _this$state.loader,\n          drawerState = _this$state.drawerState,\n          toDos = _this$state.toDos,\n          alertMessage = _this$state.alertMessage,\n          showMessage = _this$state.showMessage;\n      return React.createElement(\"div\", {\n        className: \"gx-main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-app-module\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-d-block gx-d-lg-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        placement: \"left\",\n        closable: false,\n        visible: drawerState,\n        onClose: this.onToggleDrawer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, this.ToDoSideBar())), React.createElement(\"div\", {\n        className: \"gx-module-sidenav gx-d-none gx-d-lg-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, this.ToDoSideBar()), React.createElement(\"div\", {\n        className: \"gx-module-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-module-box-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"gx-drawer-btn gx-d-flex gx-d-lg-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon icon-menu gx-icon-btn\",\n        \"aria-label\": \"Menu\",\n        onClick: this.onToggleDrawer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      })), React.createElement(AppModuleHeader, {\n        placeholder: \"Search To Do\",\n        user: this.state.user,\n        onChange: this.updateSearch.bind(this),\n        value: this.state.searchTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gx-module-box-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, this.state.currentTodo === null ? React.createElement(\"div\", {\n        className: \"gx-module-box-topbar gx-module-box-topbar-todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, this.state.toDos.length > 0 ? React.createElement(Auxiliary, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        className: \"gx-icon-btn\",\n        color: \"primary\",\n        indeterminate: selectedToDos > 0 && selectedToDos < toDos.length,\n        checked: selectedToDos > 0,\n        onChange: this.onAllTodoSelect.bind(this),\n        value: \"SelectMail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        overlay: this.optionMenu(),\n        placement: \"bottomRight\",\n        trigger: ['click'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"gx-px-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, \" \", this.state.optionName), React.createElement(\"i\", {\n        className: \"icon icon-charvlet-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      })))) : null, selectedToDos > 0 && React.createElement(Dropdown, {\n        overlay: this.labelMenu(),\n        placement: \"bottomRight\",\n        trigger: ['click'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"gx-icon-btn icon icon-tag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"gx-module-box-topbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon icon-arrow-left gx-icon-btn\",\n        onClick: function onClick() {\n          _this3.setState({\n            currentTodo: null\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      })), loader ? React.createElement(\"div\", {\n        className: \"gx-loader-view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      })) : this.showToDos(this.state)))), showMessage && message.info(React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, alertMessage), 3, this.handleRequestClose));\n    }\n  }]);\n\n  return ToDo;\n}(Component);\n\nexport default ToDo;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/inBuiltApps/Todo/index.js"],"names":["React","Component","Button","Checkbox","Drawer","Dropdown","Menu","message","CustomScrollbars","toDos","filters","labels","options","todoConversation","ToDoList","ToDoDetail","AppModuleHeader","IntlMessages","CircularProgress","Auxiliary","ITEM_HEIGHT","ToDo","onSortEnd","oldIndex","newIndex","setState","state","onLabelSelect","event","anchorEl","currentTarget","labelMenuState","onOptionMenuSelect","optionMenuState","onOptionMenuItemSelect","e","key","handleRequestClose","getAllTodo","getUnselectedAllTodo","getStarredToDo","getUnStarredTodo","getImportantToDo","getUnimportantToDo","allToDos","map","todo","selected","selectedToDos","length","optionName","starred","filter","deleted","important","onLabelMenuItemSelect","label","includes","id","removeLabel","addLabel","alertMessage","showMessage","addTodo","onLabelUpdate","data","currentTodo","onMarkAsStart","onToDoUpdate","onDeleteToDo","getNavFilters","index","filterMails","completed","loader","setTimeout","selectedSectionId","icon","title","getNavLabels","color","ToDoSideBar","searchTodo","searchText","searchToDos","toLowerCase","indexOf","showToDos","conversation","user","bind","onTodoSelect","onTodoChecked","optionMenu","maxHeight","option","labelMenu","drawerState","name","email","avatar","manageHeight","find","selectAll","concat","conversationList","getToDoConversation","conversationData","splice","evt","target","value","onToggleDrawer","updateSearch","onAllTodoSelect","info"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,IAA5C,EAAkDC,OAAlD,QAAgE,MAAhE;AAEA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,IAAMC,WAAW,GAAG,EAApB;;IAEMC,I;;;;;AAsZJ,kBAAc;AAAA;;AAAA;;AACZ;;AADY,UApZdC,SAoZc,GApZF,gBAA0B;AAAA,UAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,UAAdC,QAAc,QAAdA,QAAc;;AACpC,YAAKC,QAAL,CAAc;AACZhB,QAAAA,KAAK,GAAG,MAAKiB,KAAL,CAAWjB,KAAX,EAAkBc,QAAlB,EAA4BC,QAA/B;AADO,OAAd;AAGD,KAgZa;;AAAA,UA/YdG,aA+Yc,GA/YE,UAAAC,KAAK,EAAI;AACvB,YAAKH,QAAL,CAAc;AACZI,QAAAA,QAAQ,EAAED,KAAK,CAACE,aADJ;AAEZC,QAAAA,cAAc,EAAE,CAAC,MAAKL,KAAL,CAAWK;AAFhB,OAAd;AAID,KA0Ya;;AAAA,UAzYdC,kBAyYc,GAzYO,UAAAJ,KAAK,EAAI;AAC5B,YAAKH,QAAL,CAAc;AACZI,QAAAA,QAAQ,EAAED,KAAK,CAACE,aADJ;AAEZG,QAAAA,eAAe,EAAE,CAAC,MAAKP,KAAL,CAAWO;AAFjB,OAAd;AAID,KAoYa;;AAAA,UAnYdC,sBAmYc,GAnYW,UAACC,CAAD,EAAO;AAC9B,cAAQA,CAAC,CAACC,GAAV;AACE,aAAK,KAAL;AACE,gBAAKC,kBAAL;;AACA,gBAAKC,UAAL;;AACA;;AACF,aAAK,MAAL;AACE,gBAAKD,kBAAL;;AACA,gBAAKE,oBAAL;;AACA;;AACF,aAAK,SAAL;AACE,gBAAKF,kBAAL;;AACA,gBAAKG,cAAL;;AACA;;AACF,aAAK,WAAL;AACE,gBAAKH,kBAAL;;AACA,gBAAKI,gBAAL;;AACA;;AACF,aAAK,WAAL;AACE,gBAAKJ,kBAAL;;AACA,gBAAKK,gBAAL;;AACA;;AACF,aAAK,aAAL;AACE,gBAAKL,kBAAL;;AACA,gBAAKM,kBAAL;;AACA;;AACF;AACE,iBAAO,EAAP;AA1BJ;AA4BD,KAsWa;;AAAA,UArWdL,UAqWc,GArWD,YAAM;AACjB,UAAI7B,KAAK,GAAG,MAAKiB,KAAL,CAAWkB,QAAX,CAAoBC,GAApB,CAAwB,UAACC,IAAD;AAAA,eAAUA,IAAI,qBAC7CA,IAD6C;AAEhDC,UAAAA,QAAQ,EAAE;AAFsC,aAG9CD,IAHgC;AAAA,OAAxB,CAAZ;;AAIA,YAAKrB,QAAL,CAAc;AACZuB,QAAAA,aAAa,EAAEvC,KAAK,CAACwC,MADT;AAEZL,QAAAA,QAAQ,EAAEnC,KAFE;AAGZyC,QAAAA,UAAU,EAAE,KAHA;AAIZzC,QAAAA,KAAK,EAAEA;AAJK,OAAd;AAMD,KA0Va;;AAAA,UAzVd8B,oBAyVc,GAzVS,YAAM;AAC3B,UAAI9B,KAAK,GAAG,MAAKiB,KAAL,CAAWkB,QAAX,CAAoBC,GAApB,CAAwB,UAACC,IAAD;AAAA,eAAUA,IAAI,qBAC7CA,IAD6C;AAEhDC,UAAAA,QAAQ,EAAE;AAFsC,aAG9CD,IAHgC;AAAA,OAAxB,CAAZ;;AAIA,YAAKrB,QAAL,CAAc;AACZuB,QAAAA,aAAa,EAAE,CADH;AAEZJ,QAAAA,QAAQ,EAAEnC,KAFE;AAGZyC,QAAAA,UAAU,EAAE,MAHA;AAIZzC,QAAAA,KAAK,EAAEA;AAJK,OAAd;AAMD,KA8Ua;;AAAA,UA7Ud+B,cA6Uc,GA7UG,YAAM;AACrB,UAAIQ,aAAa,GAAG,CAApB;;AACA,UAAIvC,KAAK,GAAG,MAAKiB,KAAL,CAAWkB,QAAX,CAAoBC,GAApB,CAAwB,UAACC,IAAD,EAAU;AAC5C,YAAIA,IAAI,CAACK,OAAT,EAAkB;AAChBH,UAAAA,aAAa;AACb,mCAAWF,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,iCAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANW,CAAZ;;AAOA,YAAKtB,QAAL,CAAc;AACZuB,QAAAA,aAAa,EAAEA,aADH;AAEZJ,QAAAA,QAAQ,EAAEnC,KAFE;AAGZA,QAAAA,KAAK,EAAEA,KAAK,CAAC2C,MAAN,CAAa,UAAAN,IAAI;AAAA,iBAAI,CAACA,IAAI,CAACO,OAAV;AAAA,SAAjB;AAHK,OAAd;;AAKA,aAAO5C,KAAP;AACD,KA8Ta;;AAAA,UA7TdgC,gBA6Tc,GA7TK,YAAM;AACvB,UAAIO,aAAa,GAAG,CAApB;;AACA,UAAIvC,KAAK,GAAG,MAAKiB,KAAL,CAAWkB,QAAX,CAAoBC,GAApB,CAAwB,UAACC,IAAD,EAAU;AAC5C,YAAI,CAACA,IAAI,CAACK,OAAV,EAAmB;AACjBH,UAAAA,aAAa;AACb,mCAAWF,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,iCAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANW,CAAZ;;AAOA,YAAKtB,QAAL,CAAc;AACZuB,QAAAA,aAAa,EAAEA,aADH;AAEZJ,QAAAA,QAAQ,EAAEnC,KAFE;AAGZyC,QAAAA,UAAU,EAAE,WAHA;AAIZzC,QAAAA,KAAK,EAAEA,KAAK,CAAC2C,MAAN,CAAa,UAAAN,IAAI;AAAA,iBAAI,CAACA,IAAI,CAACO,OAAV;AAAA,SAAjB;AAJK,OAAd;;AAMA,aAAO5C,KAAP;AACD,KA6Sa;;AAAA,UA5SdiC,gBA4Sc,GA5SK,YAAM;AACvB,UAAIM,aAAa,GAAG,CAApB;;AACA,UAAIvC,KAAK,GAAG,MAAKiB,KAAL,CAAWkB,QAAX,CAAoBC,GAApB,CAAwB,UAACC,IAAD,EAAU;AAC5C,YAAIA,IAAI,CAACQ,SAAT,EAAoB;AAClBN,UAAAA,aAAa;AACb,mCAAWF,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,iCAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANW,CAAZ;;AAOA,YAAKtB,QAAL,CAAc;AACZuB,QAAAA,aAAa,EAAEA,aADH;AAEZJ,QAAAA,QAAQ,EAAEnC,KAFE;AAGZyC,QAAAA,UAAU,EAAE,WAHA;AAIZzC,QAAAA,KAAK,EAAEA,KAAK,CAAC2C,MAAN,CAAa,UAAAN,IAAI;AAAA,iBAAI,CAACA,IAAI,CAACO,OAAV;AAAA,SAAjB;AAJK,OAAd;;AAMA,aAAO5C,KAAP;AACD,KA4Ra;;AAAA,UA3RdkC,kBA2Rc,GA3RO,YAAM;AACzB,UAAIK,aAAa,GAAG,CAApB;;AACA,UAAIvC,KAAK,GAAG,MAAKiB,KAAL,CAAWkB,QAAX,CAAoBC,GAApB,CAAwB,UAACC,IAAD,EAAU;AAC5C,YAAI,CAACA,IAAI,CAACQ,SAAV,EAAqB;AACnBN,UAAAA,aAAa;AACb,mCAAWF,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,iCAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANW,CAAZ;;AAOA,YAAKtB,QAAL,CAAc;AACZuB,QAAAA,aAAa,EAAEA,aADH;AAEZJ,QAAAA,QAAQ,EAAEnC,KAFE;AAGZyC,QAAAA,UAAU,EAAE,aAHA;AAIZzC,QAAAA,KAAK,EAAEA,KAAK,CAAC2C,MAAN,CAAa,UAAAN,IAAI;AAAA,iBAAI,CAACA,IAAI,CAACO,OAAV;AAAA,SAAjB;AAJK,OAAd;;AAOA,aAAO5C,KAAP;AACD,KA0Qa;;AAAA,UAzQd8C,qBAyQc,GAzQU,UAACpB,CAAD,EAAO;AAC7B,UAAMqB,KAAK,GAAG,CAACrB,CAAC,CAACC,GAAjB;;AACA,YAAKC,kBAAL;;AACA,UAAM5B,KAAK,GAAG,MAAKiB,KAAL,CAAWkB,QAAX,CAAoBC,GAApB,CAAwB,UAAAC,IAAI,EAAI;AAC1C,YAAIA,IAAI,CAACC,QAAT,EAAmB;AACjB,cAAID,IAAI,CAACnC,MAAL,CAAY8C,QAAZ,CAAqBD,KAAK,CAACE,EAA3B,CAAJ,EAAoC;AAClC,qCAAWZ,IAAX;AAAiBnC,cAAAA,MAAM,EAAE,MAAKgD,WAAL,CAAiBb,IAAjB,EAAuBU,KAAK,CAACE,EAA7B;AAAzB;AACD,WAFD,MAEO;AACL,qCAAWZ,IAAX;AAAiBnC,cAAAA,MAAM,EAAE,MAAKiD,QAAL,CAAcd,IAAd,EAAoBU,KAAK,CAACE,EAA1B;AAAzB;AACD;AACF,SAND,MAMO;AACL,iBAAOZ,IAAP;AACD;AACF,OAVW,CAAd;;AAYA,YAAKrB,QAAL,CAAc;AACZoC,QAAAA,YAAY,EAAE,4BADF;AAEZC,QAAAA,WAAW,EAAE,IAFD;AAGZlB,QAAAA,QAAQ,EAAEnC,KAHE;AAIZA,QAAAA,KAAK,EAAEA;AAJK,OAAd;AAMD,KAoPa;;AAAA,UAnPd4B,kBAmPc,GAnPO,YAAM;AACzB,YAAKZ,QAAL,CAAc;AAACqC,QAAAA,WAAW,EAAE,KAAd;AAAqBC,QAAAA,OAAO,EAAE,KAA9B;AAAqChC,QAAAA,cAAc,EAAE,KAArD;AAA4DE,QAAAA,eAAe,EAAE;AAA7E,OAAd;AACD,KAiPa;;AAAA,UAhPd+B,aAgPc,GAhPE,UAACC,IAAD,EAAOT,KAAP,EAAiB;AAC/B,UAAIS,IAAI,CAACtD,MAAL,CAAY8C,QAAZ,CAAqBD,KAAK,CAACE,EAA3B,CAAJ,EAAoC;AAClCO,QAAAA,IAAI,CAACtD,MAAL,GAAc,MAAKgD,WAAL,CAAiBM,IAAjB,EAAuBT,KAAK,CAACE,EAA7B,CAAd;AACD,OAFD,MAEO;AACLO,QAAAA,IAAI,CAACtD,MAAL,GAAc,MAAKiD,QAAL,CAAcK,IAAd,EAAoBT,KAAK,CAACE,EAA1B,CAAd;AACD;;AACD,YAAKrB,kBAAL;;AACA,UAAM5B,KAAK,GAAG,MAAKiB,KAAL,CAAWkB,QAAX,CAAoBC,GAApB,CAAwB,UAAAC,IAAI,EAAI;AAC1C,YAAIA,IAAI,CAACY,EAAL,KAAYO,IAAI,CAACP,EAArB,EAAyB;AACvB,iBAAOO,IAAP;AACD,SAFD,MAEO;AACL,iBAAOnB,IAAP;AACD;AACF,OANW,CAAd;;AASA,YAAKrB,QAAL,CAAc;AACZoC,QAAAA,YAAY,EAAE,4BADF;AAEZC,QAAAA,WAAW,EAAE,IAFD;AAGZI,QAAAA,WAAW,EAAED,IAHD;AAIZrB,QAAAA,QAAQ,EAAEnC,KAJE;AAKZA,QAAAA,KAAK,EAAEA;AALK,OAAd;AAOD,KAyNa;;AAAA,UAxNd0D,aAwNc,GAxNE,UAACF,IAAD,EAAU;AACxB,UAAMxD,KAAK,GAAG,MAAKiB,KAAL,CAAWkB,QAAX,CAAoBC,GAApB,CAAwB,UAAAC,IAAI,EAAI;AAC5C,YAAIA,IAAI,CAACY,EAAL,KAAYO,IAAI,CAACP,EAArB,EAAyB;AACvB,iBAAOO,IAAP;AACD,SAFD,MAEO;AACL,iBAAOnB,IAAP;AACD;AACF,OANa,CAAd;;AAOA,YAAKrB,QAAL,CAAc;AACZoC,QAAAA,YAAY,EAAE,2BADF;AAEZC,QAAAA,WAAW,EAAE,IAFD;AAGZlB,QAAAA,QAAQ,EAAEnC,KAHE;AAIZA,QAAAA,KAAK,EAAEA;AAJK,OAAd;AAMD,KA0Ma;;AAAA,UAxMd2D,YAwMc,GAxMC,UAACH,IAAD,EAAU;AACvB,YAAK5B,kBAAL;;AACA,UAAM5B,KAAK,GAAG,MAAKiB,KAAL,CAAWkB,QAAX,CAAoBC,GAApB,CAAwB,UAAAC,IAAI,EAAI;AAC5C,YAAIA,IAAI,CAACY,EAAL,KAAYO,IAAI,CAACP,EAArB,EAAyB;AACvB,iBAAOO,IAAP;AACD,SAFD,MAEO;AACL,iBAAOnB,IAAP;AACD;AACF,OANa,CAAd;;AAOA,YAAKrB,QAAL,CAAc;AACZoC,QAAAA,YAAY,EAAE,2BADF;AAEZC,QAAAA,WAAW,EAAE,IAFD;AAGZI,QAAAA,WAAW,EAAED,IAHD;AAIZrB,QAAAA,QAAQ,EAAEnC,KAJE;AAKZA,QAAAA,KAAK,EAAEA;AALK,OAAd;AAOD,KAwLa;;AAAA,UArLd4D,YAqLc,GArLC,UAACJ,IAAD,EAAU;AACvB,UAAIjB,aAAa,GAAG,CAApB;;AACA,UAAMvC,KAAK,GAAG,MAAKiB,KAAL,CAAWkB,QAAX,CAAoBC,GAApB,CAAwB,UAAAC,IAAI,EAAI;AAC1C,YAAIA,IAAI,CAACC,QAAT,EAAmB;AACjBC,UAAAA,aAAa;AACd;;AACD,YAAIiB,IAAI,CAACP,EAAL,KAAYZ,IAAI,CAACY,EAArB,EAAyB;AACvB,cAAIZ,IAAI,CAACC,QAAT,EAAmB;AACjBC,YAAAA,aAAa;AACd;;AACD,mCAAWF,IAAX;AAAiBO,YAAAA,OAAO,EAAE;AAA1B;AACD,SALD,MAKO;AACL,iBAAOP,IAAP;AACD;AACF,OAZW,CAAd;;AAcA,YAAKrB,QAAL,CAAc;AACZoC,QAAAA,YAAY,EAAE,2BADF;AAEZC,QAAAA,WAAW,EAAE,IAFD;AAGZlB,QAAAA,QAAQ,EAAEnC,KAHE;AAIZyD,QAAAA,WAAW,EAAE,IAJD;AAKZlB,QAAAA,aAAa,EAAEA,aALH;AAMZvC,QAAAA,KAAK,EAAEA,KAAK,CAAC2C,MAAN,CAAa,UAACN,IAAD;AAAA,iBAAU,CAACA,IAAI,CAACO,OAAhB;AAAA,SAAb;AANK,OAAd;AASD,KA4Ja;;AAAA,UA3JdiB,aA2Jc,GA3JE,YAAM;AACpB,aAAO5D,OAAO,CAACmC,GAAR,CAAY,UAACO,MAAD,EAASmB,KAAT;AAAA,eACjB;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,OAAO,EAAE,mBAAM;AAC7B,gBAAMC,WAAW,GAAG,MAAK9C,KAAL,CAAWkB,QAAX,CAAoBQ,MAApB,CAA2B,UAAAN,IAAI,EAAI;AACrD,kBAAIM,MAAM,CAACM,EAAP,KAAc,CAAd,IAAmBZ,IAAI,CAACK,OAA5B,EAAqC;AACnC,uBAAOL,IAAP;AACD,eAFD,MAEO,IAAIM,MAAM,CAACM,EAAP,KAAc,CAAd,IAAmBZ,IAAI,CAACQ,SAA5B,EAAuC;AAC5C,uBAAOR,IAAP;AACD,eAFM,MAEA,IAAIM,MAAM,CAACM,EAAP,KAAc,CAAd,IAAmBZ,IAAI,CAACQ,SAA5B,EAAuC;AAC5C,uBAAOR,IAAP;AACD,eAFM,MAEA,IAAIM,MAAM,CAACM,EAAP,KAAc,CAAd,IAAmBZ,IAAI,CAACQ,SAA5B,EAAuC;AAC5C,uBAAOR,IAAP;AACD,eAFM,MAEA,IAAIM,MAAM,CAACM,EAAP,KAAc,CAAd,IAAmBZ,IAAI,CAAC2B,SAA5B,EAAuC;AAC5C,uBAAO3B,IAAP;AACD,eAFM,MAEA,IAAIM,MAAM,CAACM,EAAP,KAAc,CAAd,IAAmBZ,IAAI,CAACO,OAA5B,EAAqC;AAC1C,uBAAOP,IAAP;AACD,eAFM,MAGL,OAAOA,IAAP;AACH,aAfmB,CAApB;;AAgBA,kBAAKrB,QAAL,CAAc;AACZiD,cAAAA,MAAM,EAAE,IADI;AAEZR,cAAAA,WAAW,EAAE,IAFD;AAGZd,cAAAA,MAAM,EAAEA,MAAM,CAACM,EAHH;AAIZjD,cAAAA,KAAK,EAAE+D;AAJK,aAAd;;AAMAG,YAAAA,UAAU,CAAC,YAAM;AACf,oBAAKlD,QAAL,CAAc;AAACiD,gBAAAA,MAAM,EAAE;AAAT,eAAd;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WA1BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA4BE;AAAM,UAAA,SAAS,EAAEtB,MAAM,CAACM,EAAP,KAAc,MAAKhC,KAAL,CAAWkD,iBAAzB,GAA6C,gBAA7C,GAAgE,SAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,sBAAexB,MAAM,CAACyB,IAAtB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOzB,MAAM,CAAC0B,KAAd,CAFF,CA5BF,CADiB;AAAA,OAAZ,CAAP;AAmCD,KAuHa;;AAAA,UAtHdC,YAsHc,GAtHC,YAAM;AACnB,aAAOpE,MAAM,CAACkC,GAAP,CAAW,UAACW,KAAD,EAAQe,KAAR;AAAA,eAChB;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,OAAO,EAAE,mBAAM;AAC7B,gBAAMC,WAAW,GAAG,MAAK9C,KAAL,CAAWkB,QAAX,CAAoBQ,MAApB,CAA2B,UAAAN,IAAI;AAAA,qBAAIA,IAAI,CAACnC,MAAL,CAAY8C,QAAZ,CAAqBD,KAAK,CAACE,EAA3B,CAAJ;AAAA,aAA/B,CAApB;;AACA,kBAAKjC,QAAL,CAAc;AACZiD,cAAAA,MAAM,EAAE,IADI;AAEZR,cAAAA,WAAW,EAAE,IAFD;AAGZzD,cAAAA,KAAK,EAAE+D;AAHK,aAAd;;AAKAG,YAAAA,UAAU,CAAC,YAAM;AACf,oBAAKlD,QAAL,CAAc;AAACiD,gBAAAA,MAAM,EAAE;AAAT,eAAd;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAYE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,qCAA8BlB,KAAK,CAACwB,KAApC,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOxB,KAAK,CAACsB,KAAb,CAFF,CAZF,CADgB;AAAA,OAAX,CAAP;AAmBD,KAkGa;;AAAA,UAjGdG,WAiGc,GAjGA,YAAM;AAClB,aAAO;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADK,EAQL;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,SAAS,EAAC,uBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,IAAI,EAAC,SAA9B;AAAwC,QAAA,SAAS,EAAC,cAAlD;AACQ,QAAA,OAAO,EAAE,mBAAM;AACb,gBAAKxD,QAAL,CAAc;AAACsC,YAAAA,OAAO,EAAE;AAAV,WAAd;AACD,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAGY,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHZ,MADF,CADF,EAOE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAI,QAAA,OAAO,EAAE,mBAAM;AACjB,gBAAKtC,QAAL,CAAc;AACZyC,YAAAA,WAAW,EAAE,IADD;AAEZzD,YAAAA,KAAK,EAAE,MAAKiB,KAAL,CAAWkB;AAFN,WAAd;AAID,SALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAFF,CAPF,CAFF,EAeE;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAfF,EAmBG,MAAK0B,aAAL,EAnBH,EAqBE;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CArBF,EAwBG,MAAKS,YAAL,EAxBH,CAPF,CADF,CARK,CAAP;AA6CD,KAmDa;;AAAA,UAlDdG,UAkDc,GAlDD,UAACC,UAAD,EAAgB;AAC3B,UAAIA,UAAU,KAAK,EAAnB,EAAuB;AACrB,cAAK1D,QAAL,CAAc;AAAChB,UAAAA,KAAK,EAAE,MAAKiB,KAAL,CAAWkB,QAAX,CAAoBQ,MAApB,CAA2B,UAACN,IAAD;AAAA,mBAAU,CAACA,IAAI,CAACO,OAAhB;AAAA,WAA3B;AAAR,SAAd;AACD,OAFD,MAEO;AACL,YAAM+B,WAAW,GAAG,MAAK1D,KAAL,CAAWkB,QAAX,CAAoBQ,MAApB,CAA2B,UAACN,IAAD;AAAA,iBAC7C,CAACA,IAAI,CAACO,OAAN,IAAiBP,IAAI,CAACgC,KAAL,CAAWO,WAAX,GAAyBC,OAAzB,CAAiCH,UAAU,CAACE,WAAX,EAAjC,IAA6D,CAAC,CADlC;AAAA,SAA3B,CAApB;;AAEA,cAAK5D,QAAL,CAAc;AACZhB,UAAAA,KAAK,EAAE2E;AADK,SAAd;AAGD;AACF,KAwCa;;AAAA,UAvCdG,SAuCc,GAvCF,iBAA8C;AAAA,UAA5CrB,WAA4C,SAA5CA,WAA4C;AAAA,UAA/BzD,KAA+B,SAA/BA,KAA+B;AAAA,UAAxB+E,YAAwB,SAAxBA,YAAwB;AAAA,UAAVC,IAAU,SAAVA,IAAU;AACxD,aAAOvB,WAAW,KAAK,IAAhB,GACL,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEzD,KAAjB;AAAwB,QAAA,SAAS,EAAE,MAAKa,SAAxC;AACU,QAAA,aAAa,EAAE,MAAK6C,aAAL,CAAmBuB,IAAnB,uDADzB;AAEU,QAAA,YAAY,EAAE,MAAKC,YAAL,CAAkBD,IAAlB,uDAFxB;AAGU,QAAA,aAAa,EAAE,MAAKE,aAAL,CAAmBF,IAAnB,uDAHzB;AAGwD,QAAA,aAAa,EAAE,IAHvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,GAML,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAExB,WAAlB;AAA+B,QAAA,IAAI,EAAEuB,IAArC;AACY,QAAA,YAAY,EAAED,YAD1B;AAEY,QAAA,aAAa,EAAE,MAAKxB,aAAL,CAAmB0B,IAAnB,uDAF3B;AAGY,QAAA,YAAY,EAAE,MAAKtB,YAAL,CAAkBsB,IAAlB,uDAH1B;AAIY,QAAA,YAAY,EAAE,MAAKrB,YAAL,CAAkBqB,IAAlB,uDAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF;AAWD,KA2Ba;;AAAA,UA1BdG,UA0Bc,GA1BD,YAAM;AACjB,aAAQ,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,aAAT;AAAuB,QAAA,OAAO,EAAE,MAAK3D,sBAAL,CAA4BwD,IAA5B,uDAAhC;AACM,QAAA,OAAO,EAAE,MAAKrD,kBADpB;AAEM,QAAA,KAAK,EAAE;AAACyD,UAAAA,SAAS,EAAE1E,WAAW,GAAG;AAA1B,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGLR,OAAO,CAACiC,GAAR,CAAY,UAAAkD,MAAM;AAAA,eACjB,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAEA,MAAM,CAACjB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEGiB,MAAM,CAACjB,KAFV,CADiB;AAAA,OAAlB,CAHK,CAAR;AAWD,KAca;;AAAA,UAbdkB,SAac,GAbF,YAAM;AAChB,aACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAsB,QAAA,OAAO,EAAE,MAAKzC,qBAAL,CAA2BmC,IAA3B,uDAA/B;AACM,QAAA,OAAO,EAAE,MAAKrD,kBADpB;AAEM,QAAA,KAAK,EAAE;AAACyD,UAAAA,SAAS,EAAE1E,WAAW,GAAG;AAA1B,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGT,MAAM,CAACkC,GAAP,CAAW,UAAAW,KAAK;AAAA,eACf,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,KAAK,CAACsB,KADT,CADe;AAAA,OAAhB,CAHH,CADF;AAUD,KAEa;;AAEZ,UAAKpD,KAAL,GAAa;AACXwD,MAAAA,UAAU,EAAE,EADD;AAEXrB,MAAAA,YAAY,EAAE,EAFH;AAGXa,MAAAA,MAAM,EAAE,KAHG;AAIXZ,MAAAA,WAAW,EAAE,KAJF;AAKXmC,MAAAA,WAAW,EAAE,KALF;AAMX/C,MAAAA,UAAU,EAAE,MAND;AAOXrB,MAAAA,QAAQ,EAAE,IAPC;AAQXe,MAAAA,QAAQ,EAAEnC,KARC;AASXyD,MAAAA,WAAW,EAAE,IATF;AAUXuB,MAAAA,IAAI,EAAE;AACJS,QAAAA,IAAI,EAAE,gBADF;AAEJC,QAAAA,KAAK,EAAE,4BAFH;AAGJC,QAAAA,MAAM,EAAE;AAHJ,OAVK;AAeXpD,MAAAA,aAAa,EAAE,CAfJ;AAgBXjB,MAAAA,cAAc,EAAE,KAhBL;AAiBXE,MAAAA,eAAe,EAAE,KAjBN;AAkBXxB,MAAAA,KAAK,EAAEA,KAlBI;AAmBX2C,MAAAA,MAAM,EAAE,CAAC,CAnBE;AAoBXvC,MAAAA,gBAAgB,EAAhBA,gBApBW;AAqBX2E,MAAAA,YAAY,EAAE;AArBH,KAAb;AAFY;AAyBb;;;;wCAEmB;AAClB,WAAKa,YAAL;AACD;;;yCAEoB;AACnB,WAAKA,YAAL;AACD;;;wCAEmB3C,E,EAAI;AACtB,aAAO7C,gBAAgB,CAACyF,IAAjB,CAAsB,UAACd,YAAD;AAAA,eAAkBA,YAAY,CAAC9B,EAAb,KAAoBA,EAAtC;AAAA,OAAtB,CAAP;AACD;;;kCAEaO,I,EAAM;AAClBA,MAAAA,IAAI,CAAClB,QAAL,GAAgB,CAACkB,IAAI,CAAClB,QAAtB;AACA,UAAIC,aAAa,GAAG,CAApB;AACA,UAAMvC,KAAK,GAAG,KAAKiB,KAAL,CAAWjB,KAAX,CAAiBoC,GAAjB,CAAqB,UAAAC,IAAI,EAAI;AACvC,YAAIA,IAAI,CAACC,QAAT,EAAmB;AACjBC,UAAAA,aAAa;AACd;;AACD,YAAIF,IAAI,CAACY,EAAL,KAAYO,IAAI,CAACP,EAArB,EAAyB;AACvB,cAAIZ,IAAI,CAACC,QAAT,EAAmB;AACjBC,YAAAA,aAAa;AACd;;AACD,iBAAOiB,IAAP;AACD,SALD,MAKO;AACL,iBAAOnB,IAAP;AACD;AACF,OAZW,CAAd;AAcA,WAAKrB,QAAL,CAAc;AACZuB,QAAAA,aAAa,EAAEA,aADH;AAEZvC,QAAAA,KAAK,EAAEA;AAFK,OAAd;AAID;;;sCAEiB;AAChB,UAAM8F,SAAS,GAAG,KAAK7E,KAAL,CAAWsB,aAAX,GAA2B,KAAKtB,KAAL,CAAWjB,KAAX,CAAiBwC,MAA9D;;AACA,UAAIsD,SAAJ,EAAe;AACb,aAAKjE,UAAL;AACD,OAFD,MAEO;AACL,aAAKC,oBAAL;AACD;AACF;;;8BAES0B,I,EAAM;AACd,WAAKxC,QAAL,CACE;AACEhB,QAAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWkB,QAAX,CAAoB4D,MAApB,CAA2BvC,IAA3B,CADT;AAEErB,QAAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWkB,QAAX,CAAoB4D,MAApB,CAA2BvC,IAA3B;AAFZ,OADF;AAMD;;;mCAEc,CACd;;;iCAEYnB,I,EAAM;AAAA;;AACjB,UAAI2D,gBAAgB,GAAG,KAAKC,mBAAL,CAAyB5D,IAAI,CAACY,EAA9B,CAAvB;;AACA,UAAI+C,gBAAJ,EAAsB;AACpBA,QAAAA,gBAAgB,GAAGA,gBAAgB,CAACE,gBAApC;AACD,OAFD,MAEO;AACLF,QAAAA,gBAAgB,GAAG,EAAnB;AACD;;AACD,WAAKhF,QAAL,CAAc;AACZyC,QAAAA,WAAW,EAAEpB,IADD;AAEZ4B,QAAAA,MAAM,EAAE,IAFI;AAGZc,QAAAA,YAAY,EAAEiB;AAHF,OAAd;AAKA9B,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAAClD,QAAL,CAAc;AAACiD,UAAAA,MAAM,EAAE;AAAT,SAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;;;gCAEW5B,I,EAAMU,K,EAAO;AACvBV,MAAAA,IAAI,CAACnC,MAAL,CAAYiG,MAAZ,CAAmB9D,IAAI,CAACnC,MAAL,CAAY2E,OAAZ,CAAoB9B,KAApB,CAAnB,EAA+C,CAA/C;AACA,aAAOV,IAAI,CAACnC,MAAZ;AACD;;;6BAEQmC,I,EAAMU,K,EAAO;AACpBV,MAAAA,IAAI,CAACnC,MAAL,GAAcmC,IAAI,CAACnC,MAAL,CAAY6F,MAAZ,CAAmBhD,KAAnB,CAAd;AACA,aAAOV,IAAI,CAACnC,MAAZ;AACD;;;qCAEgB;AACf,WAAKc,QAAL,CAAc;AACZwE,QAAAA,WAAW,EAAE,CAAC,KAAKvE,KAAL,CAAWuE;AADb,OAAd;AAGD;;;iCAEYY,G,EAAK;AAChB,WAAKpF,QAAL,CAAc;AACZyD,QAAAA,UAAU,EAAE2B,GAAG,CAACC,MAAJ,CAAWC;AADX,OAAd;AAGA,WAAK7B,UAAL,CAAgB2B,GAAG,CAACC,MAAJ,CAAWC,KAA3B;AACD;;;6BAEQ;AAAA;;AAAA,wBACwE,KAAKrF,KAD7E;AAAA,UACAsB,aADA,eACAA,aADA;AAAA,UACe0B,MADf,eACeA,MADf;AAAA,UACuBuB,WADvB,eACuBA,WADvB;AAAA,UACoCxF,KADpC,eACoCA,KADpC;AAAA,UAC2CoD,YAD3C,eAC2CA,YAD3C;AAAA,UACyDC,WADzD,eACyDA,WADzD;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,OAAO,EAAEmC,WAHX;AAIE,QAAA,OAAO,EAAE,KAAKe,cAAL,CAAoBtB,IAApB,CAAyB,IAAzB,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,KAAKT,WAAL,EALH,CADF,CADF,EAUE;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,WAAL,EADH,CAVF,EAcE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAM,QAAA,SAAS,EAAC,sCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,4BAAb;AAA0C,sBAAW,MAArD;AACG,QAAA,OAAO,EAAE,KAAK+B,cAAL,CAAoBtB,IAApB,CAAyB,IAAzB,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFF,EAME,oBAAC,eAAD;AAAiB,QAAA,WAAW,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAE,KAAKhE,KAAL,CAAW+D,IAA7D;AACiB,QAAA,QAAQ,EAAE,KAAKwB,YAAL,CAAkBvB,IAAlB,CAAuB,IAAvB,CAD3B;AAEiB,QAAA,KAAK,EAAE,KAAKhE,KAAL,CAAWwD,UAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,EAWE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKxD,KAAL,CAAWwC,WAAX,KAA2B,IAA3B,GACC;AAAK,QAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKxC,KAAL,CAAWjB,KAAX,CAAiBwC,MAAjB,GAA0B,CAA1B,GACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,aAApB;AAAkC,QAAA,KAAK,EAAC,SAAxC;AACU,QAAA,aAAa,EAAED,aAAa,GAAG,CAAhB,IAAqBA,aAAa,GAAGvC,KAAK,CAACwC,MADpE;AAEU,QAAA,OAAO,EAAED,aAAa,GAAG,CAFnC;AAGU,QAAA,QAAQ,EAAE,KAAKkE,eAAL,CAAqBxB,IAArB,CAA0B,IAA1B,CAHpB;AAIU,QAAA,KAAK,EAAC,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKG,UAAL,EAAnB;AAAsC,QAAA,SAAS,EAAC,aAAhD;AAA8D,QAAA,OAAO,EAAE,CAAC,OAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA4B,KAAKnE,KAAL,CAAWwB,UAAvC,CADF,EAEE;AAAG,QAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CANF,CADD,GAagB,IAdnB,EAgBKF,aAAa,GAAG,CAAlB,IAED,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKgD,SAAL,EAAnB;AAAqC,QAAA,SAAS,EAAC,aAA/C;AAA6D,QAAA,OAAO,EAAE,CAAC,OAAD,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAlBF,CADD,GAyBC;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAgD,QAAA,OAAO,EAAE,mBAAM;AAC7D,UAAA,MAAI,CAACvE,QAAL,CAAc;AAACyC,YAAAA,WAAW,EAAE;AAAd,WAAd;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA1BJ,EAgCGQ,MAAM,GACL;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADK,GAIL,KAAKa,SAAL,CAAe,KAAK7D,KAApB,CApCJ,CAXF,CAdF,CADF,EAmEGoC,WAAW,IAAIvD,OAAO,CAAC4G,IAAR,CAAa;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBtD,YAAvB,CAAb,EAA0D,CAA1D,EAA6D,KAAKxB,kBAAlE,CAnElB,CADF;AAuED;;;;EA3lBgBpC,S;;AA8lBnB,eAAeoB,IAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {Button, Checkbox, Drawer, Dropdown, Menu, message} from \"antd\";\n\nimport CustomScrollbars from \"util/CustomScrollbars\";\nimport toDos from \"./data/todo\";\nimport filters from \"./data/filters\";\nimport labels from \"./data/labels\";\nimport options from \"./data/options\";\nimport todoConversation from \"./data/todoConversation\";\nimport ToDoList from \"components/todo/ToDoList\";\nimport ToDoDetail from \"components/todo/ToDoDetail/index\";\nimport AppModuleHeader from \"components/AppModuleHeader/index\";\nimport IntlMessages from \"util/IntlMessages\";\nimport CircularProgress from \"../../../components/CircularProgress/index\";\nimport Auxiliary from \"../../../util/Auxiliary\";\n\nconst ITEM_HEIGHT = 34;\n\nclass ToDo extends Component {\n\n  onSortEnd = ({oldIndex, newIndex}) => {\n    this.setState({\n      toDos: (this.state.toDos, oldIndex, newIndex),\n    });\n  };\n  onLabelSelect = event => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      labelMenuState: !this.state.labelMenuState\n    })\n  };\n  onOptionMenuSelect = event => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      optionMenuState: !this.state.optionMenuState\n    })\n  };\n  onOptionMenuItemSelect = (e) => {\n    switch (e.key) {\n      case 'All':\n        this.handleRequestClose();\n        this.getAllTodo();\n        break;\n      case 'None':\n        this.handleRequestClose();\n        this.getUnselectedAllTodo();\n        break;\n      case 'Starred':\n        this.handleRequestClose();\n        this.getStarredToDo();\n        break;\n      case 'Unstarred':\n        this.handleRequestClose();\n        this.getUnStarredTodo();\n        break;\n      case 'Important':\n        this.handleRequestClose();\n        this.getImportantToDo();\n        break;\n      case 'Unimportant':\n        this.handleRequestClose();\n        this.getUnimportantToDo();\n        break;\n      default:\n        return '';\n    }\n  };\n  getAllTodo = () => {\n    let toDos = this.state.allToDos.map((todo) => todo ? {\n      ...todo,\n      selected: true\n    } : todo);\n    this.setState({\n      selectedToDos: toDos.length,\n      allToDos: toDos,\n      optionName: 'All',\n      toDos: toDos\n    });\n  };\n  getUnselectedAllTodo = () => {\n    let toDos = this.state.allToDos.map((todo) => todo ? {\n      ...todo,\n      selected: false\n    } : todo);\n    this.setState({\n      selectedToDos: 0,\n      allToDos: toDos,\n      optionName: 'None',\n      toDos: toDos\n    });\n  };\n  getStarredToDo = () => {\n    let selectedToDos = 0;\n    let toDos = this.state.allToDos.map((todo) => {\n      if (todo.starred) {\n        selectedToDos++;\n        return {...todo, selected: true};\n      }\n      return {...todo, selected: false}\n    });\n    this.setState({\n      selectedToDos: selectedToDos,\n      allToDos: toDos,\n      toDos: toDos.filter(todo => !todo.deleted)\n    });\n    return toDos;\n  };\n  getUnStarredTodo = () => {\n    let selectedToDos = 0;\n    let toDos = this.state.allToDos.map((todo) => {\n      if (!todo.starred) {\n        selectedToDos++;\n        return {...todo, selected: true};\n      }\n      return {...todo, selected: false}\n    });\n    this.setState({\n      selectedToDos: selectedToDos,\n      allToDos: toDos,\n      optionName: 'Unstarred',\n      toDos: toDos.filter(todo => !todo.deleted)\n    });\n    return toDos;\n  };\n  getImportantToDo = () => {\n    let selectedToDos = 0;\n    let toDos = this.state.allToDos.map((todo) => {\n      if (todo.important) {\n        selectedToDos++;\n        return {...todo, selected: true};\n      }\n      return {...todo, selected: false}\n    });\n    this.setState({\n      selectedToDos: selectedToDos,\n      allToDos: toDos,\n      optionName: 'Important',\n      toDos: toDos.filter(todo => !todo.deleted)\n    });\n    return toDos;\n  };\n  getUnimportantToDo = () => {\n    let selectedToDos = 0;\n    let toDos = this.state.allToDos.map((todo) => {\n      if (!todo.important) {\n        selectedToDos++;\n        return {...todo, selected: true};\n      }\n      return {...todo, selected: false}\n    });\n    this.setState({\n      selectedToDos: selectedToDos,\n      allToDos: toDos,\n      optionName: 'Unimportant',\n      toDos: toDos.filter(todo => !todo.deleted)\n    });\n\n    return toDos;\n  };\n  onLabelMenuItemSelect = (e) => {\n    const label = +e.key;\n    this.handleRequestClose();\n    const toDos = this.state.allToDos.map(todo => {\n        if (todo.selected) {\n          if (todo.labels.includes(label.id)) {\n            return {...todo, labels: this.removeLabel(todo, label.id)};\n          } else {\n            return {...todo, labels: this.addLabel(todo, label.id)};\n          }\n        } else {\n          return todo;\n        }\n      }\n    );\n    this.setState({\n      alertMessage: 'Label Updated Successfully',\n      showMessage: true,\n      allToDos: toDos,\n      toDos: toDos\n    });\n  };\n  handleRequestClose = () => {\n    this.setState({showMessage: false, addTodo: false, labelMenuState: false, optionMenuState: false,});\n  };\n  onLabelUpdate = (data, label) => {\n    if (data.labels.includes(label.id)) {\n      data.labels = this.removeLabel(data, label.id);\n    } else {\n      data.labels = this.addLabel(data, label.id);\n    }\n    this.handleRequestClose();\n    const toDos = this.state.allToDos.map(todo => {\n        if (todo.id === data.id) {\n          return data;\n        } else {\n          return todo;\n        }\n      }\n    );\n\n    this.setState({\n      alertMessage: 'Label Updated Successfully',\n      showMessage: true,\n      currentTodo: data,\n      allToDos: toDos,\n      toDos: toDos,\n    });\n  };\n  onMarkAsStart = (data) => {\n    const toDos = this.state.allToDos.map(todo => {\n      if (todo.id === data.id) {\n        return data;\n      } else {\n        return todo;\n      }\n    });\n    this.setState({\n      alertMessage: 'ToDo Updated Successfully',\n      showMessage: true,\n      allToDos: toDos,\n      toDos: toDos,\n    });\n  };\n\n  onToDoUpdate = (data) => {\n    this.handleRequestClose();\n    const toDos = this.state.allToDos.map(todo => {\n      if (todo.id === data.id) {\n        return data;\n      } else {\n        return todo;\n      }\n    });\n    this.setState({\n      alertMessage: 'ToDo Updated Successfully',\n      showMessage: true,\n      currentTodo: data,\n      allToDos: toDos,\n      toDos: toDos,\n    });\n  };\n\n\n  onDeleteToDo = (data) => {\n    let selectedToDos = 0;\n    const toDos = this.state.allToDos.map(todo => {\n        if (todo.selected) {\n          selectedToDos++\n        }\n        if (data.id === todo.id) {\n          if (todo.selected) {\n            selectedToDos--\n          }\n          return {...todo, deleted: true};\n        } else {\n          return todo;\n        }\n      }\n    );\n    this.setState({\n      alertMessage: 'ToDo Deleted Successfully',\n      showMessage: true,\n      allToDos: toDos,\n      currentTodo: null,\n      selectedToDos: selectedToDos,\n      toDos: toDos.filter((todo) => !todo.deleted)\n    });\n\n  };\n  getNavFilters = () => {\n    return filters.map((filter, index) =>\n      <li key={index} onClick={() => {\n        const filterMails = this.state.allToDos.filter(todo => {\n          if (filter.id === 0 && todo.starred) {\n            return todo\n          } else if (filter.id === 1 && todo.important) {\n            return todo\n          } else if (filter.id === 2 && todo.important) {\n            return todo\n          } else if (filter.id === 3 && todo.important) {\n            return todo\n          } else if (filter.id === 4 && todo.completed) {\n            return todo\n          } else if (filter.id === 5 && todo.deleted) {\n            return todo\n          } else\n            return todo\n        });\n        this.setState({\n          loader: true,\n          currentTodo: null,\n          filter: filter.id,\n          toDos: filterMails\n        });\n        setTimeout(() => {\n          this.setState({loader: false});\n        }, 1500);\n      }\n      }>\n        <span className={filter.id === this.state.selectedSectionId ? 'gx-link active' : 'gx-link'}>\n          <i className={`icon icon-${filter.icon}`}/>\n          <span>{filter.title}</span>\n        </span>\n      </li>\n    )\n  };\n  getNavLabels = () => {\n    return labels.map((label, index) =>\n      <li key={index} onClick={() => {\n        const filterMails = this.state.allToDos.filter(todo => todo.labels.includes(label.id));\n        this.setState({\n          loader: true,\n          currentTodo: null,\n          toDos: filterMails\n        });\n        setTimeout(() => {\n          this.setState({loader: false});\n        }, 1500);\n      }\n      }>\n        <span className=\"gx-link\">\n          <i className={`icon icon-circle gx-text-${label.color}`}/>\n          <span>{label.title}</span>\n        </span>\n      </li>\n    )\n  };\n  ToDoSideBar = () => {\n    return <div className=\"gx-module-side\">\n      <div className=\"gx-module-side-header\">\n        <div className=\"gx-module-logo\">\n          <i className=\"icon icon-check-circle-o gx-mr-4\"/>\n          <IntlMessages id=\"sidebar.todoApp\"/>\n        </div>\n\n      </div>\n      <div className=\"gx-module-side-content\">\n        <CustomScrollbars className=\"gx-module-side-scroll\">\n          <div className=\"gx-module-add-task\">\n            <Button variant=\"raised\" type=\"primary\" className=\"gx-btn-block\"\n                    onClick={() => {\n                      this.setState({addTodo: true})\n                    }}> <IntlMessages id=\"todo.addTask\"/> </Button>\n          </div>\n          <ul className=\"gx-module-nav\">\n\n            <li onClick={() => {\n              this.setState({\n                currentTodo: null,\n                toDos: this.state.allToDos\n              });\n            }\n            }>\n              <span className=\"gx-link active\">\n                <i className=\"icon icon-all-contacts gx-pt-1\"/>\n                <span><IntlMessages id=\"todo.all\"/></span>\n              </span>\n            </li>\n\n            <li className=\"gx-module-nav-label\">\n              <IntlMessages id=\"todo.filters\"/>\n            </li>\n\n            {this.getNavFilters()}\n\n            <li className=\"gx-module-nav-label\">\n              <IntlMessages id=\"todo.labels\"/>\n            </li>\n            {this.getNavLabels()}\n          </ul>\n        </CustomScrollbars>\n      </div>\n    </div>\n  };\n  searchTodo = (searchText) => {\n    if (searchText === '') {\n      this.setState({toDos: this.state.allToDos.filter((todo) => !todo.deleted)});\n    } else {\n      const searchToDos = this.state.allToDos.filter((todo) =>\n        !todo.deleted && todo.title.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n      this.setState({\n        toDos: searchToDos\n      });\n    }\n  };\n  showToDos = ({currentTodo, toDos, conversation, user}) => {\n    return currentTodo === null ?\n      <ToDoList toDos={toDos} onSortEnd={this.onSortEnd}\n                onMarkAsStart={this.onMarkAsStart.bind(this)}\n                onTodoSelect={this.onTodoSelect.bind(this)}\n                onTodoChecked={this.onTodoChecked.bind(this)} useDragHandle={true}/>\n      :\n      <ToDoDetail todo={currentTodo} user={user}\n                  conversation={conversation}\n                  onLabelUpdate={this.onLabelUpdate.bind(this)}\n                  onToDoUpdate={this.onToDoUpdate.bind(this)}\n                  onDeleteToDo={this.onDeleteToDo.bind(this)}/>\n  };\n  optionMenu = () => {\n    return (<Menu id=\"option-menu\" onClick={this.onOptionMenuItemSelect.bind(this)}\n                  onClose={this.handleRequestClose}\n                  style={{maxHeight: ITEM_HEIGHT * 5.5}}>\n      {options.map(option =>\n        <Menu.Item key={option.title}\n        >\n          {option.title}\n        </Menu.Item>,\n      )}\n    </Menu>)\n\n  };\n  labelMenu = () => {\n    return (\n      <Menu id=\"label-menu\" onClick={this.onLabelMenuItemSelect.bind(this)}\n            onClose={this.handleRequestClose}\n            style={{maxHeight: ITEM_HEIGHT * 4.5}}>\n        {labels.map(label =>\n          <Menu.Item key={label}>\n            {label.title}\n          </Menu.Item>,\n        )}\n      </Menu>)\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      searchTodo: '',\n      alertMessage: '',\n      loader: false,\n      showMessage: false,\n      drawerState: false,\n      optionName: 'None',\n      anchorEl: null,\n      allToDos: toDos,\n      currentTodo: null,\n      user: {\n        name: 'Robert Johnson',\n        email: 'robert.johnson@example.com',\n        avatar: 'https://via.placeholder.com/150x150'\n      },\n      selectedToDos: 0,\n      labelMenuState: false,\n      optionMenuState: false,\n      toDos: toDos,\n      filter: -1,\n      todoConversation,\n      conversation: null\n    }\n  }\n\n  componentDidMount() {\n    this.manageHeight();\n  }\n\n  componentDidUpdate() {\n    this.manageHeight();\n  }\n\n  getToDoConversation(id) {\n    return todoConversation.find((conversation) => conversation.id === id);\n  }\n\n  onTodoChecked(data) {\n    data.selected = !data.selected;\n    let selectedToDos = 0;\n    const toDos = this.state.toDos.map(todo => {\n        if (todo.selected) {\n          selectedToDos++;\n        }\n        if (todo.id === data.id) {\n          if (todo.selected) {\n            selectedToDos++;\n          }\n          return data;\n        } else {\n          return todo;\n        }\n      }\n    );\n    this.setState({\n      selectedToDos: selectedToDos,\n      toDos: toDos\n    });\n  }\n\n  onAllTodoSelect() {\n    const selectAll = this.state.selectedToDos < this.state.toDos.length;\n    if (selectAll) {\n      this.getAllTodo();\n    } else {\n      this.getUnselectedAllTodo();\n    }\n  }\n\n  onTodoAdd(data) {\n    this.setState(\n      {\n        toDos: this.state.allToDos.concat(data),\n        allToDos: this.state.allToDos.concat(data)\n      }\n    );\n  }\n\n  manageHeight() {\n  }\n\n  onTodoSelect(todo) {\n    let conversationList = this.getToDoConversation(todo.id);\n    if (conversationList) {\n      conversationList = conversationList.conversationData;\n    } else {\n      conversationList = [];\n    }\n    this.setState({\n      currentTodo: todo,\n      loader: true,\n      conversation: conversationList\n    });\n    setTimeout(() => {\n      this.setState({loader: false});\n    }, 1500);\n  }\n\n  removeLabel(todo, label) {\n    todo.labels.splice(todo.labels.indexOf(label), 1);\n    return todo.labels;\n  }\n\n  addLabel(todo, label) {\n    todo.labels = todo.labels.concat(label);\n    return todo.labels\n  }\n\n  onToggleDrawer() {\n    this.setState({\n      drawerState: !this.state.drawerState\n    });\n  }\n\n  updateSearch(evt) {\n    this.setState({\n      searchTodo: evt.target.value,\n    });\n    this.searchTodo(evt.target.value)\n  }\n\n  render() {\n    const {selectedToDos, loader, drawerState, toDos, alertMessage, showMessage} = this.state;\n\n    return (\n      <div className=\"gx-main-content\">\n        <div className=\"gx-app-module\">\n          <div className=\"gx-d-block gx-d-lg-none\">\n            <Drawer\n              placement=\"left\"\n              closable={false}\n              visible={drawerState}\n              onClose={this.onToggleDrawer.bind(this)}>\n              {this.ToDoSideBar()}\n            </Drawer>\n          </div>\n          <div className=\"gx-module-sidenav gx-d-none gx-d-lg-flex\">\n            {this.ToDoSideBar()}\n          </div>\n\n          <div className=\"gx-module-box\">\n            <div className=\"gx-module-box-header\">\n\n              <span className=\"gx-drawer-btn gx-d-flex gx-d-lg-none\">\n                  <i className=\"icon icon-menu gx-icon-btn\" aria-label=\"Menu\"\n                     onClick={this.onToggleDrawer.bind(this)}/>\n              </span>\n              <AppModuleHeader placeholder=\"Search To Do\" user={this.state.user}\n                               onChange={this.updateSearch.bind(this)}\n                               value={this.state.searchTodo}/>\n            </div>\n            <div className=\"gx-module-box-content\">\n              {this.state.currentTodo === null ?\n                <div className=\"gx-module-box-topbar gx-module-box-topbar-todo\">\n                  {this.state.toDos.length > 0 ?\n                    <Auxiliary>\n                      <Checkbox className=\"gx-icon-btn\" color=\"primary\"\n                                indeterminate={selectedToDos > 0 && selectedToDos < toDos.length}\n                                checked={selectedToDos > 0}\n                                onChange={this.onAllTodoSelect.bind(this)}\n                                value=\"SelectMail\"/>\n                      <Dropdown overlay={this.optionMenu()} placement=\"bottomRight\" trigger={['click']}>\n                        <div>\n                          <span className=\"gx-px-2\"> {this.state.optionName}</span>\n                          <i className=\"icon icon-charvlet-down\"/>\n                        </div>\n                      </Dropdown>\n                    </Auxiliary> : null}\n\n                  {( selectedToDos > 0) &&\n\n                  <Dropdown overlay={this.labelMenu()} placement=\"bottomRight\" trigger={['click']}>\n                    <i className=\"gx-icon-btn icon icon-tag\"/>\n                  </Dropdown>\n                  }\n                </div>\n                :\n                <div className=\"gx-module-box-topbar\">\n                  <i className=\"icon icon-arrow-left gx-icon-btn\" onClick={() => {\n                    this.setState({currentTodo: null})\n                  }}/>\n                </div>\n              }\n              {loader ?\n                <div className=\"gx-loader-view\">\n                  <CircularProgress/>\n                </div> :\n                this.showToDos(this.state)\n              }\n            </div>\n          </div>\n        </div>\n        {showMessage && message.info(<span id=\"message-id\">{alertMessage}</span>, 3, this.handleRequestClose)}\n      </div>\n    )\n  }\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}