{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Upload/Avatar.js\";\nimport React from \"react\";\nimport { Card, Icon, message, Upload } from \"antd\";\n\nfunction getBase64(img, callback) {\n  var reader = new FileReader();\n  reader.addEventListener('load', function () {\n    return callback(reader.result);\n  });\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  var isJPG = file.type === 'image/jpeg';\n\n  if (!isJPG) {\n    message.error('You can only upload JPG file!');\n  }\n\n  var isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n\n  return isJPG && isLt2M;\n}\n\nvar Avatar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Avatar, _React$Component);\n\n  function Avatar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Avatar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Avatar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: false\n    };\n\n    _this.handleChange = function (info) {\n      if (info.file.status === 'uploading') {\n        _this.setState({\n          loading: true\n        });\n\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, function (imageUrl) {\n          return _this.setState({\n            imageUrl: imageUrl,\n            loading: false\n          });\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Avatar, [{\n    key: \"render\",\n    value: function render() {\n      var uploadButton = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: this.state.loading ? 'loading' : 'plus',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Upload\"));\n      var imageUrl = this.state.imageUrl;\n      return React.createElement(Card, {\n        className: \"gx-card\",\n        title: \"Avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Upload, {\n        name: \"avatar\",\n        listType: \"picture-card\",\n        className: \"avatar-uploader\",\n        showUploadList: false,\n        action: \"//jsonplaceholder.typicode.com/posts/\",\n        beforeUpload: beforeUpload,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, imageUrl ? React.createElement(\"img\", {\n        src: imageUrl,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }) : uploadButton));\n    }\n  }]);\n\n  return Avatar;\n}(React.Component);\n\nexport default Avatar;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Upload/Avatar.js"],"names":["React","Card","Icon","message","Upload","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJPG","type","error","isLt2M","size","Avatar","state","loading","handleChange","info","status","setState","originFileObj","imageUrl","uploadButton","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,MAA7B,QAA0C,MAA1C;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;AAChC,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC;AAAA,WAAMH,QAAQ,CAACC,MAAM,CAACG,MAAR,CAAd;AAAA,GAAhC;AACAH,EAAAA,MAAM,CAACI,aAAP,CAAqBN,GAArB;AACD;;AAED,SAASO,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,MAAMC,KAAK,GAAGD,IAAI,CAACE,IAAL,KAAc,YAA5B;;AACA,MAAI,CAACD,KAAL,EAAY;AACVZ,IAAAA,OAAO,CAACc,KAAR,CAAc,+BAAd;AACD;;AACD,MAAMC,MAAM,GAAGJ,IAAI,CAACK,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;AACA,MAAI,CAACD,MAAL,EAAa;AACXf,IAAAA,OAAO,CAACc,KAAR,CAAc,8BAAd;AACD;;AACD,SAAOF,KAAK,IAAIG,MAAhB;AACD;;IAEKE,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;;UAGRC,Y,GAAe,UAACC,IAAD,EAAU;AACvB,UAAIA,IAAI,CAACV,IAAL,CAAUW,MAAV,KAAqB,WAAzB,EAAsC;AACpC,cAAKC,QAAL,CAAc;AAACJ,UAAAA,OAAO,EAAE;AAAV,SAAd;;AACA;AACD;;AACD,UAAIE,IAAI,CAACV,IAAL,CAAUW,MAAV,KAAqB,MAAzB,EAAiC;AAC/B;AACApB,QAAAA,SAAS,CAACmB,IAAI,CAACV,IAAL,CAAUa,aAAX,EAA0B,UAAAC,QAAQ;AAAA,iBAAI,MAAKF,QAAL,CAAc;AAC3DE,YAAAA,QAAQ,EAARA,QAD2D;AAE3DN,YAAAA,OAAO,EAAE;AAFkD,WAAd,CAAJ;AAAA,SAAlC,CAAT;AAID;AACF,K;;;;;;;6BAEQ;AACP,UAAMO,YAAY,GAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,OAAX,GAAqB,SAArB,GAAiC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMA,UAAMM,QAAQ,GAAG,KAAKP,KAAL,CAAWO,QAA5B;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,SAAhB;AAA0B,QAAA,KAAK,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,QAAQ,EAAC,cAFX;AAGE,QAAA,SAAS,EAAC,iBAHZ;AAIE,QAAA,cAAc,EAAE,KAJlB;AAKE,QAAA,MAAM,EAAC,uCALT;AAME,QAAA,YAAY,EAAEf,YANhB;AAOE,QAAA,QAAQ,EAAE,KAAKU,YAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASGK,QAAQ,GAAG;AAAK,QAAA,GAAG,EAAEA,QAAV;AAAoB,QAAA,GAAG,EAAC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAkCC,YAT7C,CADF,CADF;AAeD;;;;EAzCkB7B,KAAK,CAAC8B,S;;AA4C3B,eAAeV,MAAf","sourcesContent":["import React from \"react\";\nimport {Card, Icon, message, Upload} from \"antd\";\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJPG = file.type === 'image/jpeg';\n  if (!isJPG) {\n    message.error('You can only upload JPG file!');\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n  return isJPG && isLt2M;\n}\n\nclass Avatar extends React.Component {\n  state = {\n    loading: false,\n  };\n  handleChange = (info) => {\n    if (info.file.status === 'uploading') {\n      this.setState({loading: true});\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, imageUrl => this.setState({\n        imageUrl,\n        loading: false,\n      }));\n    }\n  };\n\n  render() {\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? 'loading' : 'plus'}/>\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    const imageUrl = this.state.imageUrl;\n    return (\n      <Card className=\"gx-card\" title=\"Avatar\">\n        <Upload\n          name=\"avatar\"\n          listType=\"picture-card\"\n          className=\"avatar-uploader\"\n          showUploadList={false}\n          action=\"//jsonplaceholder.typicode.com/posts/\"\n          beforeUpload={beforeUpload}\n          onChange={this.handleChange}\n        >\n          {imageUrl ? <img src={imageUrl} alt=\"\"/> : uploadButton}\n        </Upload>\n      </Card>\n    );\n  }\n}\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}