{"ast":null,"code":"import _toConsumableArray from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Cascader/LoadOptions.js\";\nimport React, { Component } from \"react\";\nimport { Card, Cascader } from \"antd\";\nvar options = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  isLeaf: false\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  isLeaf: false\n}];\n\nvar LoadOptions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoadOptions, _Component);\n\n  function LoadOptions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoadOptions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoadOptions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      options: options\n    };\n\n    _this.onChange = function (value, selectedOptions) {\n      console.log(value, selectedOptions);\n    };\n\n    _this.loadData = function (selectedOptions) {\n      var targetOption = selectedOptions[selectedOptions.length - 1];\n      targetOption.loading = true; // load options lazily\n\n      setTimeout(function () {\n        targetOption.loading = false;\n        targetOption.children = [{\n          label: \"\".concat(targetOption.label, \" Dynamic 1\"),\n          value: 'dynamic1'\n        }, {\n          label: \"\".concat(targetOption.label, \" Dynamic 2\"),\n          value: 'dynamic2'\n        }];\n\n        _this.setState({\n          options: _toConsumableArray(_this.state.options)\n        });\n      }, 1000);\n    };\n\n    return _this;\n  }\n\n  _createClass(LoadOptions, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        className: \"gx-card\",\n        title: \"LoadOptions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Cascader, {\n        options: this.state.options,\n        loadData: this.loadData,\n        onChange: this.onChange,\n        changeOnSelect: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LoadOptions;\n}(Component);\n\nexport default LoadOptions;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Cascader/LoadOptions.js"],"names":["React","Component","Card","Cascader","options","value","label","isLeaf","LoadOptions","state","onChange","selectedOptions","console","log","loadData","targetOption","length","loading","setTimeout","children","setState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,MAA7B;AAEA,IAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE,UADQ;AAEfC,EAAAA,KAAK,EAAE,UAFQ;AAGfC,EAAAA,MAAM,EAAE;AAHO,CAAD,EAIb;AACDF,EAAAA,KAAK,EAAE,SADN;AAEDC,EAAAA,KAAK,EAAE,SAFN;AAGDC,EAAAA,MAAM,EAAE;AAHP,CAJa,CAAhB;;IAWMC,W;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNL,MAAAA,OAAO,EAAPA;AADM,K;;UAGRM,Q,GAAW,UAACL,KAAD,EAAQM,eAAR,EAA4B;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAAmBM,eAAnB;AACD,K;;UACDG,Q,GAAW,UAACH,eAAD,EAAqB;AAC9B,UAAMI,YAAY,GAAGJ,eAAe,CAACA,eAAe,CAACK,MAAhB,GAAyB,CAA1B,CAApC;AACAD,MAAAA,YAAY,CAACE,OAAb,GAAuB,IAAvB,CAF8B,CAI9B;;AACAC,MAAAA,UAAU,CAAC,YAAM;AACfH,QAAAA,YAAY,CAACE,OAAb,GAAuB,KAAvB;AACAF,QAAAA,YAAY,CAACI,QAAb,GAAwB,CAAC;AACvBb,UAAAA,KAAK,YAAKS,YAAY,CAACT,KAAlB,eADkB;AAEvBD,UAAAA,KAAK,EAAE;AAFgB,SAAD,EAGrB;AACDC,UAAAA,KAAK,YAAKS,YAAY,CAACT,KAAlB,eADJ;AAEDD,UAAAA,KAAK,EAAE;AAFN,SAHqB,CAAxB;;AAOA,cAAKe,QAAL,CAAc;AACZhB,UAAAA,OAAO,qBAAM,MAAKK,KAAL,CAAWL,OAAjB;AADK,SAAd;AAGD,OAZS,EAYP,IAZO,CAAV;AAaD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,SAAhB;AAA0B,QAAA,KAAK,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,OAAO,EAAE,KAAKK,KAAL,CAAWL,OADtB;AAEE,QAAA,QAAQ,EAAE,KAAKU,QAFjB;AAGE,QAAA,QAAQ,EAAE,KAAKJ,QAHjB;AAIE,QAAA,cAAc,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD;;;;EAtCuBT,S;;AA2C1B,eAAeO,WAAf","sourcesContent":["import React, {Component} from \"react\";\n\nimport {Card, Cascader} from \"antd\";\n\nconst options = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  isLeaf: false,\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  isLeaf: false,\n}];\n\n\nclass LoadOptions extends Component {\n  state = {\n    options,\n  };\n  onChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n  }\n  loadData = (selectedOptions) => {\n    const targetOption = selectedOptions[selectedOptions.length - 1];\n    targetOption.loading = true;\n\n    // load options lazily\n    setTimeout(() => {\n      targetOption.loading = false;\n      targetOption.children = [{\n        label: `${targetOption.label} Dynamic 1`,\n        value: 'dynamic1',\n      }, {\n        label: `${targetOption.label} Dynamic 2`,\n        value: 'dynamic2',\n      }];\n      this.setState({\n        options: [...this.state.options],\n      });\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <Card className=\"gx-card\" title=\"LoadOptions\">\n        <Cascader\n          options={this.state.options}\n          loadData={this.loadData}\n          onChange={this.onChange}\n          changeOnSelect\n        />\n      </Card>\n    );\n  }\n\n}\n\n\nexport default LoadOptions;\n"]},"metadata":{},"sourceType":"module"}