{"ast":null,"code":"var _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/algolia/index.js\";\nimport React from 'react';\nimport { Layout } from \"antd\";\nimport { Configure, connectHits, connectStateResults, InstantSearch, Pagination, Stats } from 'react-instantsearch-dom';\nimport { withUrlSync } from './urlSync';\nimport 'instantsearch.css/themes/algolia.css'; //import './style.css'\n\nimport Header from \"./Header\";\nimport Sidebar from \"./SideBar\";\nimport Footer from \"./Footer\";\nimport ProductList from \"./ProductList\";\nvar Content = Layout.Content;\n\nvar App = function App(props) {\n  return React.createElement(InstantSearch, {\n    className: \"gx-main-content\",\n    appId: \"latency\" // use your key here\n    ,\n    apiKey: \"6be0576ff61c053d5f9a3225e2a90f76\" // use your key here\n    ,\n    indexName: \"ikea\",\n    searchState: props.searchState,\n    createURL: props.createURL,\n    onSearchStateChange: props.onSearchStateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Configure, {\n    hitsPerPage: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Layout, {\n    className: \"gx-algolia-layout-has-sider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"gx-algolia-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Content, {\n    className: \"gx-algolia-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(CustomResults, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Pagination, {\n    showLast: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })))));\n};\n\nvar CustomResults = connectStateResults(function (_ref) {\n  var searchState = _ref.searchState,\n      searchResult = _ref.searchResult;\n\n  if (searchResult && searchResult.nbHits === 0) {\n    return React.createElement(\"div\", {\n      className: \"gx-algolia-content-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gx-algolia-no-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"No results found matching\", ' ', React.createElement(\"span\", {\n      className: \"gx-algolia-query\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, searchState.query)));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"gx-algolia-content-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Stats, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(ConnectedProducts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n});\nvar ConnectedProducts = connectHits(ProductList);\nexport default withUrlSync(App);","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/algolia/index.js"],"names":["React","Layout","Configure","connectHits","connectStateResults","InstantSearch","Pagination","Stats","withUrlSync","Header","Sidebar","Footer","ProductList","Content","App","props","searchState","createURL","onSearchStateChange","CustomResults","searchResult","nbHits","query","ConnectedProducts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,SAAQC,SAAR,EAAmBC,WAAnB,EAAgCC,mBAAhC,EAAqDC,aAArD,EAAoEC,UAApE,EAAgFC,KAAhF,QAA6F,yBAA7F;AACA,SAAQC,WAAR,QAA0B,WAA1B;AACA,OAAO,sCAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;IAEOC,O,GAAWZ,M,CAAXY,O;;AAEP,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK;AAAA,SACf,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,iBAAzB;AACe,IAAA,KAAK,EAAC,SADrB,CAC8B;AAD9B;AAEe,IAAA,MAAM,EAAC,kCAFtB,CAEwD;AAFxD;AAGe,IAAA,SAAS,EAAC,MAHzB;AAIe,IAAA,WAAW,EAAEA,KAAK,CAACC,WAJlC;AAKe,IAAA,SAAS,EAAED,KAAK,CAACE,SALhC;AAMe,IAAA,mBAAmB,EAAEF,KAAK,CAACG,mBAN1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAUE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CAFF,CAVF,CADe;AAAA,CAAjB;;AA2BA,IAAMC,aAAa,GAAGf,mBAAmB,CAAC,gBAAiC;AAAA,MAA/BY,WAA+B,QAA/BA,WAA+B;AAAA,MAAlBI,YAAkB,QAAlBA,YAAkB;;AACzE,MAAIA,YAAY,IAAIA,YAAY,CAACC,MAAb,KAAwB,CAA5C,EAA+C;AAC7C,WACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAC4B,GAD5B,EAEE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCL,WAAW,CAACM,KAAhD,CAFF,CADF,CADF;AAQD,GATD,MASO;AACL,WACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;AACF,CAlBwC,CAAzC;AAoBA,IAAMC,iBAAiB,GAAGpB,WAAW,CAACS,WAAD,CAArC;AAEA,eAAeJ,WAAW,CAACM,GAAD,CAA1B","sourcesContent":["import React from 'react';\nimport {Layout} from \"antd\";\nimport {Configure, connectHits, connectStateResults, InstantSearch, Pagination, Stats,} from 'react-instantsearch-dom';\nimport {withUrlSync} from './urlSync';\nimport 'instantsearch.css/themes/algolia.css';\n//import './style.css'\nimport Header from \"./Header\";\nimport Sidebar from \"./SideBar\";\nimport Footer from \"./Footer\";\nimport ProductList from \"./ProductList\";\n\nconst {Content} = Layout;\n\nconst App = props => (\n  <InstantSearch className=\"gx-main-content\"\n                 appId=\"latency\"// use your key here\n                 apiKey=\"6be0576ff61c053d5f9a3225e2a90f76\"// use your key here\n                 indexName=\"ikea\"\n                 searchState={props.searchState}\n                 createURL={props.createURL}\n                 onSearchStateChange={props.onSearchStateChange}>\n\n    <Configure hitsPerPage={16}/>\n\n    <Layout className=\"gx-algolia-layout-has-sider\">\n      <Sidebar/>\n      <div className=\"gx-algolia-main\">\n        <Header/>\n        <Content className=\"gx-algolia-content\">\n          <CustomResults/>\n        </Content>\n        <Footer>\n          <Pagination showLast={true}/>\n        </Footer>\n      </div>\n    </Layout>\n  </InstantSearch>\n);\n\n\nconst CustomResults = connectStateResults(({searchState, searchResult}) => {\n  if (searchResult && searchResult.nbHits === 0) {\n    return (\n      <div className=\"gx-algolia-content-inner\">\n        <div className=\"gx-algolia-no-results\">\n          No results found matching{' '}\n          <span className=\"gx-algolia-query\">{searchState.query}</span>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"gx-algolia-content-inner\">\n        <Stats/>\n        <ConnectedProducts/>\n      </div>\n    );\n  }\n});\n\nconst ConnectedProducts = connectHits(ProductList);\n\nexport default withUrlSync(App);\n"]},"metadata":{},"sourceType":"module"}