{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataDisplay/Tree/BasicControl.js\";\nimport React from \"react\";\nimport { Card, Tree } from \"antd\";\nvar TreeNode = Tree.TreeNode;\nvar treeData = [{\n  title: '0-0',\n  key: '0-0',\n  children: [{\n    title: '0-0-0',\n    key: '0-0-0',\n    children: [{\n      title: '0-0-0-0',\n      key: '0-0-0-0'\n    }, {\n      title: '0-0-0-1',\n      key: '0-0-0-1'\n    }, {\n      title: '0-0-0-2',\n      key: '0-0-0-2'\n    }]\n  }, {\n    title: '0-0-1',\n    key: '0-0-1',\n    children: [{\n      title: '0-0-1-0',\n      key: '0-0-1-0'\n    }, {\n      title: '0-0-1-1',\n      key: '0-0-1-1'\n    }, {\n      title: '0-0-1-2',\n      key: '0-0-1-2'\n    }]\n  }, {\n    title: '0-0-2',\n    key: '0-0-2'\n  }]\n}, {\n  title: '0-1',\n  key: '0-1',\n  children: [{\n    title: '0-1-0-0',\n    key: '0-1-0-0'\n  }, {\n    title: '0-1-0-1',\n    key: '0-1-0-1'\n  }, {\n    title: '0-1-0-2',\n    key: '0-1-0-2'\n  }]\n}, {\n  title: '0-2',\n  key: '0-2'\n}];\n\nvar BasicControl =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BasicControl, _React$Component);\n\n  function BasicControl() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BasicControl);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BasicControl)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      expandedKeys: ['0-0-0', '0-0-1'],\n      autoExpandParent: true,\n      checkedKeys: ['0-0-0'],\n      selectedKeys: []\n    };\n\n    _this.onExpand = function (expandedKeys) {\n      // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n      // or, you can remove all expanded children keys.\n      _this.setState({\n        expandedKeys: expandedKeys,\n        autoExpandParent: false\n      });\n    };\n\n    _this.onCheck = function (checkedKeys) {\n      console.log('onCheck', checkedKeys);\n\n      _this.setState({\n        checkedKeys: checkedKeys\n      });\n    };\n\n    _this.onSelect = function (selectedKeys, info) {\n      console.log('onSelect', info);\n\n      _this.setState({\n        selectedKeys: selectedKeys\n      });\n    };\n\n    _this.renderTreeNodes = function (data) {\n      return data.map(function (item) {\n        if (item.children) {\n          return React.createElement(TreeNode, {\n            title: item.title,\n            key: item.key,\n            dataRef: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, _this.renderTreeNodes(item.children));\n        }\n\n        return React.createElement(TreeNode, Object.assign({}, item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BasicControl, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        title: \"Basic Control\",\n        className: \"gx-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Tree, {\n        checkable: true,\n        onExpand: this.onExpand,\n        expandedKeys: this.state.expandedKeys,\n        autoExpandParent: this.state.autoExpandParent,\n        onCheck: this.onCheck,\n        checkedKeys: this.state.checkedKeys,\n        onSelect: this.onSelect,\n        selectedKeys: this.state.selectedKeys,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.renderTreeNodes(treeData)));\n    }\n  }]);\n\n  return BasicControl;\n}(React.Component);\n\nexport default BasicControl;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataDisplay/Tree/BasicControl.js"],"names":["React","Card","Tree","TreeNode","treeData","title","key","children","BasicControl","state","expandedKeys","autoExpandParent","checkedKeys","selectedKeys","onExpand","setState","onCheck","console","log","onSelect","info","renderTreeNodes","data","map","item","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Card, Tree} from \"antd\";\n\nconst TreeNode = Tree.TreeNode;\n\nconst treeData = [{\n  title: '0-0',\n  key: '0-0',\n  children: [{\n    title: '0-0-0',\n    key: '0-0-0',\n    children: [\n      {title: '0-0-0-0', key: '0-0-0-0'},\n      {title: '0-0-0-1', key: '0-0-0-1'},\n      {title: '0-0-0-2', key: '0-0-0-2'},\n    ],\n  }, {\n    title: '0-0-1',\n    key: '0-0-1',\n    children: [\n      {title: '0-0-1-0', key: '0-0-1-0'},\n      {title: '0-0-1-1', key: '0-0-1-1'},\n      {title: '0-0-1-2', key: '0-0-1-2'},\n    ],\n  }, {\n    title: '0-0-2',\n    key: '0-0-2',\n  }],\n}, {\n  title: '0-1',\n  key: '0-1',\n  children: [\n    {title: '0-1-0-0', key: '0-1-0-0'},\n    {title: '0-1-0-1', key: '0-1-0-1'},\n    {title: '0-1-0-2', key: '0-1-0-2'},\n  ],\n}, {\n  title: '0-2',\n  key: '0-2',\n}];\n\nclass BasicControl extends React.Component {\n  state = {\n    expandedKeys: ['0-0-0', '0-0-1'],\n    autoExpandParent: true,\n    checkedKeys: ['0-0-0'],\n    selectedKeys: [],\n  };\n  onExpand = (expandedKeys) => {\n    // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n    // or, you can remove all expanded children keys.\n    this.setState({\n      expandedKeys,\n      autoExpandParent: false,\n    });\n  };\n  onCheck = (checkedKeys) => {\n    console.log('onCheck', checkedKeys);\n    this.setState({checkedKeys});\n  };\n  onSelect = (selectedKeys, info) => {\n    console.log('onSelect', info);\n    this.setState({selectedKeys});\n  };\n  renderTreeNodes = (data) => {\n    return data.map((item) => {\n      if (item.children) {\n        return (\n          <TreeNode title={item.title} key={item.key} dataRef={item}>\n            {this.renderTreeNodes(item.children)}\n          </TreeNode>\n        );\n      }\n      return <TreeNode {...item} />;\n    });\n  };\n\n  render() {\n    return (\n      <Card title=\"Basic Control\" className=\"gx-card\">\n        <Tree\n          checkable\n          onExpand={this.onExpand}\n          expandedKeys={this.state.expandedKeys}\n          autoExpandParent={this.state.autoExpandParent}\n          onCheck={this.onCheck}\n          checkedKeys={this.state.checkedKeys}\n          onSelect={this.onSelect}\n          selectedKeys={this.state.selectedKeys}\n        >\n          {this.renderTreeNodes(treeData)}\n        </Tree>\n      </Card>\n    );\n  }\n}\n\n\nexport default BasicControl;\n"]},"metadata":{},"sourceType":"module"}