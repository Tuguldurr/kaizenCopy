{"ast":null,"code":"var _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/components/todo/ToDoList/ToDoItem/index.js\";\nimport React from \"react\";\nimport { Avatar, Badge, Checkbox } from \"antd\";\nimport labels from \"routes/inBuiltApps/Todo/data/labels\";\nimport users from \"routes/inBuiltApps/Todo/data/users\";\n\nvar ToDoItem = function ToDoItem(_ref) {\n  var todo = _ref.todo,\n      onTodoSelect = _ref.onTodoSelect,\n      onTodoChecked = _ref.onTodoChecked,\n      onMarkAsStart = _ref.onMarkAsStart;\n  var user = null;\n  if (todo.user > 0) user = users[todo.user - 1];\n  return React.createElement(\"div\", {\n    className: \"gx-module-list-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"gx-module-list-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    color: \"primary\",\n    checked: todo.selected,\n    onClick: function onClick(event) {\n      event.stopPropagation();\n      onTodoChecked(todo);\n    },\n    value: \"SelectTodo\",\n    className: \"gx-icon-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    onClick: function onClick() {\n      todo.starred = !todo.starred;\n      onMarkAsStart(todo);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, todo.starred ? React.createElement(\"i\", {\n    className: \"gx-icon-btn icon icon-star\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    className: \"gx-icon-btn icon icon-star-o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"gx-module-list-info\",\n    onClick: function onClick() {\n      onTodoSelect(todo);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"gx-module-todo-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"gx-subject \".concat(todo.completed && 'gx-text-muted gx-text-strikethrough'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, todo.title), React.createElement(\"div\", {\n    className: \"gx-manage-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, labels.map(function (label, index) {\n    return todo.labels.includes(label.id) && React.createElement(Badge, {\n      key: index,\n      count: label.title,\n      style: {\n        backgroundColor: label.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }))), React.createElement(\"div\", {\n    className: \"gx-module-todo-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, user === null ? React.createElement(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"U\") : React.createElement(Avatar, {\n    alt: user.name,\n    src: user.thumb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))));\n};\n\nexport default ToDoItem;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/components/todo/ToDoList/ToDoItem/index.js"],"names":["React","Avatar","Badge","Checkbox","labels","users","ToDoItem","todo","onTodoSelect","onTodoChecked","onMarkAsStart","user","selected","event","stopPropagation","starred","completed","title","map","label","index","includes","id","backgroundColor","color","name","thumb"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Avatar, Badge, Checkbox} from \"antd\";\n\nimport labels from \"routes/inBuiltApps/Todo/data/labels\";\nimport users from \"routes/inBuiltApps/Todo/data/users\";\n\n\nconst ToDoItem = (({todo, onTodoSelect, onTodoChecked, onMarkAsStart}) => {\n  let user = null;\n  if (todo.user > 0)\n    user = users[todo.user - 1];\n  return (\n    <div className=\"gx-module-list-item\">\n      <div className=\"gx-module-list-icon\">\n        <Checkbox color=\"primary\"\n                  checked={todo.selected}\n                  onClick={(event) => {\n                    event.stopPropagation();\n                    onTodoChecked(todo);\n                  }}\n                  value=\"SelectTodo\"\n                  className=\"gx-icon-btn\"\n        />\n\n        <div onClick={() => {\n          todo.starred = !todo.starred;\n          onMarkAsStart(todo);\n        }}>\n          {todo.starred ?\n            <i className=\"gx-icon-btn icon icon-star\"/> :\n            <i className=\"gx-icon-btn icon icon-star-o\"/>\n          }\n\n        </div>\n      </div>\n      <div className=\"gx-module-list-info\" onClick={() => {\n        onTodoSelect(todo);\n      }}>\n        <div className=\"gx-module-todo-content\">\n          <div className={`gx-subject ${todo.completed && 'gx-text-muted gx-text-strikethrough'}`}>\n            {todo.title}\n          </div>\n          <div className=\"gx-manage-margin\">\n            {labels.map((label, index) => {\n              return (todo.labels).includes(label.id) &&\n                <Badge key={index} count={label.title} style={{backgroundColor: label.color}}/>\n            })}\n          </div>\n        </div>\n        <div className=\"gx-module-todo-right\">\n          {user === null ? <Avatar>U</Avatar>\n            : <Avatar alt={user.name}\n                      src={user.thumb}/>}\n        </div>\n      </div>\n    </div>\n\n  )\n});\n\nexport default ToDoItem;\n"]},"metadata":{},"sourceType":"module"}