{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/extensions/map/googlemap/eventHanlder/Components/EventHandler.js\";\nimport React, { Component } from \"react\";\nimport { GoogleMap, InfoWindow, withGoogleMap } from \"react-google-maps\";\nvar google = window.google;\nvar GettingPropertiesExampleGoogleMap = withGoogleMap(function (props) {\n  return React.createElement(GoogleMap, {\n    ref: props.onMapMounted,\n    onZoomChanged: props.onZoomChanged,\n    defaultCenter: props.center,\n    zoom: props.zoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(InfoWindow, {\n    defaultPosition: props.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"gx-map-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.content)));\n});\n/*\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\n *\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\n\nvar EventHandler =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventHandler, _Component);\n\n  function EventHandler() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EventHandler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EventHandler)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      zoom: 15,\n      content: \"Change the zoom level\"\n    };\n    _this.handleMapMounted = _this.handleMapMounted.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleZoomChanged = _this.handleZoomChanged.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EventHandler, [{\n    key: \"handleMapMounted\",\n    value: function handleMapMounted(map) {\n      this._map = map;\n    }\n  }, {\n    key: \"handleZoomChanged\",\n    value: function handleZoomChanged() {\n      var nextZoom = this._map.getZoom();\n\n      if (nextZoom !== this.state.zoom) {\n        // Notice: Check zoom equality here,\n        // or it will fire zoom_changed event infinitely\n        this.setState({\n          zoom: nextZoom,\n          content: \"Zoom: \".concat(nextZoom)\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(GettingPropertiesExampleGoogleMap, {\n        loadingElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }),\n        containerElement: React.createElement(\"div\", {\n          style: {\n            height: \"550px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }),\n        onMapMounted: this.handleMapMounted,\n        onZoomChanged: this.handleZoomChanged,\n        center: new google.maps.LatLng(47.646935, -122.303763),\n        zoom: this.state.zoom,\n        content: this.state.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return EventHandler;\n}(Component);\n\nexport { EventHandler as default };","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/extensions/map/googlemap/eventHanlder/Components/EventHandler.js"],"names":["React","Component","GoogleMap","InfoWindow","withGoogleMap","google","window","GettingPropertiesExampleGoogleMap","props","onMapMounted","onZoomChanged","center","zoom","content","EventHandler","state","handleMapMounted","bind","handleZoomChanged","map","_map","nextZoom","getZoom","setState","height","maps","LatLng"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,UAAnB,EAA+BC,aAA/B,QAAmD,mBAAnD;AAEA,IAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;AACA,IAAME,iCAAiC,GAAGH,aAAa,CAAC,UAAAI,KAAK;AAAA,SAC3D,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,YADb;AAEE,IAAA,aAAa,EAAED,KAAK,CAACE,aAFvB;AAGE,IAAA,aAAa,EAAEF,KAAK,CAACG,MAHvB;AAIE,IAAA,IAAI,EAAEH,KAAK,CAACI,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,UAAD;AACE,IAAA,eAAe,EAAEJ,KAAK,CAACG,MADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,KAAK,CAACK,OAAvC,CAHF,CANF,CAD2D;AAAA,CAAN,CAAvD;AAeA;;;;;;IAKqBC,Y;;;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNH,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,OAAO;AAFD,K;UAKRG,gB,GAAmB,MAAKA,gBAAL,CAAsBC,IAAtB,uD;UACnBC,iB,GAAoB,MAAKA,iBAAL,CAAuBD,IAAvB,uD;;;;;;qCAEHE,G,EAAK;AACpB,WAAKC,IAAL,GAAYD,GAAZ;AACD;;;wCAEmB;AAClB,UAAME,QAAQ,GAAG,KAAKD,IAAL,CAAUE,OAAV,EAAjB;;AACA,UAAID,QAAQ,KAAK,KAAKN,KAAL,CAAWH,IAA5B,EAAkC;AAChC;AACA;AACA,aAAKW,QAAL,CAAc;AACZX,UAAAA,IAAI,EAAES,QADM;AAEZR,UAAAA,OAAO,kBAAWQ,QAAX;AAFK,SAAd;AAID;AACF;;;6BAEQ;AACP,aACE,oBAAC,iCAAD;AACE,QAAA,cAAc,EAAE;AAAK,UAAA,KAAK,EAAE;AAACG,YAAAA,MAAM;AAAP,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADlB;AAEE,QAAA,gBAAgB,EAAE;AAAK,UAAA,KAAK,EAAE;AAACA,YAAAA,MAAM;AAAP,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFpB;AAGE,QAAA,UAAU,EAAE;AAAK,UAAA,KAAK,EAAE;AAACA,YAAAA,MAAM;AAAP,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHd;AAIE,QAAA,YAAY,EAAE,KAAKR,gBAJrB;AAKE,QAAA,aAAa,EAAE,KAAKE,iBALtB;AAME,QAAA,MAAM,EAAE,IAAIb,MAAM,CAACoB,IAAP,CAAYC,MAAhB,CAAuB,SAAvB,EAAkC,CAAC,UAAnC,CANV;AAOE,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWH,IAPnB;AAQE,QAAA,OAAO,EAAE,KAAKG,KAAL,CAAWF,OARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAYD;;;;EAvCuCZ,S;;SAArBa,Y","sourcesContent":["import React, {Component} from \"react\";\nimport {GoogleMap, InfoWindow, withGoogleMap} from \"react-google-maps\";\n\nconst google = window.google;\nconst GettingPropertiesExampleGoogleMap = withGoogleMap(props => (\n  <GoogleMap\n    ref={props.onMapMounted}\n    onZoomChanged={props.onZoomChanged}\n    defaultCenter={props.center}\n    zoom={props.zoom}\n  >\n    <InfoWindow\n      defaultPosition={props.center}\n    >\n      <div className=\"gx-map-content\">{props.content}</div>\n    </InfoWindow>\n  </GoogleMap>\n));\n\n/*\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\n *\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nexport default class EventHandler extends Component {\n\n  state = {\n    zoom: 15,\n    content: `Change the zoom level`,\n  };\n\n  handleMapMounted = this.handleMapMounted.bind(this);\n  handleZoomChanged = this.handleZoomChanged.bind(this);\n\n  handleMapMounted(map) {\n    this._map = map;\n  }\n\n  handleZoomChanged() {\n    const nextZoom = this._map.getZoom();\n    if (nextZoom !== this.state.zoom) {\n      // Notice: Check zoom equality here,\n      // or it will fire zoom_changed event infinitely\n      this.setState({\n        zoom: nextZoom,\n        content: `Zoom: ${nextZoom}`,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <GettingPropertiesExampleGoogleMap\n        loadingElement={<div style={{height: `100%`}}/>}\n        containerElement={<div style={{height: `550px`}}/>}\n        mapElement={<div style={{height: `100%`}}/>}\n        onMapMounted={this.handleMapMounted}\n        onZoomChanged={this.handleZoomChanged}\n        center={new google.maps.LatLng(47.646935, -122.303763)}\n        zoom={this.state.zoom}\n        content={this.state.content}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}