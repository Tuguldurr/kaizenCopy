{"ast":null,"code":"var _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/extensions/charts/amchart/line/Components/LineChartWithScrollAndZoom.js\";\nimport React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nvar LineChartWithScrollAndZoom = function LineChartWithScrollAndZoom() {\n  var chartData = generateChartData();\n  var config = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"marginRight\": 80,\n    \"autoMarginOffset\": 20,\n    \"marginTop\": 7,\n    \"dataProvider\": chartData,\n    \"valueAxes\": [{\n      \"axisAlpha\": 0.2,\n      \"dashLength\": 1,\n      \"position\": \"left\"\n    }],\n    \"mouseWheelZoomEnabled\": true,\n    \"graphs\": [{\n      \"id\": \"g1\",\n      \"balloonText\": \"[[value]]\",\n      \"bullet\": \"round\",\n      \"bulletBorderAlpha\": 1,\n      \"bulletColor\": \"#FFFFFF\",\n      \"hideBulletsCount\": 50,\n      \"title\": \"red line\",\n      \"valueField\": \"visits\",\n      \"useLineColorForBulletBorder\": true,\n      \"balloon\": {\n        \"drop\": true\n      }\n    }],\n    \"chartScrollbar\": {\n      \"autoGridCount\": true,\n      \"graph\": \"g1\",\n      \"scrollbarHeight\": 40\n    },\n    \"chartCursor\": {\n      \"limitToGraph\": \"g1\"\n    },\n    \"categoryField\": \"date\",\n    \"categoryAxis\": {\n      \"parseDates\": true,\n      \"axisColor\": \"#DADADA\",\n      \"dashLength\": 1,\n      \"minorGridEnabled\": true\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n  }; // generate some random data, quite different range\n\n  function generateChartData() {\n    var chartData = [];\n    var firstDate = new Date();\n    firstDate.setDate(firstDate.getDate() - 5);\n    var visits = 1200;\n\n    for (var i = 0; i < 1000; i++) {\n      // we create date objects here. In your data, you can have date strings\n      // and then set format of your dates using chart.dataDateFormat property,\n      // however when possible, use date objects, as this will speed up chart rendering.\n      var newDate = new Date(firstDate);\n      newDate.setDate(newDate.getDate() + i);\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n      chartData.push({\n        date: newDate,\n        visits: visits\n      });\n    }\n\n    return chartData;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(AmCharts.React, {\n    style: {\n      width: \"100%\",\n      height: \"500px\"\n    },\n    options: config,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n};\n\nexport default LineChartWithScrollAndZoom;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/extensions/charts/amchart/line/Components/LineChartWithScrollAndZoom.js"],"names":["React","AmCharts","LineChartWithScrollAndZoom","chartData","generateChartData","config","firstDate","Date","setDate","getDate","visits","i","newDate","Math","round","random","push","date","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AAEvC,MAAIC,SAAS,GAAGC,iBAAiB,EAAjC;AACA,MAAMC,MAAM,GAAG;AACb,YAAQ,QADK;AAEb,aAAS,OAFI;AAGb,mBAAe,EAHF;AAIb,wBAAoB,EAJP;AAKb,iBAAa,CALA;AAMb,oBAAgBF,SANH;AAOb,iBAAa,CAAC;AACZ,mBAAa,GADD;AAEZ,oBAAc,CAFF;AAGZ,kBAAY;AAHA,KAAD,CAPA;AAYb,6BAAyB,IAZZ;AAab,cAAU,CAAC;AACT,YAAM,IADG;AAET,qBAAe,WAFN;AAGT,gBAAU,OAHD;AAIT,2BAAqB,CAJZ;AAKT,qBAAe,SALN;AAMT,0BAAoB,EANX;AAOT,eAAS,UAPA;AAQT,oBAAc,QARL;AAST,qCAA+B,IATtB;AAUT,iBAAW;AACT,gBAAQ;AADC;AAVF,KAAD,CAbG;AA2Bb,sBAAkB;AAChB,uBAAiB,IADD;AAEhB,eAAS,IAFO;AAGhB,yBAAmB;AAHH,KA3BL;AAgCb,mBAAe;AACb,sBAAgB;AADH,KAhCF;AAmCb,qBAAiB,MAnCJ;AAoCb,oBAAgB;AACd,oBAAc,IADA;AAEd,mBAAa,SAFC;AAGd,oBAAc,CAHA;AAId,0BAAoB;AAJN,KApCH;AA0Cb,cAAU;AACR,iBAAW;AADH;AA1CG,GAAf,CAHuC,CAkDvC;;AACA,WAASC,iBAAT,GAA6B;AAC3B,QAAID,SAAS,GAAG,EAAhB;AACA,QAAMG,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACAD,IAAAA,SAAS,CAACE,OAAV,CAAkBF,SAAS,CAACG,OAAV,KAAsB,CAAxC;AACA,QAAIC,MAAM,GAAG,IAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,IAApB,EAA0BA,CAAC,EAA3B,EAA+B;AAC7B;AACA;AACA;AACA,UAAMC,OAAO,GAAG,IAAIL,IAAJ,CAASD,SAAT,CAAhB;AACAM,MAAAA,OAAO,CAACJ,OAAR,CAAgBI,OAAO,CAACH,OAAR,KAAoBE,CAApC;AAEAD,MAAAA,MAAM,IAAIG,IAAI,CAACC,KAAL,CAAW,CAACD,IAAI,CAACE,MAAL,KAAgB,GAAhB,GAAsB,CAAtB,GAA0B,CAAC,CAA5B,IAAiCF,IAAI,CAACE,MAAL,EAAjC,GAAiD,EAA5D,CAAV;AAEAZ,MAAAA,SAAS,CAACa,IAAV,CAAe;AACbC,QAAAA,IAAI,EAAEL,OADO;AAEbF,QAAAA,MAAM,EAAEA;AAFK,OAAf;AAID;;AACD,WAAOP,SAAP;AACD;;AAGD,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD,CAAU,KAAV;AAAgB,IAAA,KAAK,EAAE;AAACe,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,MAAM,EAAE;AAAxB,KAAvB;AAAyD,IAAA,OAAO,EAAEd,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA/ED;;AAiFA,eAAeH,0BAAf","sourcesContent":["import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst LineChartWithScrollAndZoom = () => {\n\n  let chartData = generateChartData();\n  const config = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"marginRight\": 80,\n    \"autoMarginOffset\": 20,\n    \"marginTop\": 7,\n    \"dataProvider\": chartData,\n    \"valueAxes\": [{\n      \"axisAlpha\": 0.2,\n      \"dashLength\": 1,\n      \"position\": \"left\"\n    }],\n    \"mouseWheelZoomEnabled\": true,\n    \"graphs\": [{\n      \"id\": \"g1\",\n      \"balloonText\": \"[[value]]\",\n      \"bullet\": \"round\",\n      \"bulletBorderAlpha\": 1,\n      \"bulletColor\": \"#FFFFFF\",\n      \"hideBulletsCount\": 50,\n      \"title\": \"red line\",\n      \"valueField\": \"visits\",\n      \"useLineColorForBulletBorder\": true,\n      \"balloon\": {\n        \"drop\": true\n      }\n    }],\n    \"chartScrollbar\": {\n      \"autoGridCount\": true,\n      \"graph\": \"g1\",\n      \"scrollbarHeight\": 40\n    },\n    \"chartCursor\": {\n      \"limitToGraph\": \"g1\"\n    },\n    \"categoryField\": \"date\",\n    \"categoryAxis\": {\n      \"parseDates\": true,\n      \"axisColor\": \"#DADADA\",\n      \"dashLength\": 1,\n      \"minorGridEnabled\": true\n    },\n    \"export\": {\n      \"enabled\": true\n    }\n  };\n\n  // generate some random data, quite different range\n  function generateChartData() {\n    let chartData = [];\n    const firstDate = new Date();\n    firstDate.setDate(firstDate.getDate() - 5);\n    let visits = 1200;\n    for (var i = 0; i < 1000; i++) {\n      // we create date objects here. In your data, you can have date strings\n      // and then set format of your dates using chart.dataDateFormat property,\n      // however when possible, use date objects, as this will speed up chart rendering.\n      const newDate = new Date(firstDate);\n      newDate.setDate(newDate.getDate() + i);\n\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n\n      chartData.push({\n        date: newDate,\n        visits: visits\n      });\n    }\n    return chartData;\n  }\n\n\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default LineChartWithScrollAndZoom;\n"]},"metadata":{},"sourceType":"module"}