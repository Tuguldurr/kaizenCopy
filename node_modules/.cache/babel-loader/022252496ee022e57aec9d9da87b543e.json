{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/containers/Sidebar/SidebarLogo.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { onNavStyleChange, toggleCollapsedSideNav } from \"appRedux/actions/Setting\";\nimport { NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_MINI_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, TAB_SIZE, THEME_TYPE_LITE } from \"../../constants/ThemeSetting\";\n\nvar SidebarLogo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SidebarLogo, _Component);\n\n  function SidebarLogo() {\n    _classCallCheck(this, SidebarLogo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SidebarLogo).apply(this, arguments));\n  }\n\n  _createClass(SidebarLogo, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          width = _this$props.width,\n          themeType = _this$props.themeType,\n          navCollapsed = _this$props.navCollapsed;\n      var navStyle = this.props.navStyle;\n\n      if (width < TAB_SIZE && navStyle === NAV_STYLE_FIXED) {\n        navStyle = NAV_STYLE_DRAWER;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"gx-layout-sider-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR ? React.createElement(\"div\", {\n        className: \"gx-linebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"gx-icon-btn icon icon-\".concat(navStyle === NAV_STYLE_MINI_SIDEBAR ? 'menu-unfold' : 'menu-fold', \" \").concat(themeType !== THEME_TYPE_LITE ? 'gx-text-white' : ''),\n        onClick: function onClick() {\n          if (navStyle === NAV_STYLE_DRAWER) {\n            _this.props.toggleCollapsedSideNav(!navCollapsed);\n          } else if (navStyle === NAV_STYLE_FIXED) {\n            _this.props.onNavStyleChange(NAV_STYLE_MINI_SIDEBAR);\n          } else if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n            _this.props.toggleCollapsedSideNav(!navCollapsed);\n          } else {\n            _this.props.onNavStyleChange(NAV_STYLE_FIXED);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })) : null, React.createElement(Link, {\n        to: \"/\",\n        className: \"gx-site-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR && width >= TAB_SIZE ? React.createElement(\"img\", {\n        alt: \"\",\n        src: require(\"assets/images/w-logo.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }) : themeType === THEME_TYPE_LITE ? React.createElement(\"img\", {\n        alt: \"\",\n        src: require(\"assets/images/logo-white.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }) : React.createElement(\"img\", {\n        alt: \"\",\n        src: require(\"assets/images/logo.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SidebarLogo;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var settings = _ref.settings;\n  var navStyle = settings.navStyle,\n      themeType = settings.themeType,\n      width = settings.width,\n      navCollapsed = settings.navCollapsed;\n  return {\n    navStyle: navStyle,\n    themeType: themeType,\n    width: width,\n    navCollapsed: navCollapsed\n  };\n};\n\nexport default connect(mapStateToProps, {\n  onNavStyleChange: onNavStyleChange,\n  toggleCollapsedSideNav: toggleCollapsedSideNav\n})(SidebarLogo);","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/containers/Sidebar/SidebarLogo.js"],"names":["React","Component","connect","Link","onNavStyleChange","toggleCollapsedSideNav","NAV_STYLE_DRAWER","NAV_STYLE_FIXED","NAV_STYLE_MINI_SIDEBAR","NAV_STYLE_NO_HEADER_MINI_SIDEBAR","TAB_SIZE","THEME_TYPE_LITE","SidebarLogo","props","width","themeType","navCollapsed","navStyle","require","mapStateToProps","settings"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,SAAQC,gBAAR,EAA0BC,sBAA1B,QAAuD,0BAAvD;AACA,SACEC,gBADF,EAEEC,eAFF,EAGEC,sBAHF,EAIEC,gCAJF,EAKEC,QALF,EAMEC,eANF,QAOO,8BAPP;;IAUMC,W;;;;;;;;;;;;;6BAEK;AAAA;;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACAC,KADA,eACAA,KADA;AAAA,UACOC,SADP,eACOA,SADP;AAAA,UACkBC,YADlB,eACkBA,YADlB;AAAA,UAEFC,QAFE,GAEU,KAAKJ,KAFf,CAEFI,QAFE;;AAGP,UAAIH,KAAK,GAAGJ,QAAR,IAAoBO,QAAQ,KAAKV,eAArC,EAAsD;AACpDU,QAAAA,QAAQ,GAAGX,gBAAX;AACD;;AACD,aACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIW,QAAQ,KAAKV,eAAb,IAAgCU,QAAQ,KAAKT,sBAA9C,GAAwE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEvE;AACE,QAAA,SAAS,kCAA2BS,QAAQ,KAAKT,sBAAb,GAAsC,aAAtC,GAAsD,WAAjF,cAAgGO,SAAS,KAAKJ,eAAd,GAAgC,eAAhC,GAAkD,EAAlJ,CADX;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAIM,QAAQ,KAAKX,gBAAjB,EAAmC;AACjC,YAAA,KAAI,CAACO,KAAL,CAAWR,sBAAX,CAAkC,CAACW,YAAnC;AACD,WAFD,MAEO,IAAIC,QAAQ,KAAKV,eAAjB,EAAkC;AACvC,YAAA,KAAI,CAACM,KAAL,CAAWT,gBAAX,CAA4BI,sBAA5B;AACD,WAFM,MAEA,IAAIS,QAAQ,KAAKR,gCAAjB,EAAmD;AACxD,YAAA,KAAI,CAACI,KAAL,CAAWR,sBAAX,CAAkC,CAACW,YAAnC;AACD,WAFM,MAEA;AACL,YAAA,KAAI,CAACH,KAAL,CAAWT,gBAAX,CAA4BG,eAA5B;AACD;AACF,SAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFuE,CAAxE,GAgBQ,IAlBX,EAoBE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGU,QAAQ,KAAKR,gCAAb,IAAiDK,KAAK,IAAIJ,QAA1D,GACC;AAAK,QAAA,GAAG,EAAC,EAAT;AAAY,QAAA,GAAG,EAAEQ,OAAO,CAAC,0BAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAECH,SAAS,KAAKJ,eAAd,GACE;AAAK,QAAA,GAAG,EAAC,EAAT;AAAY,QAAA,GAAG,EAAEO,OAAO,CAAC,8BAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAEE;AAAK,QAAA,GAAG,EAAC,EAAT;AAAY,QAAA,GAAG,EAAEA,OAAO,CAAC,wBAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALN,CApBF,CADF;AAgCD;;;;EAxCuBjB,S;;AA2C1B,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAAA,MAC/BH,QAD+B,GACaG,QADb,CAC/BH,QAD+B;AAAA,MACrBF,SADqB,GACaK,QADb,CACrBL,SADqB;AAAA,MACVD,KADU,GACaM,QADb,CACVN,KADU;AAAA,MACHE,YADG,GACaI,QADb,CACHJ,YADG;AAEtC,SAAO;AAACC,IAAAA,QAAQ,EAARA,QAAD;AAAWF,IAAAA,SAAS,EAATA,SAAX;AAAsBD,IAAAA,KAAK,EAALA,KAAtB;AAA6BE,IAAAA,YAAY,EAAZA;AAA7B,GAAP;AACD,CAHD;;AAKA,eAAed,OAAO,CAACiB,eAAD,EAAkB;AACtCf,EAAAA,gBAAgB,EAAhBA,gBADsC;AAEtCC,EAAAA,sBAAsB,EAAtBA;AAFsC,CAAlB,CAAP,CAGZO,WAHY,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\n\nimport {onNavStyleChange, toggleCollapsedSideNav} from \"appRedux/actions/Setting\";\nimport {\n  NAV_STYLE_DRAWER,\n  NAV_STYLE_FIXED,\n  NAV_STYLE_MINI_SIDEBAR,\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\n  TAB_SIZE,\n  THEME_TYPE_LITE\n} from \"../../constants/ThemeSetting\";\n\n\nclass SidebarLogo extends Component {\n\n  render() {\n    const {width, themeType, navCollapsed} = this.props;\n    let {navStyle} = this.props;\n    if (width < TAB_SIZE && navStyle === NAV_STYLE_FIXED) {\n      navStyle = NAV_STYLE_DRAWER;\n    }\n    return (\n      <div className=\"gx-layout-sider-header\">\n\n        {(navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR) ? <div className=\"gx-linebar\">\n\n          <i\n            className={`gx-icon-btn icon icon-${navStyle === NAV_STYLE_MINI_SIDEBAR ? 'menu-unfold' : 'menu-fold'} ${themeType !== THEME_TYPE_LITE ? 'gx-text-white' : ''}`}\n            onClick={() => {\n              if (navStyle === NAV_STYLE_DRAWER) {\n                this.props.toggleCollapsedSideNav(!navCollapsed);\n              } else if (navStyle === NAV_STYLE_FIXED) {\n                this.props.onNavStyleChange(NAV_STYLE_MINI_SIDEBAR)\n              } else if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n                this.props.toggleCollapsedSideNav(!navCollapsed);\n              } else {\n                this.props.onNavStyleChange(NAV_STYLE_FIXED)\n              }\n            }}\n          />\n        </div> : null}\n\n        <Link to=\"/\" className=\"gx-site-logo\">\n          {navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR && width >= TAB_SIZE ?\n            <img alt=\"\" src={require(\"assets/images/w-logo.png\")}/> :\n            themeType === THEME_TYPE_LITE ?\n              <img alt=\"\" src={require(\"assets/images/logo-white.png\")}/> :\n              <img alt=\"\" src={require(\"assets/images/logo.png\")}/>}\n\n        </Link>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({settings}) => {\n  const {navStyle, themeType, width, navCollapsed} = settings;\n  return {navStyle, themeType, width, navCollapsed}\n};\n\nexport default connect(mapStateToProps, {\n  onNavStyleChange,\n  toggleCollapsedSideNav\n})(SidebarLogo);\n"]},"metadata":{},"sourceType":"module"}