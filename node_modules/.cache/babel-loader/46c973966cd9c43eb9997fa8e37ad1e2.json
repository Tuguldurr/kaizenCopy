{"ast":null,"code":"import _objectSpread from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_ALL_NOTES_SUCCESS, GET_STICKY, NOTES_UPDATE, UPDATE_ALL_NOTES_SUCCESS } from \"../../constants/ActionTypes\";\nvar INIT_STATE = {\n  notesList: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_STICKY:\n      {\n        return _objectSpread({}, state, {\n          notesList: action.notesList\n        });\n      }\n\n    case FETCH_ALL_NOTES_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          notesList: action.payload\n        });\n      }\n\n    case UPDATE_ALL_NOTES_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          notesList: action.payload\n        });\n      }\n\n    case NOTES_UPDATE:\n      return _objectSpread({}, state, {\n        notesList: action.notesList\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/appRedux/reducers/Notes.js"],"names":["FETCH_ALL_NOTES_SUCCESS","GET_STICKY","NOTES_UPDATE","UPDATE_ALL_NOTES_SUCCESS","INIT_STATE","notesList","state","action","type","payload"],"mappings":";AAAA,SACEA,uBADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,wBAJF,QAKO,6BALP;AAOA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,SAAS,EAAE;AADM,CAAnB;AAKA,gBAAe,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBF,UAAuB;AAAA,MAAXG,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,UAAL;AAAiB;AACf,iCACKK,KADL;AAEED,UAAAA,SAAS,EAAEE,MAAM,CAACF;AAFpB;AAID;;AAED,SAAKL,uBAAL;AAA8B;AAC5B,iCACKM,KADL;AAEED,UAAAA,SAAS,EAAEE,MAAM,CAACE;AAFpB;AAID;;AAED,SAAKN,wBAAL;AAA+B;AAC7B,iCACKG,KADL;AAEED,UAAAA,SAAS,EAAEE,MAAM,CAACE;AAFpB;AAID;;AAED,SAAKP,YAAL;AACE,+BACKI,KADL;AAEED,QAAAA,SAAS,EAAEE,MAAM,CAACF;AAFpB;;AAKF;AACE,aAAOC,KAAP;AA9BJ;AAgCD,CAjCD","sourcesContent":["import {\n  FETCH_ALL_NOTES_SUCCESS,\n  GET_STICKY,\n  NOTES_UPDATE,\n  UPDATE_ALL_NOTES_SUCCESS\n} from \"../../constants/ActionTypes\";\n\nconst INIT_STATE = {\n  notesList: []\n};\n\n\nexport default (state = INIT_STATE, action) => {\n  switch (action.type) {\n\n    case GET_STICKY: {\n      return {\n        ...state,\n        notesList: action.notesList,\n      }\n    }\n\n    case FETCH_ALL_NOTES_SUCCESS: {\n      return {\n        ...state,\n        notesList: action.payload,\n      }\n    }\n\n    case UPDATE_ALL_NOTES_SUCCESS: {\n      return {\n        ...state,\n        notesList: action.payload,\n      }\n    }\n\n    case NOTES_UPDATE:\n      return {\n        ...state,\n        notesList: action.notesList,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}