{"ast":null,"code":"var _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/extensions/charts/amchart/area/Components/AreaWithTimeBased.js\";\nimport React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nvar AreaWithTimeBased = function AreaWithTimeBased() {\n  var chartData = generateChartData();\n  var config = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"marginRight\": 80,\n    \"dataProvider\": chartData,\n    \"valueAxes\": [{\n      \"position\": \"left\",\n      \"title\": \"Unique visitors\"\n    }],\n    \"graphs\": [{\n      \"id\": \"g1\",\n      \"fillAlphas\": 0.4,\n      \"valueField\": \"visits\",\n      \"balloonText\": \"<div style='margin:5px; font-size:19px;'>Visits:<b>[[value]]</b></div>\"\n    }],\n    \"chartScrollbar\": {\n      \"graph\": \"g1\",\n      \"scrollbarHeight\": 80,\n      \"backgroundAlpha\": 0,\n      \"selectedBackgroundAlpha\": 0.1,\n      \"selectedBackgroundColor\": \"#888888\",\n      \"graphFillAlpha\": 0,\n      \"graphLineAlpha\": 0.5,\n      \"selectedGraphFillAlpha\": 0,\n      \"selectedGraphLineAlpha\": 1,\n      \"autoGridCount\": true,\n      \"color\": \"#AAAAAA\"\n    },\n    \"chartCursor\": {\n      \"categoryBalloonDateFormat\": \"JJ:NN, DD MMMM\",\n      \"cursorPosition\": \"mouse\"\n    },\n    \"categoryField\": \"date\",\n    \"categoryAxis\": {\n      \"minPeriod\": \"mm\",\n      \"parseDates\": true\n    },\n    \"export\": {\n      \"enabled\": true,\n      \"dateFormat\": \"YYYY-MM-DD HH:NN:SS\"\n    }\n  }; // generate some random data, quite different range\n\n  function generateChartData() {\n    var chartData = []; // current date\n\n    var firstDate = new Date(); // now set 500 minutes back\n\n    firstDate.setMinutes(firstDate.getDate() - 1000); // and generate 500 data items\n\n    var visits = 500;\n\n    for (var i = 0; i < 500; i++) {\n      var newDate = new Date(firstDate); // each time we add one minute\n\n      newDate.setMinutes(newDate.getMinutes() + i); // some random number\n\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10); // add data item to the array\n\n      chartData.push({\n        date: newDate,\n        visits: visits\n      });\n    }\n\n    return chartData;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(AmCharts.React, {\n    style: {\n      width: \"100%\",\n      height: \"500px\"\n    },\n    options: config,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n};\n\nexport default AreaWithTimeBased;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/extensions/charts/amchart/area/Components/AreaWithTimeBased.js"],"names":["React","AmCharts","AreaWithTimeBased","chartData","generateChartData","config","firstDate","Date","setMinutes","getDate","visits","i","newDate","getMinutes","Math","round","random","push","date","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAE9B,MAAMC,SAAS,GAAGC,iBAAiB,EAAnC;AACA,MAAMC,MAAM,GAAG;AACb,YAAQ,QADK;AAEb,aAAS,OAFI;AAGb,mBAAe,EAHF;AAIb,oBAAgBF,SAJH;AAKb,iBAAa,CAAC;AACZ,kBAAY,MADA;AAEZ,eAAS;AAFG,KAAD,CALA;AASb,cAAU,CAAC;AACT,YAAM,IADG;AAET,oBAAc,GAFL;AAGT,oBAAc,QAHL;AAIT,qBAAe;AAJN,KAAD,CATG;AAeb,sBAAkB;AAChB,eAAS,IADO;AAEhB,yBAAmB,EAFH;AAGhB,yBAAmB,CAHH;AAIhB,iCAA2B,GAJX;AAKhB,iCAA2B,SALX;AAMhB,wBAAkB,CANF;AAOhB,wBAAkB,GAPF;AAQhB,gCAA0B,CARV;AAShB,gCAA0B,CATV;AAUhB,uBAAiB,IAVD;AAWhB,eAAS;AAXO,KAfL;AA4Bb,mBAAe;AACb,mCAA6B,gBADhB;AAEb,wBAAkB;AAFL,KA5BF;AAgCb,qBAAiB,MAhCJ;AAiCb,oBAAgB;AACd,mBAAa,IADC;AAEd,oBAAc;AAFA,KAjCH;AAqCb,cAAU;AACR,iBAAW,IADH;AAER,oBAAc;AAFN;AArCG,GAAf,CAH8B,CA+ChC;;AACE,WAASC,iBAAT,GAA6B;AAC3B,QAAID,SAAS,GAAG,EAAhB,CAD2B,CAE3B;;AACA,QAAMG,SAAS,GAAG,IAAIC,IAAJ,EAAlB,CAH2B,CAI3B;;AACAD,IAAAA,SAAS,CAACE,UAAV,CAAqBF,SAAS,CAACG,OAAV,KAAsB,IAA3C,EAL2B,CAO3B;;AACA,QAAIC,MAAM,GAAG,GAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,UAAMC,OAAO,GAAG,IAAIL,IAAJ,CAASD,SAAT,CAAhB,CAD4B,CAE5B;;AACAM,MAAAA,OAAO,CAACJ,UAAR,CAAmBI,OAAO,CAACC,UAAR,KAAuBF,CAA1C,EAH4B,CAI5B;;AACAD,MAAAA,MAAM,IAAII,IAAI,CAACC,KAAL,CAAW,CAACD,IAAI,CAACE,MAAL,KAAgB,GAAhB,GAAsB,CAAtB,GAA0B,CAAC,CAA5B,IAAiCF,IAAI,CAACE,MAAL,EAAjC,GAAiD,EAA5D,CAAV,CAL4B,CAM5B;;AACAb,MAAAA,SAAS,CAACc,IAAV,CAAe;AACbC,QAAAA,IAAI,EAAEN,OADO;AAEbF,QAAAA,MAAM,EAAEA;AAFK,OAAf;AAID;;AACD,WAAOP,SAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD,CAAU,KAAV;AAAgB,IAAA,KAAK,EAAE;AAACgB,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,MAAM,EAAE;AAAxB,KAAvB;AAAyD,IAAA,OAAO,EAAEf,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA7ED;;AA+EA,eAAeH,iBAAf","sourcesContent":["import React from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nconst AreaWithTimeBased = () => {\n\n  const chartData = generateChartData();\n  const config = {\n    \"type\": \"serial\",\n    \"theme\": \"light\",\n    \"marginRight\": 80,\n    \"dataProvider\": chartData,\n    \"valueAxes\": [{\n      \"position\": \"left\",\n      \"title\": \"Unique visitors\"\n    }],\n    \"graphs\": [{\n      \"id\": \"g1\",\n      \"fillAlphas\": 0.4,\n      \"valueField\": \"visits\",\n      \"balloonText\": \"<div style='margin:5px; font-size:19px;'>Visits:<b>[[value]]</b></div>\"\n    }],\n    \"chartScrollbar\": {\n      \"graph\": \"g1\",\n      \"scrollbarHeight\": 80,\n      \"backgroundAlpha\": 0,\n      \"selectedBackgroundAlpha\": 0.1,\n      \"selectedBackgroundColor\": \"#888888\",\n      \"graphFillAlpha\": 0,\n      \"graphLineAlpha\": 0.5,\n      \"selectedGraphFillAlpha\": 0,\n      \"selectedGraphLineAlpha\": 1,\n      \"autoGridCount\": true,\n      \"color\": \"#AAAAAA\"\n    },\n    \"chartCursor\": {\n      \"categoryBalloonDateFormat\": \"JJ:NN, DD MMMM\",\n      \"cursorPosition\": \"mouse\"\n    },\n    \"categoryField\": \"date\",\n    \"categoryAxis\": {\n      \"minPeriod\": \"mm\",\n      \"parseDates\": true\n    },\n    \"export\": {\n      \"enabled\": true,\n      \"dateFormat\": \"YYYY-MM-DD HH:NN:SS\"\n    }\n  };\n\n\n// generate some random data, quite different range\n  function generateChartData() {\n    let chartData = [];\n    // current date\n    const firstDate = new Date();\n    // now set 500 minutes back\n    firstDate.setMinutes(firstDate.getDate() - 1000);\n\n    // and generate 500 data items\n    let visits = 500;\n    for (let i = 0; i < 500; i++) {\n      const newDate = new Date(firstDate);\n      // each time we add one minute\n      newDate.setMinutes(newDate.getMinutes() + i);\n      // some random number\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n      // add data item to the array\n      chartData.push({\n        date: newDate,\n        visits: visits\n      });\n    }\n    return chartData;\n  }\n\n  return (\n    <div className=\"App\">\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n    </div>\n  )\n}\n\nexport default AreaWithTimeBased;\n"]},"metadata":{},"sourceType":"module"}