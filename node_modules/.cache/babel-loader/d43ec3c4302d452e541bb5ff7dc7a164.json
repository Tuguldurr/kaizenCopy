{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/extensions/charts/amchart/composed/Components/AnimatedGauge.js\";\nimport React, { Component } from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nvar AnimatedGauge =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AnimatedGauge, _Component);\n\n  function AnimatedGauge() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AnimatedGauge);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AnimatedGauge)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      randomValue: 60\n    };\n    return _this;\n  }\n\n  _createClass(AnimatedGauge, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        return _this2.randomValue();\n      }, 2000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"randomValue\",\n    value: function randomValue() {\n      var min = 1;\n      var max = 100;\n      var randomValue = min + Math.random() * (max - min);\n      this.setState({\n        randomValue: randomValue\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var config = {\n        \"theme\": \"none\",\n        \"type\": \"gauge\",\n        \"axes\": [{\n          \"topTextFontSize\": 20,\n          \"topTextYOffset\": 70,\n          \"axisColor\": \"#31d6ea\",\n          \"axisThickness\": 1,\n          \"endValue\": 100,\n          \"gridInside\": true,\n          \"inside\": true,\n          \"radius\": \"50%\",\n          \"valueInterval\": 10,\n          \"tickColor\": \"#67b7dc\",\n          \"startAngle\": -90,\n          \"endAngle\": 90,\n          \"unit\": \"%\",\n          \"bandOutlineAlpha\": 0,\n          \"bands\": [{\n            \"color\": \"#0080ff\",\n            \"endValue\": 100,\n            \"innerRadius\": \"105%\",\n            \"radius\": \"170%\",\n            \"gradientRatio\": [0.5, 0, -0.5],\n            \"startValue\": 0\n          }, {\n            \"color\": \"#3cd3a3\",\n            \"endValue\": 0,\n            \"innerRadius\": \"105%\",\n            \"radius\": \"170%\",\n            \"gradientRatio\": [0.5, 0, -0.5],\n            \"startValue\": 0\n          }]\n        }],\n        \"arrows\": [{\n          \"id\": \"GaugeArrow-1\",\n          \"value\": this.state.randomValue\n        }]\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(AmCharts.React, {\n        style: {\n          width: \"100%\",\n          height: \"500px\"\n        },\n        options: config,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AnimatedGauge;\n}(Component);\n\nexport default AnimatedGauge;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/extensions/charts/amchart/composed/Components/AnimatedGauge.js"],"names":["React","Component","AmCharts","AnimatedGauge","state","randomValue","interval","setInterval","clearInterval","min","max","Math","random","setState","config","width","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,2BAArB;;IAEMC,a;;;;;;;;;;;;;;;;;UAGJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE;AADP,K;;;;;;wCAIY;AAAA;;AAClB,WAAKC,QAAL,GAAgBC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACF,WAAL,EAAN;AAAA,OAAD,EAA2B,IAA3B,CAA3B;AACD;;;2CAEsB;AACrBG,MAAAA,aAAa,CAAC,KAAKF,QAAN,CAAb;AACD;;;kCAEa;AACZ,UAAMG,GAAG,GAAG,CAAZ;AACA,UAAMC,GAAG,GAAG,GAAZ;AACA,UAAML,WAAW,GAAGI,GAAG,GAAGE,IAAI,CAACC,MAAL,MAAiBF,GAAG,GAAGD,GAAvB,CAA1B;AACA,WAAKI,QAAL,CAAc;AAACR,QAAAA,WAAW,EAAXA;AAAD,OAAd;AACD;;;6BAEQ;AACP,UAAMS,MAAM,GAAG;AACb,iBAAS,MADI;AAEb,gBAAQ,OAFK;AAGb,gBAAQ,CAAC;AACP,6BAAmB,EADZ;AAEP,4BAAkB,EAFX;AAGP,uBAAa,SAHN;AAIP,2BAAiB,CAJV;AAKP,sBAAY,GALL;AAMP,wBAAc,IANP;AAOP,oBAAU,IAPH;AAQP,oBAAU,KARH;AASP,2BAAiB,EATV;AAUP,uBAAa,SAVN;AAWP,wBAAc,CAAC,EAXR;AAYP,sBAAY,EAZL;AAaP,kBAAQ,GAbD;AAcP,8BAAoB,CAdb;AAeP,mBAAS,CAAC;AACR,qBAAS,SADD;AAER,wBAAY,GAFJ;AAGR,2BAAe,MAHP;AAIR,sBAAU,MAJF;AAKR,6BAAiB,CAAC,GAAD,EAAM,CAAN,EAAS,CAAC,GAAV,CALT;AAMR,0BAAc;AANN,WAAD,EAON;AACD,qBAAS,SADR;AAED,wBAAY,CAFX;AAGD,2BAAe,MAHd;AAID,sBAAU,MAJT;AAKD,6BAAiB,CAAC,GAAD,EAAM,CAAN,EAAS,CAAC,GAAV,CALhB;AAMD,0BAAc;AANb,WAPM;AAfF,SAAD,CAHK;AAkCb,kBAAU,CACR;AACE,gBAAM,cADR;AAEE,mBAAS,KAAKV,KAAL,CAAWC;AAFtB,SADQ;AAlCG,OAAf;AAyCA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CAAU,KAAV;AAAgB,QAAA,KAAK,EAAE;AAACU,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,MAAM,EAAE;AAAxB,SAAvB;AAAyD,QAAA,OAAO,EAAEF,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EArEyBb,S;;AAwE5B,eAAeE,aAAf","sourcesContent":["import React, {Component} from \"react\";\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nclass AnimatedGauge extends Component {\n\n\n  state = {\n    randomValue: 60\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.randomValue(), 2000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  randomValue() {\n    const min = 1;\n    const max = 100;\n    const randomValue = min + Math.random() * (max - min);\n    this.setState({randomValue});\n  }\n\n  render() {\n    const config = {\n      \"theme\": \"none\",\n      \"type\": \"gauge\",\n      \"axes\": [{\n        \"topTextFontSize\": 20,\n        \"topTextYOffset\": 70,\n        \"axisColor\": \"#31d6ea\",\n        \"axisThickness\": 1,\n        \"endValue\": 100,\n        \"gridInside\": true,\n        \"inside\": true,\n        \"radius\": \"50%\",\n        \"valueInterval\": 10,\n        \"tickColor\": \"#67b7dc\",\n        \"startAngle\": -90,\n        \"endAngle\": 90,\n        \"unit\": \"%\",\n        \"bandOutlineAlpha\": 0,\n        \"bands\": [{\n          \"color\": \"#0080ff\",\n          \"endValue\": 100,\n          \"innerRadius\": \"105%\",\n          \"radius\": \"170%\",\n          \"gradientRatio\": [0.5, 0, -0.5],\n          \"startValue\": 0\n        }, {\n          \"color\": \"#3cd3a3\",\n          \"endValue\": 0,\n          \"innerRadius\": \"105%\",\n          \"radius\": \"170%\",\n          \"gradientRatio\": [0.5, 0, -0.5],\n          \"startValue\": 0\n        }]\n      }],\n      \"arrows\": [\n        {\n          \"id\": \"GaugeArrow-1\",\n          \"value\": this.state.randomValue\n        }\n      ]\n    };\n    return (\n      <div className=\"App\">\n        <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\n      </div>\n    )\n  }\n}\n\nexport default AnimatedGauge;\n"]},"metadata":{},"sourceType":"module"}