{"ast":null,"code":"import _objectSpread from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { DELETE_CONTACT_SUCCESS, GET_All_CONTACT_SUCCESS, ON_ADD_CONTACT_SUCCESS, UPDATE_CONTACT_SUCCESS } from \"../../constants/ActionTypes\";\nvar INIT_STATE = {\n  contactList: [],\n  selectedContact: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_All_CONTACT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          contactList: action.payload\n        });\n      }\n\n    case UPDATE_CONTACT_SUCCESS:\n      return _objectSpread({}, state, {\n        contactList: state.contactList.map(function (contact) {\n          return contact.id === action.payload.id ? action.payload : contact;\n        })\n      });\n\n    case DELETE_CONTACT_SUCCESS:\n      return _objectSpread({}, state, {\n        contactList: state.contactList.filter(function (contact) {\n          return contact.id !== action.payload.id;\n        })\n      });\n\n    case ON_ADD_CONTACT_SUCCESS:\n      return _objectSpread({}, state, {\n        contactList: action.payload.contact(state.contactList)\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/appRedux/reducers/Contact.js"],"names":["DELETE_CONTACT_SUCCESS","GET_All_CONTACT_SUCCESS","ON_ADD_CONTACT_SUCCESS","UPDATE_CONTACT_SUCCESS","INIT_STATE","contactList","selectedContact","state","action","type","payload","map","contact","id","filter"],"mappings":";AAAA,SACEA,sBADF,EAEEC,uBAFF,EAGEC,sBAHF,EAIEC,sBAJF,QAKO,6BALP;AAOA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,eAAe,EAAE;AAFA,CAAnB;AAMA,gBAAe,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBH,UAAuB;AAAA,MAAXI,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AAGE,SAAKR,uBAAL;AAA8B;AAC5B,iCACKM,KADL;AAEEF,UAAAA,WAAW,EAAEG,MAAM,CAACE;AAFtB;AAID;;AAED,SAAKP,sBAAL;AACE,+BACKI,KADL;AAEEF,QAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,CAAkBM,GAAlB,CAAsB,UAACC,OAAD;AAAA,iBAAaA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACE,OAAP,CAAeG,EAA9B,GAAmCL,MAAM,CAACE,OAA1C,GAAoDE,OAAjE;AAAA,SAAtB;AAFf;;AAKF,SAAKZ,sBAAL;AACE,+BACKO,KADL;AAEEF,QAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,CAAkBS,MAAlB,CAAyB,UAACF,OAAD;AAAA,iBAAaA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACE,OAAP,CAAeG,EAA3C;AAAA,SAAzB;AAFf;;AAKF,SAAKX,sBAAL;AACE,+BACKK,KADL;AAEEF,QAAAA,WAAW,EAAEG,MAAM,CAACE,OAAP,CAAeE,OAAf,CAAuBL,KAAK,CAACF,WAA7B;AAFf;;AAKF;AACE,aAAOE,KAAP;AA7BJ;AA+BD,CAhCD","sourcesContent":["import {\n  DELETE_CONTACT_SUCCESS,\n  GET_All_CONTACT_SUCCESS,\n  ON_ADD_CONTACT_SUCCESS,\n  UPDATE_CONTACT_SUCCESS\n} from \"../../constants/ActionTypes\";\n\nconst INIT_STATE = {\n  contactList: [],\n  selectedContact: []\n};\n\n\nexport default (state = INIT_STATE, action) => {\n  switch (action.type) {\n\n\n    case GET_All_CONTACT_SUCCESS: {\n      return {\n        ...state,\n        contactList: action.payload,\n      }\n    }\n\n    case UPDATE_CONTACT_SUCCESS:\n      return {\n        ...state,\n        contactList: state.contactList.map((contact) => contact.id === action.payload.id ? action.payload : contact),\n      };\n\n    case DELETE_CONTACT_SUCCESS:\n      return {\n        ...state,\n        contactList: state.contactList.filter((contact) => contact.id !== action.payload.id),\n      };\n\n    case ON_ADD_CONTACT_SUCCESS:\n      return {\n        ...state,\n        contactList: action.payload.contact(state.contactList),\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}