{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/containers/Customizer.js\";\nimport React, { Component } from \"react\";\nimport { Button, Drawer, Form, Radio } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Auxiliary from \"util/Auxiliary\";\nimport CustomScrollbars from \"util/CustomScrollbars\";\nimport { onLayoutTypeChange, onNavStyleChange, setThemeType } from \"appRedux/actions/Setting\";\nimport { BLUE, BLUE_DARK_TEXT_COLOR, BLUE_SEC, DARK_BLUE, DARK_BLUE_DARK_TEXT_COLOR, DARK_BLUE_SEC, DEEP_ORANGE, DEEP_ORANGE_DARK_TEXT_COLOR, DEEP_ORANGE_SEC, LAYOUT_TYPE_BOXED, LAYOUT_TYPE_FRAMED, LAYOUT_TYPE_FULL, LIGHT_BLUE, LIGHT_BLUE_DARK_TEXT_COLOR, LIGHT_BLUE_SEC, LIGHT_PURPLE, LIGHT_PURPLE_1, LIGHT_PURPLE_1_DARK_TEXT_COLOR, LIGHT_PURPLE_1_SEC, LIGHT_PURPLE_2, LIGHT_PURPLE_2_DARK_TEXT_COLOR, LIGHT_PURPLE_2_SEC, LIGHT_PURPLE_DARK_TEXT_COLOR, LIGHT_PURPLE_SEC, NAV_STYLE_ABOVE_HEADER, NAV_STYLE_BELOW_HEADER, NAV_STYLE_DARK_HORIZONTAL, NAV_STYLE_DEFAULT_HORIZONTAL, NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_INSIDE_HEADER_HORIZONTAL, NAV_STYLE_MINI_SIDEBAR, NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, ORANGE, ORANGE_DARK_TEXT_COLOR, ORANGE_SEC, RED, RED_DARK_TEXT_COLOR, RED_SEC, THEME_TYPE_DARK, THEME_TYPE_LITE, THEME_TYPE_SEMI_DARK } from \"../constants/ThemeSetting\";\nimport { setThemeColor } from \"../appRedux/actions\";\n\nvar Customizer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Customizer, _Component);\n\n  function Customizer() {\n    var _this;\n\n    _classCallCheck(this, Customizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Customizer).call(this));\n    _this.state = {\n      isCustomizerOpened: false\n    };\n\n    _this.handleColorChange = function (filename) {\n      console.log(\"filename\", filename);\n      var link = document.createElement('link');\n      link.type = 'text/css';\n      link.rel = 'stylesheet';\n      link.className = 'gx-style';\n      link.href = \"/css/\".concat(filename, \".css\");\n      setTimeout(function () {\n        var children = document.getElementsByClassName('gx-style');\n\n        if (children.length > 1) {\n          for (var index = 0; index < children.length; index++) {\n            if (index + 1 < children.length) {\n              var child = children[index];\n              child.parentNode.removeChild(child);\n            }\n          }\n        }\n      }, 1000);\n      document.body.appendChild(link);\n\n      _this.props.setThemeColor(filename);\n    };\n\n    _this.toggleCustomizer = function () {\n      _this.setState(function (previousState) {\n        return {\n          isCustomizerOpened: !previousState.isCustomizerOpened\n        };\n      });\n    };\n\n    _this.onThemeTypeChange = function (e) {\n      _this.props.setThemeType(e.target.value);\n    };\n\n    _this.onNavStyleChange = function (navStyle) {\n      _this.props.onNavStyleChange(navStyle);\n    };\n\n    _this.getCustomizerContent = function () {\n      var _this$props = _this.props,\n          themeType = _this$props.themeType,\n          layoutType = _this$props.layoutType,\n          navStyle = _this$props.navStyle,\n          themeColor = _this$props.themeColor;\n\n      if (themeType === THEME_TYPE_DARK) {\n        document.body.classList.add('dark-theme');\n        var link = document.createElement('link');\n        link.type = 'text/css';\n        link.rel = 'stylesheet';\n        link.href = \"/css/dark_theme.css\";\n        link.className = 'style_dark_theme';\n        document.body.appendChild(link);\n      } else if (document.body.classList.contains('dark-theme')) {\n        document.body.classList.remove('dark-theme');\n        var children = document.getElementsByClassName('style_dark_theme');\n\n        if (children.length > 1) {\n          for (var index = 0; index < children.length; index++) {\n            if (index < children.length) {\n              var child = children[index];\n              child.parentNode.removeChild(child);\n            }\n          }\n        }\n      }\n\n      return React.createElement(CustomScrollbars, {\n        className: \"gx-customizer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-customizer-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"gx-mb-3 gx-text-uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Theme\"), React.createElement(Radio.Group, {\n        value: themeType,\n        onChange: _this.onThemeTypeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Radio.Button, {\n        value: THEME_TYPE_LITE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Lite\"), React.createElement(Radio.Button, {\n        value: THEME_TYPE_SEMI_DARK,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Semi Dark\"), React.createElement(Radio.Button, {\n        value: THEME_TYPE_DARK,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Dark\"))), React.createElement(\"div\", {\n        className: \"gx-customizer-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, _this.getPresetColors(themeColor)), React.createElement(\"h6\", {\n        className: \"gx-mb-3 gx-text-uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Nav Style\"), _this.getNavStyles(navStyle), React.createElement(\"h6\", {\n        className: \"gx-mb-3 gx-text-uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Layout\"), _this.getLayoutsTypes(layoutType));\n    };\n\n    _this.handleThemeColor = function (fileName) {\n      _this.handleColorChange(fileName);\n    };\n\n    _this.handleLayoutTypes = function (layoutType) {\n      _this.props.onLayoutTypeChange(layoutType);\n    };\n\n    _this.getPresetColors = function (themeColor) {\n      return React.createElement(\"ul\", {\n        className: \"gx-color-option gx-list-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.handleThemeColor.bind(_assertThisInitialized(_assertThisInitialized(_this)), \"light_purple\"),\n        style: {\n          backgroundColor: LIGHT_PURPLE_SEC,\n          color: LIGHT_PURPLE_DARK_TEXT_COLOR\n        },\n        className: \"gx-link gx-color-light-purple \".concat(themeColor === LIGHT_PURPLE && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.handleThemeColor.bind(_assertThisInitialized(_assertThisInitialized(_this)), \"red\"),\n        style: {\n          backgroundColor: RED_SEC,\n          color: RED_DARK_TEXT_COLOR\n        },\n        className: \"gx-link gx-color-red \".concat(themeColor === RED && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.handleThemeColor.bind(_assertThisInitialized(_assertThisInitialized(_this)), \"blue\"),\n        style: {\n          backgroundColor: BLUE_SEC,\n          color: BLUE_DARK_TEXT_COLOR\n        },\n        className: \"gx-link gx-color-blue \".concat(themeColor === BLUE && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.handleThemeColor.bind(_assertThisInitialized(_assertThisInitialized(_this)), \"dark_blue\"),\n        style: {\n          backgroundColor: DARK_BLUE_SEC,\n          color: DARK_BLUE_DARK_TEXT_COLOR\n        },\n        className: \"gx-link gx-color-dark-blue \".concat(themeColor === DARK_BLUE && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.handleThemeColor.bind(_assertThisInitialized(_assertThisInitialized(_this)), \"orange\"),\n        style: {\n          backgroundColor: ORANGE_SEC,\n          color: ORANGE_DARK_TEXT_COLOR\n        },\n        className: \"gx-link gx-color-orange \".concat(themeColor === ORANGE && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.handleThemeColor.bind(_assertThisInitialized(_assertThisInitialized(_this)), \"light_blue\"),\n        style: {\n          backgroundColor: LIGHT_BLUE_SEC,\n          color: LIGHT_BLUE_DARK_TEXT_COLOR\n        },\n        className: \"gx-link gx-color-light-blue \".concat(themeColor === LIGHT_BLUE && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.handleThemeColor.bind(_assertThisInitialized(_assertThisInitialized(_this)), \"deep_orange\"),\n        style: {\n          backgroundColor: DEEP_ORANGE_SEC,\n          color: DEEP_ORANGE_DARK_TEXT_COLOR\n        },\n        className: \"gx-link gx-color-deep-orange \".concat(themeColor === DEEP_ORANGE && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.handleThemeColor.bind(_assertThisInitialized(_assertThisInitialized(_this)), \"light_purple_1\"),\n        style: {\n          backgroundColor: LIGHT_PURPLE_1_SEC,\n          color: LIGHT_PURPLE_1_DARK_TEXT_COLOR\n        },\n        className: \"gx-link gx-color-light-purple1 \".concat(themeColor === LIGHT_PURPLE_1 && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.handleThemeColor.bind(_assertThisInitialized(_assertThisInitialized(_this)), \"light_purple_2\"),\n        style: {\n          backgroundColor: LIGHT_PURPLE_2_SEC,\n          color: LIGHT_PURPLE_2_DARK_TEXT_COLOR\n        },\n        className: \"gx-link gx-color-light-purple2 \".concat(themeColor === LIGHT_PURPLE_2 && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })));\n    };\n\n    _this.getLayoutsTypes = function (layoutType) {\n      return React.createElement(\"ul\", {\n        className: \"gx-layout-option gx-list-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.handleLayoutTypes.bind(_assertThisInitialized(_assertThisInitialized(_this)), LAYOUT_TYPE_FRAMED),\n        className: \"gx-pointer \".concat(layoutType === LAYOUT_TYPE_FRAMED && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('assets/images/layouts/framed.png'),\n        alt: \"framed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.handleLayoutTypes.bind(_assertThisInitialized(_assertThisInitialized(_this)), LAYOUT_TYPE_FULL),\n        className: \"gx-pointer \".concat(layoutType === LAYOUT_TYPE_FULL && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('assets/images/layouts/full width.png'),\n        alt: \"full width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.handleLayoutTypes.bind(_assertThisInitialized(_assertThisInitialized(_this)), LAYOUT_TYPE_BOXED),\n        className: \"gx-pointer \".concat(layoutType === LAYOUT_TYPE_BOXED && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('assets/images/layouts/boxed.png'),\n        alt: \"boxed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }))));\n    };\n\n    _this.getNavStyles = function (navStyle) {\n      return React.createElement(\"ul\", {\n        className: \"gx-nav-option gx-list-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.onNavStyleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)), NAV_STYLE_FIXED),\n        className: \"gx-pointer \".concat(navStyle === NAV_STYLE_FIXED && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('assets/images/layouts/fixed.png'),\n        alt: \"fixed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.onNavStyleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)), NAV_STYLE_MINI_SIDEBAR),\n        className: \"gx-pointer \".concat(navStyle === NAV_STYLE_MINI_SIDEBAR && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('assets/images/layouts/mini sidebar.png'),\n        alt: \"mini sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.onNavStyleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)), NAV_STYLE_DRAWER),\n        className: \"gx-pointer \".concat(navStyle === NAV_STYLE_DRAWER && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('assets/images/layouts/drawer nav.png'),\n        alt: \"drawer nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.onNavStyleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)), NAV_STYLE_NO_HEADER_MINI_SIDEBAR),\n        className: \"gx-pointer \".concat(navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('assets/images/layouts/no header mini sidebar.png'),\n        alt: \"no hader mini sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.onNavStyleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)), NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR),\n        className: \"gx-pointer \".concat(navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('assets/images/layouts/vertical no header.png'),\n        alt: \"vertical no header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.onNavStyleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)), NAV_STYLE_DEFAULT_HORIZONTAL),\n        className: \"gx-pointer \".concat(navStyle === NAV_STYLE_DEFAULT_HORIZONTAL && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('assets/images/layouts/default horizontal.png'),\n        alt: \"default horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.onNavStyleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)), NAV_STYLE_DARK_HORIZONTAL),\n        className: \"gx-pointer \".concat(navStyle === NAV_STYLE_DARK_HORIZONTAL && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('assets/images/layouts/dark horizontal.png'),\n        alt: \"dark horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.onNavStyleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)), NAV_STYLE_INSIDE_HEADER_HORIZONTAL),\n        className: \"gx-pointer \".concat(navStyle === NAV_STYLE_INSIDE_HEADER_HORIZONTAL && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('assets/images/layouts/inside header horizontal.png'),\n        alt: \"inside header horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.onNavStyleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)), NAV_STYLE_BELOW_HEADER),\n        className: \"gx-pointer \".concat(navStyle === NAV_STYLE_BELOW_HEADER && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('assets/images/layouts/below header.png'),\n        alt: \"below header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: _this.onNavStyleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)), NAV_STYLE_ABOVE_HEADER),\n        className: \"gx-pointer \".concat(navStyle === NAV_STYLE_ABOVE_HEADER && 'active'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('assets/images/layouts/top to header.png'),\n        alt: \"top to header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }))));\n    };\n\n    var _link = document.createElement('link');\n\n    _link.type = 'text/css';\n    _link.rel = 'stylesheet';\n    _link.href = \"/css/style.css\";\n    _link.className = 'gx-style';\n    document.body.appendChild(_link);\n    return _this;\n  }\n\n  _createClass(Customizer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Auxiliary, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        placement: \"right\",\n        closable: false,\n        onClose: this.toggleCustomizer,\n        visible: this.state.isCustomizerOpened,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, this.getCustomizerContent()), React.createElement(\"div\", {\n        className: \"gx-customizer-option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.toggleCustomizer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon icon-setting fxicon-hc-spin gx-d-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Customizer;\n}(Component);\n\nCustomizer = Form.create()(Customizer);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var settings = _ref.settings;\n  var themeType = settings.themeType,\n      width = settings.width,\n      themeColor = settings.themeColor,\n      navStyle = settings.navStyle,\n      layoutType = settings.layoutType;\n  return {\n    themeType: themeType,\n    width: width,\n    themeColor: themeColor,\n    navStyle: navStyle,\n    layoutType: layoutType\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setThemeType: setThemeType,\n  setThemeColor: setThemeColor,\n  onNavStyleChange: onNavStyleChange,\n  onLayoutTypeChange: onLayoutTypeChange\n})(Customizer);","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/containers/Customizer.js"],"names":["React","Component","Button","Drawer","Form","Radio","connect","Auxiliary","CustomScrollbars","onLayoutTypeChange","onNavStyleChange","setThemeType","BLUE","BLUE_DARK_TEXT_COLOR","BLUE_SEC","DARK_BLUE","DARK_BLUE_DARK_TEXT_COLOR","DARK_BLUE_SEC","DEEP_ORANGE","DEEP_ORANGE_DARK_TEXT_COLOR","DEEP_ORANGE_SEC","LAYOUT_TYPE_BOXED","LAYOUT_TYPE_FRAMED","LAYOUT_TYPE_FULL","LIGHT_BLUE","LIGHT_BLUE_DARK_TEXT_COLOR","LIGHT_BLUE_SEC","LIGHT_PURPLE","LIGHT_PURPLE_1","LIGHT_PURPLE_1_DARK_TEXT_COLOR","LIGHT_PURPLE_1_SEC","LIGHT_PURPLE_2","LIGHT_PURPLE_2_DARK_TEXT_COLOR","LIGHT_PURPLE_2_SEC","LIGHT_PURPLE_DARK_TEXT_COLOR","LIGHT_PURPLE_SEC","NAV_STYLE_ABOVE_HEADER","NAV_STYLE_BELOW_HEADER","NAV_STYLE_DARK_HORIZONTAL","NAV_STYLE_DEFAULT_HORIZONTAL","NAV_STYLE_DRAWER","NAV_STYLE_FIXED","NAV_STYLE_INSIDE_HEADER_HORIZONTAL","NAV_STYLE_MINI_SIDEBAR","NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR","NAV_STYLE_NO_HEADER_MINI_SIDEBAR","ORANGE","ORANGE_DARK_TEXT_COLOR","ORANGE_SEC","RED","RED_DARK_TEXT_COLOR","RED_SEC","THEME_TYPE_DARK","THEME_TYPE_LITE","THEME_TYPE_SEMI_DARK","setThemeColor","Customizer","state","isCustomizerOpened","handleColorChange","filename","console","log","link","document","createElement","type","rel","className","href","setTimeout","children","getElementsByClassName","length","index","child","parentNode","removeChild","body","appendChild","props","toggleCustomizer","setState","previousState","onThemeTypeChange","e","target","value","navStyle","getCustomizerContent","themeType","layoutType","themeColor","classList","add","contains","remove","getPresetColors","getNavStyles","getLayoutsTypes","handleThemeColor","fileName","handleLayoutTypes","bind","backgroundColor","color","require","create","mapStateToProps","settings","width"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {Button, Drawer, Form, Radio} from \"antd\";\nimport {connect} from \"react-redux\";\nimport Auxiliary from \"util/Auxiliary\";\nimport CustomScrollbars from \"util/CustomScrollbars\";\nimport {onLayoutTypeChange, onNavStyleChange, setThemeType} from \"appRedux/actions/Setting\";\n\nimport {\n  BLUE,\n  BLUE_DARK_TEXT_COLOR,\n  BLUE_SEC,\n  DARK_BLUE,\n  DARK_BLUE_DARK_TEXT_COLOR,\n  DARK_BLUE_SEC,\n  DEEP_ORANGE,\n  DEEP_ORANGE_DARK_TEXT_COLOR,\n  DEEP_ORANGE_SEC,\n  LAYOUT_TYPE_BOXED,\n  LAYOUT_TYPE_FRAMED,\n  LAYOUT_TYPE_FULL,\n  LIGHT_BLUE,\n  LIGHT_BLUE_DARK_TEXT_COLOR,\n  LIGHT_BLUE_SEC,\n  LIGHT_PURPLE,\n  LIGHT_PURPLE_1,\n  LIGHT_PURPLE_1_DARK_TEXT_COLOR,\n  LIGHT_PURPLE_1_SEC,\n  LIGHT_PURPLE_2,\n  LIGHT_PURPLE_2_DARK_TEXT_COLOR,\n  LIGHT_PURPLE_2_SEC,\n  LIGHT_PURPLE_DARK_TEXT_COLOR,\n  LIGHT_PURPLE_SEC,\n  NAV_STYLE_ABOVE_HEADER,\n  NAV_STYLE_BELOW_HEADER,\n  NAV_STYLE_DARK_HORIZONTAL,\n  NAV_STYLE_DEFAULT_HORIZONTAL,\n  NAV_STYLE_DRAWER,\n  NAV_STYLE_FIXED,\n  NAV_STYLE_INSIDE_HEADER_HORIZONTAL,\n  NAV_STYLE_MINI_SIDEBAR,\n  NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR,\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\n  ORANGE,\n  ORANGE_DARK_TEXT_COLOR,\n  ORANGE_SEC,\n  RED,\n  RED_DARK_TEXT_COLOR,\n  RED_SEC,\n  THEME_TYPE_DARK,\n  THEME_TYPE_LITE,\n  THEME_TYPE_SEMI_DARK\n} from \"../constants/ThemeSetting\";\nimport {setThemeColor} from \"../appRedux/actions\";\n\n\nclass Customizer extends Component {\n\n  state = {isCustomizerOpened: false};\n\n  constructor() {\n    super();\n    let link = document.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = \"/css/style.css\";\n    link.className = 'gx-style';\n    document.body.appendChild(link);\n  }\n\n  handleColorChange = (filename) => {\n    console.log(\"filename\", filename);\n    let link = document.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.className = 'gx-style';\n    link.href = `/css/${filename}.css`;\n\n    setTimeout(() => {\n      const children = document.getElementsByClassName('gx-style');\n\n      if (children.length > 1) {\n        for (let index = 0; index < children.length; index++) {\n          if ((index + 1) < children.length) {\n            const child = children[index];\n            child.parentNode.removeChild(child);\n          }\n        }\n      }\n    }, 1000);\n    document.body.appendChild(link);\n\n    this.props.setThemeColor(filename);\n  };\n\n  toggleCustomizer = () => {\n    this.setState(previousState => (\n      {\n        isCustomizerOpened: !previousState.isCustomizerOpened\n      }));\n  };\n\n  onThemeTypeChange = (e) => {\n    this.props.setThemeType(e.target.value);\n  };\n\n  onNavStyleChange = (navStyle) => {\n    this.props.onNavStyleChange(navStyle);\n  };\n\n  getCustomizerContent = () => {\n    const {themeType, layoutType, navStyle, themeColor} = this.props;\n\n    if (themeType === THEME_TYPE_DARK) {\n      document.body.classList.add('dark-theme');\n      let link = document.createElement('link');\n      link.type = 'text/css';\n      link.rel = 'stylesheet';\n      link.href = \"/css/dark_theme.css\";\n      link.className = 'style_dark_theme';\n      document.body.appendChild(link);\n    } else if (document.body.classList.contains('dark-theme')) {\n      document.body.classList.remove('dark-theme');\n      const children = document.getElementsByClassName('style_dark_theme');\n      if (children.length > 1) {\n        for (let index = 0; index < children.length; index++) {\n          if (index < children.length) {\n            const child = children[index];\n            child.parentNode.removeChild(child);\n          }\n        }\n      }\n\n    }\n\n    return <CustomScrollbars className=\"gx-customizer\">\n      <div className=\"gx-customizer-item\">\n        <h6 className=\"gx-mb-3 gx-text-uppercase\">Theme</h6>\n        <Radio.Group value={themeType} onChange={this.onThemeTypeChange}>\n          <Radio.Button value={THEME_TYPE_LITE}>Lite</Radio.Button>\n          <Radio.Button value={THEME_TYPE_SEMI_DARK}>Semi Dark</Radio.Button>\n          <Radio.Button value={THEME_TYPE_DARK}>Dark</Radio.Button>\n        </Radio.Group>\n      </div>\n      <div className=\"gx-customizer-item\">\n        {this.getPresetColors(themeColor)}\n      </div>\n\n      <h6 className=\"gx-mb-3 gx-text-uppercase\">Nav Style</h6>\n\n      {this.getNavStyles(navStyle)}\n\n      <h6 className=\"gx-mb-3 gx-text-uppercase\">Layout</h6>\n\n      {this.getLayoutsTypes(layoutType)}\n    </CustomScrollbars>\n  };\n  handleThemeColor = (fileName) => {\n    this.handleColorChange(fileName);\n  };\n\n  handleLayoutTypes = (layoutType) => {\n    this.props.onLayoutTypeChange(layoutType);\n  };\n  getPresetColors = (themeColor) => {\n    return <ul className=\"gx-color-option gx-list-inline\">\n\n      <li>\n        <span\n          onClick={this.handleThemeColor.bind(this, \"light_purple\")}\n          style={{backgroundColor: LIGHT_PURPLE_SEC, color: LIGHT_PURPLE_DARK_TEXT_COLOR}}\n          className={`gx-link gx-color-light-purple ${themeColor === LIGHT_PURPLE && 'active'}`}/>\n      </li>\n      <li>\n        <span\n          onClick={this.handleThemeColor.bind(this, \"red\")}\n          style={{backgroundColor: RED_SEC, color: RED_DARK_TEXT_COLOR}}\n          className={`gx-link gx-color-red ${themeColor === RED && 'active'}`}/>\n      </li>\n      <li>\n        <span\n          onClick={this.handleThemeColor.bind(this, \"blue\")}\n          style={{backgroundColor: BLUE_SEC, color: BLUE_DARK_TEXT_COLOR}}\n          className={`gx-link gx-color-blue ${themeColor === BLUE && 'active'}`}/>\n      </li>\n      <li>\n        <span\n          onClick={this.handleThemeColor.bind(this, \"dark_blue\")}\n          style={{backgroundColor: DARK_BLUE_SEC, color: DARK_BLUE_DARK_TEXT_COLOR}}\n          className={`gx-link gx-color-dark-blue ${themeColor === DARK_BLUE && 'active'}`}/>\n      </li>\n\n      <li>\n        <span\n          onClick={this.handleThemeColor.bind(this, \"orange\")}\n          style={{backgroundColor: ORANGE_SEC, color: ORANGE_DARK_TEXT_COLOR}}\n          className={`gx-link gx-color-orange ${themeColor === ORANGE && 'active'}`}/>\n      </li>\n\n      <li>\n        <span\n          onClick={this.handleThemeColor.bind(this, \"light_blue\")}\n          style={{backgroundColor: LIGHT_BLUE_SEC, color: LIGHT_BLUE_DARK_TEXT_COLOR}}\n          className={`gx-link gx-color-light-blue ${themeColor === LIGHT_BLUE && 'active'}`}/>\n      </li>\n\n      <li>\n        <span\n          onClick={this.handleThemeColor.bind(this, \"deep_orange\")}\n          style={{backgroundColor: DEEP_ORANGE_SEC, color: DEEP_ORANGE_DARK_TEXT_COLOR}}\n          className={`gx-link gx-color-deep-orange ${themeColor === DEEP_ORANGE && 'active'}`}/>\n      </li>\n\n      <li>\n        <span\n          onClick={this.handleThemeColor.bind(this, \"light_purple_1\")}\n          style={{\n            backgroundColor: LIGHT_PURPLE_1_SEC,\n            color: LIGHT_PURPLE_1_DARK_TEXT_COLOR\n          }}\n          className={`gx-link gx-color-light-purple1 ${themeColor === LIGHT_PURPLE_1 && 'active'}`}/>\n      </li>\n\n      <li>\n        <span\n          onClick={this.handleThemeColor.bind(this, \"light_purple_2\")}\n          style={{\n            backgroundColor: LIGHT_PURPLE_2_SEC,\n            color: LIGHT_PURPLE_2_DARK_TEXT_COLOR\n          }}\n          className={`gx-link gx-color-light-purple2 ${themeColor === LIGHT_PURPLE_2 && 'active'}`}/>\n      </li>\n    </ul>\n  };\n\n  getLayoutsTypes = (layoutType) => {\n    return <ul className=\"gx-layout-option gx-list-inline\">\n      <li>\n        <span onClick={this.handleLayoutTypes.bind(this, LAYOUT_TYPE_FRAMED)}\n              className={`gx-pointer ${layoutType === LAYOUT_TYPE_FRAMED && 'active'}`}>\n        <img src={require('assets/images/layouts/framed.png')} alt='framed'/>\n        </span>\n      </li>\n      <li>\n        <span onClick={this.handleLayoutTypes.bind(this, LAYOUT_TYPE_FULL)}\n              className={`gx-pointer ${layoutType === LAYOUT_TYPE_FULL && 'active'}`}>\n        <img src={require('assets/images/layouts/full width.png')} alt='full width'/>\n        </span>\n      </li>\n      <li>\n        <span onClick={this.handleLayoutTypes.bind(this, LAYOUT_TYPE_BOXED)}\n              className={`gx-pointer ${layoutType === LAYOUT_TYPE_BOXED && 'active'}`}>\n        <img src={require('assets/images/layouts/boxed.png')} alt='boxed'/>\n        </span>\n      </li>\n    </ul>\n  };\n  getNavStyles = (navStyle) => {\n    return <ul className=\"gx-nav-option gx-list-inline\">\n      <li>\n        <span onClick={this.onNavStyleChange.bind(this, NAV_STYLE_FIXED)}\n              className={`gx-pointer ${navStyle === NAV_STYLE_FIXED && 'active'}`}>\n        <img src={require('assets/images/layouts/fixed.png')} alt='fixed'/>\n        </span>\n      </li>\n      <li>\n        <span onClick={this.onNavStyleChange.bind(this, NAV_STYLE_MINI_SIDEBAR)}\n              className={`gx-pointer ${navStyle === NAV_STYLE_MINI_SIDEBAR && 'active'}`}>\n        <img src={require('assets/images/layouts/mini sidebar.png')} alt='mini sidebar'/>\n        </span>\n      </li>\n      <li>\n        <span onClick={this.onNavStyleChange.bind(this, NAV_STYLE_DRAWER)}\n              className={`gx-pointer ${navStyle === NAV_STYLE_DRAWER && 'active'}`}>\n        <img src={require('assets/images/layouts/drawer nav.png')} alt='drawer nav'/>\n        </span>\n      </li>\n      <li>\n        <span onClick={this.onNavStyleChange.bind(this, NAV_STYLE_NO_HEADER_MINI_SIDEBAR)}\n              className={`gx-pointer ${navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR && 'active'}`}>\n        <img src={require('assets/images/layouts/no header mini sidebar.png')} alt='no hader mini sidebar'/>\n        </span>\n      </li>\n      <li>\n        <span onClick={this.onNavStyleChange.bind(this, NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR)}\n              className={`gx-pointer ${navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR && 'active'}`}>\n        <img src={require('assets/images/layouts/vertical no header.png')} alt='vertical no header'/>\n        </span>\n      </li>\n      <li>\n        <span onClick={this.onNavStyleChange.bind(this, NAV_STYLE_DEFAULT_HORIZONTAL)}\n              className={`gx-pointer ${navStyle === NAV_STYLE_DEFAULT_HORIZONTAL && 'active'}`}>\n        <img src={require('assets/images/layouts/default horizontal.png')} alt='default horizontal'/>\n        </span>\n      </li>\n      <li>\n        <span onClick={this.onNavStyleChange.bind(this, NAV_STYLE_DARK_HORIZONTAL)}\n              className={`gx-pointer ${navStyle === NAV_STYLE_DARK_HORIZONTAL && 'active'}`}>\n        <img src={require('assets/images/layouts/dark horizontal.png')} alt='dark horizontal'/>\n        </span>\n      </li>\n      <li>\n        <span onClick={this.onNavStyleChange.bind(this, NAV_STYLE_INSIDE_HEADER_HORIZONTAL)}\n              className={`gx-pointer ${navStyle === NAV_STYLE_INSIDE_HEADER_HORIZONTAL && 'active'}`}>\n        <img src={require('assets/images/layouts/inside header horizontal.png')} alt='inside header horizontal'/>\n        </span>\n      </li>\n      <li>\n        <span onClick={this.onNavStyleChange.bind(this, NAV_STYLE_BELOW_HEADER)}\n              className={`gx-pointer ${navStyle === NAV_STYLE_BELOW_HEADER && 'active'}`}>\n        <img src={require('assets/images/layouts/below header.png')} alt='below header'/>\n        </span>\n      </li>\n\n      <li>\n        <span onClick={this.onNavStyleChange.bind(this, NAV_STYLE_ABOVE_HEADER)}\n              className={`gx-pointer ${navStyle === NAV_STYLE_ABOVE_HEADER && 'active'}`}>\n        <img src={require('assets/images/layouts/top to header.png')} alt='top to header'/>\n        </span>\n      </li>\n    </ul>\n  };\n\n  render() {\n\n    return (\n      <Auxiliary>\n        <Drawer\n          placement=\"right\"\n          closable={false}\n          onClose={this.toggleCustomizer}\n          visible={this.state.isCustomizerOpened}>\n          {\n            this.getCustomizerContent()\n          }\n        </Drawer>\n        <div className=\"gx-customizer-option\">\n          <Button type=\"primary\" onClick={this.toggleCustomizer.bind(this)}>\n            <i className=\"icon icon-setting fxicon-hc-spin gx-d-block\"/>\n          </Button>\n        </div>\n      </Auxiliary>\n    );\n  }\n}\n\nCustomizer = Form.create()(Customizer);\n\nconst mapStateToProps = ({settings}) => {\n  const {themeType, width, themeColor, navStyle, layoutType} = settings;\n  return {themeType, width, themeColor, navStyle, layoutType}\n};\nexport default connect(mapStateToProps, {\n  setThemeType,\n  setThemeColor,\n  onNavStyleChange,\n  onLayoutTypeChange\n})(Customizer);\n"]},"metadata":{},"sourceType":"module"}