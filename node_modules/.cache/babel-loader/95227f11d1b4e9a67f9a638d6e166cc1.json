{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Input/FormatTooltipInput.js\";\nimport React, { Component } from \"react\";\nimport { Card, Input, Tooltip } from \"antd\";\n\nfunction formatNumber(value) {\n  value += '';\n  var list = value.split('.');\n  var prefix = list[0].charAt(0) === '-' ? '-' : '';\n  var num = prefix ? list[0].slice(1) : list[0];\n  var result = '';\n\n  while (num.length > 3) {\n    result = \",\".concat(num.slice(-3)).concat(result);\n    num = num.slice(0, num.length - 3);\n  }\n\n  if (num) {\n    result = num + result;\n  }\n\n  return \"\".concat(prefix).concat(result).concat(list[1] ? \".\".concat(list[1]) : '');\n}\n\nvar NumericInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NumericInput, _Component);\n\n  function NumericInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NumericInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NumericInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChange = function (e) {\n      var value = e.target.value;\n      var reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\n\n      if (!isNaN(value) && reg.test(value) || value === '' || value === '-') {\n        _this.props.onChange(value);\n      }\n    };\n\n    _this.onBlur = function () {\n      var _this$props = _this.props,\n          value = _this$props.value,\n          onBlur = _this$props.onBlur,\n          onChange = _this$props.onChange;\n\n      if (value.charAt(value.length - 1) === '.' || value === '-') {\n        onChange({\n          value: value.slice(0, -1)\n        });\n      }\n\n      if (onBlur) {\n        onBlur();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(NumericInput, [{\n    key: \"render\",\n    value: function render() {\n      var value = this.props.value;\n      var title = value ? React.createElement(\"span\", {\n        className: \"numeric-input-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, value !== '-' ? formatNumber(value) : '-') : 'Input a number';\n      return React.createElement(Tooltip, {\n        trigger: ['focus'],\n        title: title,\n        placement: \"topLeft\",\n        overlayClassName: \"numeric-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Input, Object.assign({}, this.props, {\n        onChange: this.onChange,\n        onBlur: this.onBlur,\n        placeholder: \"Input a number\",\n        maxLength: 25,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return NumericInput;\n}(Component);\n\nvar NumericInputDemo =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(NumericInputDemo, _Component2);\n\n  function NumericInputDemo(props) {\n    var _this2;\n\n    _classCallCheck(this, NumericInputDemo);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(NumericInputDemo).call(this, props));\n\n    _this2.onChange = function (value) {\n      _this2.setState({\n        value: value\n      });\n    };\n\n    _this2.state = {\n      value: ''\n    };\n    return _this2;\n  }\n\n  _createClass(NumericInputDemo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        className: \"gx-card\",\n        title: \"Numeric Input Demo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(NumericInput, {\n        style: {\n          width: 120\n        },\n        value: this.state.value,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NumericInputDemo;\n}(Component);\n\nexport default NumericInputDemo;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Input/FormatTooltipInput.js"],"names":["React","Component","Card","Input","Tooltip","formatNumber","value","list","split","prefix","charAt","num","slice","result","length","NumericInput","onChange","e","target","reg","isNaN","test","props","onBlur","title","NumericInputDemo","setState","state","width"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {Card, Input, Tooltip} from \"antd\";\n\nfunction formatNumber(value) {\n  value += '';\n  const list = value.split('.');\n  const prefix = list[0].charAt(0) === '-' ? '-' : '';\n  let num = prefix ? list[0].slice(1) : list[0];\n  let result = '';\n  while (num.length > 3) {\n    result = `,${num.slice(-3)}${result}`;\n    num = num.slice(0, num.length - 3);\n  }\n  if (num) {\n    result = num + result;\n  }\n  return `${prefix}${result}${list[1] ? `.${list[1]}` : ''}`;\n}\n\nclass NumericInput extends Component {\n  onChange = (e) => {\n    const {value} = e.target;\n    const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\n    if ((!isNaN(value) && reg.test(value)) || value === '' || value === '-') {\n      this.props.onChange(value);\n    }\n  }\n  // '.' at the end or only '-' in the input box.\n  onBlur = () => {\n    const {value, onBlur, onChange} = this.props;\n    if (value.charAt(value.length - 1) === '.' || value === '-') {\n      onChange({value: value.slice(0, -1)});\n    }\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  render() {\n    const {value} = this.props;\n    const title = value ? (\n      <span className=\"numeric-input-title\">\n        {value !== '-' ? formatNumber(value) : '-'}\n      </span>\n    ) : 'Input a number';\n    return (\n      <Tooltip\n        trigger={['focus']}\n        title={title}\n        placement=\"topLeft\"\n        overlayClassName=\"numeric-input\"\n      >\n        <Input\n          {...this.props}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          placeholder=\"Input a number\"\n          maxLength={25}\n        />\n      </Tooltip>\n    );\n  }\n}\n\nclass NumericInputDemo extends Component {\n  onChange = (value) => {\n    this.setState({value});\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n  }\n\n  render() {\n    return <Card className=\"gx-card\" title=\"Numeric Input Demo\">\n      <NumericInput style={{width: 120}} value={this.state.value} onChange={this.onChange}/>\n    </Card>;\n  }\n}\n\n\nexport default NumericInputDemo;\n"]},"metadata":{},"sourceType":"module"}