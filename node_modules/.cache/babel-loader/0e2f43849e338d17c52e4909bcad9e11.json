{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/inBuiltApps/FirebaseCRUD/ContactList/ContactCell/index.js\";\nimport React from \"react\";\nimport { Avatar, Dropdown, Menu } from \"antd\";\nimport AddContact from \"../../AddContact/index\";\nvar options = ['Edit', 'Delete'];\n\nvar ContactCell =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ContactCell, _React$Component);\n\n  function ContactCell() {\n    var _this;\n\n    _classCallCheck(this, ContactCell);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactCell).call(this));\n\n    _this.onContactClose = function () {\n      _this.setState({\n        addContactState: false\n      });\n    };\n\n    _this.onDeleteContact = function () {\n      _this.setState({\n        addContactState: false\n      });\n\n      _this.props.onDeleteContact(_this.props.id);\n    };\n\n    _this.onEditContact = function () {\n      _this.setState({\n        addContactState: true\n      });\n    };\n\n    _this.menus = function () {\n      return React.createElement(Menu, {\n        onClick: function onClick(e) {\n          if (e.key === 'Edit') {\n            _this.onEditContact();\n          } else {\n            _this.onDeleteContact(_this.props.id);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, options.map(function (option) {\n        return React.createElement(Menu.Item, {\n          key: option,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, option);\n      }));\n    };\n\n    _this.state = {\n      addContactState: false\n    };\n    return _this;\n  }\n\n  _createClass(ContactCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          contact = _this$props.contact,\n          addFavourite = _this$props.addFavourite,\n          id = _this$props.id,\n          onSaveContact = _this$props.onSaveContact;\n      var addContactState = this.state.addContactState;\n      var name = contact.name,\n          thumb = contact.thumb,\n          email = contact.email,\n          phone = contact.phone,\n          designation = contact.designation,\n          starred = contact.starred;\n      return React.createElement(\"div\", {\n        className: \"gx-contact-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-module-list-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-d-none gx-d-sm-flex\",\n        onClick: function onClick() {\n          addFavourite(id, contact);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, starred ? React.createElement(\"i\", {\n        className: \"gx-icon-btn icon icon-star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        className: \"gx-icon-btn icon icon-star-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gx-ml-2 gx-d-none gx-d-sm-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, thumb === null || thumb === '' ? React.createElement(Avatar, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, name.charAt(0).toUpperCase()) : React.createElement(Avatar, {\n        size: \"large\",\n        alt: name,\n        src: thumb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"gx-module-list-info gx-contact-list-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-module-contact-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"gx-mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"gx-text-truncate gx-contact-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" \", name, \" \"), React.createElement(\"span\", {\n        className: \"gx-toolbar-separator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"span\", {\n        className: \"gx-text-truncate gx-job-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, designation)), React.createElement(\"div\", {\n        className: \"gx-text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"gx-email gx-d-inline-block gx-mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, email, \",\"), React.createElement(\"span\", {\n        className: \"gx-phone gx-d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, phone))), React.createElement(\"div\", {\n        className: \"gx-module-contact-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        overlay: this.menus(),\n        placement: \"bottomRight\",\n        trigger: ['click'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"gx-icon-btn icon icon-ellipse-v\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), addContactState && React.createElement(AddContact, {\n        open: addContactState,\n        contact: contact,\n        onSaveContact: onSaveContact,\n        contactId: id,\n        onContactClose: this.onContactClose,\n        onDeleteContact: this.onDeleteContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ContactCell;\n}(React.Component);\n\nexport default ContactCell;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/inBuiltApps/FirebaseCRUD/ContactList/ContactCell/index.js"],"names":["React","Avatar","Dropdown","Menu","AddContact","options","ContactCell","onContactClose","setState","addContactState","onDeleteContact","props","id","onEditContact","menus","e","key","map","option","state","contact","addFavourite","onSaveContact","name","thumb","email","phone","designation","starred","charAt","toUpperCase","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Avatar, Dropdown, Menu} from \"antd\";\n\nimport AddContact from \"../../AddContact/index\";\n\nconst options = [\n  'Edit',\n  'Delete',\n];\n\nclass ContactCell extends React.Component {\n\n  onContactClose = () => {\n    this.setState({addContactState: false});\n  };\n  onDeleteContact = () => {\n    this.setState({addContactState: false});\n    this.props.onDeleteContact(this.props.id);\n  };\n  onEditContact = () => {\n    this.setState({addContactState: true});\n  };\n  menus = () => (<Menu onClick={(e) => {\n    if (e.key === 'Edit') {\n      this.onEditContact()\n    } else {\n      this.onDeleteContact(this.props.id)\n    }\n  }\n  }>\n    {options.map(option =>\n      <Menu.Item key={option}>\n        {option}\n      </Menu.Item>,\n    )}\n  </Menu>);\n\n  constructor() {\n    super();\n    this.state = {\n      addContactState: false,\n    }\n  }\n\n  render() {\n    const {contact, addFavourite, id, onSaveContact} = this.props;\n    const {addContactState} = this.state;\n    const {name, thumb, email, phone, designation, starred} = contact;\n\n    return (\n\n      <div className=\"gx-contact-item\">\n        <div className=\"gx-module-list-icon\">\n          <div className=\"gx-d-none gx-d-sm-flex\" onClick={() => {\n            addFavourite(id, contact)\n          }}>\n            {starred ? <i className=\"gx-icon-btn icon icon-star\"/> : <i className=\"gx-icon-btn icon icon-star-o\"/>}\n          </div>\n          <div className=\"gx-ml-2 gx-d-none gx-d-sm-flex\">\n            {(thumb === null || thumb === '') ?\n              <Avatar size=\"large\">\n                {name.charAt(0).toUpperCase()}\n              </Avatar>\n              :\n              <Avatar size=\"large\" alt={name} src={thumb}/>\n            }\n          </div>\n        </div>\n\n        <div className=\"gx-module-list-info gx-contact-list-info\">\n          <div className=\"gx-module-contact-content\">\n            <p className=\"gx-mb-1\">\n              <span className=\"gx-text-truncate gx-contact-name\"> {name} </span>\n              <span className=\"gx-toolbar-separator\">&nbsp;</span>\n              <span className=\"gx-text-truncate gx-job-title\">{designation}</span>\n            </p>\n\n            <div className=\"gx-text-muted\">\n            <span className=\"gx-email gx-d-inline-block gx-mr-2\">\n                {email},\n            </span>\n              <span className=\"gx-phone gx-d-inline-block\">{phone}</span>\n            </div>\n          </div>\n\n          <div className=\"gx-module-contact-right\">\n\n            <Dropdown overlay={this.menus()} placement=\"bottomRight\" trigger={['click']}>\n              <i className=\"gx-icon-btn icon icon-ellipse-v\"/>\n            </Dropdown>\n\n            {addContactState &&\n            <AddContact open={addContactState} contact={contact} onSaveContact={onSaveContact} contactId={id}\n                        onContactClose={this.onContactClose} onDeleteContact={this.onDeleteContact}/>}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ContactCell;\n"]},"metadata":{},"sourceType":"module"}