{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/components/mail/Compose/index.js\";\nimport React from \"react\";\nimport { Button, Input, message, Modal, Upload } from \"antd\";\nimport Moment from \"moment\";\nimport IntlMessages from \"util/IntlMessages\";\nvar TextArea = Input.TextArea;\nvar props = {\n  name: 'file',\n  action: '//jsonplaceholder.typicode.com/posts/',\n  headers: {\n    authorization: 'authorization-text'\n  },\n  onChange: function onChange(info) {\n    if (info.file.status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n\n    if (info.file.status === 'done') {\n      message.success(\"\".concat(info.file.name, \" file uploaded successfully\"));\n    } else if (info.file.status === 'error') {\n      message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n    }\n  }\n};\n\nvar ComposeMail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComposeMail, _React$Component);\n\n  function ComposeMail() {\n    var _this;\n\n    _classCallCheck(this, ComposeMail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComposeMail).call(this));\n    _this.state = {\n      to: '',\n      cc: '',\n      bcc: '',\n      subject: '',\n      message: ''\n    };\n    return _this;\n  }\n\n  _createClass(ComposeMail, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onMailSend = _this$props.onMailSend,\n          onClose = _this$props.onClose,\n          user = _this$props.user;\n      var _this$state = this.state,\n          to = _this$state.to,\n          subject = _this$state.subject,\n          message = _this$state.message;\n      return React.createElement(Modal, {\n        onCancel: onClose,\n        visible: this.props.open,\n        title: React.createElement(IntlMessages, {\n          id: \"mail.title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }),\n        closable: false,\n        onOk: function onOk() {\n          if (to === '') return;\n          onClose();\n          onMailSend({\n            'id': '15453a06c08fb021776',\n            'from': {\n              'name': user.name,\n              'avatar': user.avatar,\n              'email': user.email\n            },\n            'to': [{\n              'name': to,\n              'email': to\n            }],\n            'subject': subject,\n            'message': message,\n            'time': Moment().format('DD MMM'),\n            'read': false,\n            'starred': false,\n            'important': false,\n            'hasAttachments': false,\n            'folder': 1,\n            'selected': false,\n            'labels': []\n          });\n        },\n        style: {\n          zIndex: 2600\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"To*\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            to: event.target.value\n          });\n        },\n        defaultValue: to,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gx-form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Subject\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            subject: event.target.value\n          });\n        },\n        value: subject,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gx-form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(TextArea, {\n        placeholder: \"Message\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            message: event.target.value\n          });\n        },\n        value: message,\n        autosize: {\n          minRows: 2,\n          maxRows: 6\n        },\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"gx-form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Upload, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon icon-attachment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), \" Attach File\"))));\n    }\n  }]);\n\n  return ComposeMail;\n}(React.Component);\n\nexport default ComposeMail;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/components/mail/Compose/index.js"],"names":["React","Button","Input","message","Modal","Upload","Moment","IntlMessages","TextArea","props","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","success","error","ComposeMail","state","to","cc","bcc","subject","onMailSend","onClose","user","open","avatar","email","format","zIndex","event","setState","target","value","minRows","maxRows","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Input, message, Modal, Upload} from \"antd\";\nimport Moment from \"moment\";\n\nimport IntlMessages from \"util/IntlMessages\";\n\nconst {TextArea} = Input;\n\nconst props = {\n  name: 'file',\n  action: '//jsonplaceholder.typicode.com/posts/',\n  headers: {\n    authorization: 'authorization-text',\n  },\n  onChange(info) {\n    if (info.file.status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n};\n\nclass ComposeMail extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      to: '',\n      cc: '',\n      bcc: '',\n      subject: '',\n      message: '',\n    }\n  }\n\n  render() {\n    const {onMailSend, onClose, user} = this.props;\n    const {to, subject, message} = this.state;\n    return (\n      <Modal onCancel={onClose} visible={this.props.open}\n             title={<IntlMessages id=\"mail.title\"/>}\n             closable={false}\n             onOk={() => {\n               if (to === '')\n                 return;\n               onClose();\n               onMailSend(\n                 {\n                   'id': '15453a06c08fb021776',\n                   'from': {\n                     'name': user.name,\n                     'avatar': user.avatar,\n                     'email': user.email\n                   },\n                   'to': [\n                     {\n                       'name': to,\n                       'email': to\n                     }\n                   ],\n                   'subject': subject,\n                   'message': message,\n                   'time': Moment().format('DD MMM'),\n                   'read': false,\n                   'starred': false,\n                   'important': false,\n                   'hasAttachments': false,\n                   'folder': 1,\n                   'selected': false,\n                   'labels': [],\n                 })\n\n             }}\n             style={{zIndex: 2600}}>\n        <div className=\"gx-form-group\">\n          <Input\n            placeholder=\"To*\"\n            onChange={(event) => this.setState({to: event.target.value})}\n            defaultValue={to}\n            margin=\"normal\"/>\n        </div>\n        <div className=\"gx-form-group\">\n          <Input\n            placeholder=\"Subject\"\n            onChange={(event) => this.setState({subject: event.target.value})}\n            value={subject}\n            margin=\"normal\"\n          />\n        </div>\n        <div className=\"gx-form-group\">\n          <TextArea\n            placeholder=\"Message\"\n            onChange={(event) => this.setState({message: event.target.value})}\n            value={message}\n            autosize={{minRows: 2, maxRows: 6}}\n            margin=\"normal\"/>\n        </div>\n\n        <div className=\"gx-form-group\">\n\n          <Upload {...props}>\n            <Button type=\"primary\">\n              <i className=\"icon icon-attachment\"/> Attach File\n            </Button>\n          </Upload>\n\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default ComposeMail;\n"]},"metadata":{},"sourceType":"module"}