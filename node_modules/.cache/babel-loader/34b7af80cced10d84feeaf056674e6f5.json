{"ast":null,"code":"var _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/extraComponents/ColorPicker/withRedux/index.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { actions as appActions } from \"./reducer\";\nimport { SketchPicker } from \"react-color\";\n\nvar WithRedux = function WithRedux(_ref) {\n  var color = _ref.color,\n      onChangeColor = _ref.onChangeColor;\n  return React.createElement(SketchPicker, {\n    color: color,\n    onChangeComplete: onChangeColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    color: state.color\n  };\n};\n\nvar mapDispatchToProps = {\n  onChangeColor: appActions.changeColor\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WithRedux);","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/extraComponents/ColorPicker/withRedux/index.js"],"names":["React","connect","actions","appActions","SketchPicker","WithRedux","color","onChangeColor","mapStateToProps","state","mapDispatchToProps","changeColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAO,IAAIC,UAAnB,QAAoC,WAApC;AAEA,SAAQC,YAAR,QAA2B,aAA3B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA4B;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,aAAmB,QAAnBA,aAAmB;AAC5C,SACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAED,KADT;AAEE,IAAA,gBAAgB,EAAEC,aAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD,CAPD;;AASA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCH,IAAAA,KAAK,EAAEG,KAAK,CAACH;AADmB,GAAL;AAAA,CAA7B;;AAIA,IAAMI,kBAAkB,GAAG;AACzBH,EAAAA,aAAa,EAAEJ,UAAU,CAACQ;AADD,CAA3B;AAIA,eAAeV,OAAO,CAACO,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CL,SAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {actions as appActions} from \"./reducer\";\n\nimport {SketchPicker} from \"react-color\";\n\nconst WithRedux = ({color, onChangeColor}) => {\n  return (\n    <SketchPicker\n      color={color}\n      onChangeComplete={onChangeColor}\n    />\n  )\n};\n\nconst mapStateToProps = state => ({\n  color: state.color,\n});\n\nconst mapDispatchToProps = {\n  onChangeColor: appActions.changeColor,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithRedux)\n"]},"metadata":{},"sourceType":"module"}