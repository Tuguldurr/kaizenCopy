{"ast":null,"code":"import _objectSpread from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Form/TimeRelatedControls.js\";\nimport React, { Component } from \"react\";\nimport { Button, Card, DatePicker, Form, TimePicker } from \"antd\";\nvar FormItem = Form.Item;\nvar MonthPicker = DatePicker.MonthPicker;\nvar RangePicker = DatePicker.RangePicker;\n\nvar TimeRelatedControls =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TimeRelatedControls, _Component);\n\n  function TimeRelatedControls() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TimeRelatedControls);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TimeRelatedControls)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, fieldsValue) {\n        if (err) {\n          return;\n        } // Should format date value before submit.\n\n\n        var rangeValue = fieldsValue['range-picker'];\n        var rangeTimeValue = fieldsValue['range-time-picker'];\n\n        var values = _objectSpread({}, fieldsValue, {\n          'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\n          'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\n          'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\n          'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\n          'range-time-picker': [rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'), rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss')],\n          'time-picker': fieldsValue['time-picker'].format('HH:mm:ss')\n        });\n\n        console.log('Received values of form: ', values);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TimeRelatedControls, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var config = {\n        rules: [{\n          type: 'object',\n          required: true,\n          message: 'Please select time!'\n        }]\n      };\n      var rangeConfig = {\n        rules: [{\n          type: 'array',\n          required: true,\n          message: 'Please select time!'\n        }]\n      };\n      return React.createElement(Card, {\n        className: \"gx-card\",\n        title: \"Time Related Controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"DatePicker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), getFieldDecorator('date-picker', config)(React.createElement(DatePicker, {\n        className: \"gx-mb-3 gx-w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"DatePicker[showTime]\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), getFieldDecorator('date-time-picker', config)(React.createElement(DatePicker, {\n        className: \"gx-mb-3 gx-w-100\",\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"MonthPicker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), getFieldDecorator('month-picker', config)(React.createElement(MonthPicker, {\n        className: \"gx-mb-3 gx-w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"RangePicker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), getFieldDecorator('range-picker', rangeConfig)(React.createElement(RangePicker, {\n        className: \"gx-mb-3 gx-w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"RangePicker[showTime]\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), getFieldDecorator('range-time-picker', rangeConfig)(React.createElement(RangePicker, {\n        className: \"gx-mb-3 gx-w-100\",\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"TimePicker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), getFieldDecorator('time-picker', config)(React.createElement(TimePicker, {\n        className: \"gx-mb-3 gx-w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return TimeRelatedControls;\n}(Component);\n\nvar TimeRelated = Form.create()(TimeRelatedControls);\nexport default TimeRelated;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Form/TimeRelatedControls.js"],"names":["React","Component","Button","Card","DatePicker","Form","TimePicker","FormItem","Item","MonthPicker","RangePicker","TimeRelatedControls","handleSubmit","e","preventDefault","props","form","validateFields","err","fieldsValue","rangeValue","rangeTimeValue","values","format","console","log","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","config","rules","type","required","message","rangeConfig","offset","TimeRelated","create"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,UAAtB,EAAkCC,IAAlC,EAAwCC,UAAxC,QAAyD,MAAzD;AAEA,IAAMC,QAAQ,GAAGF,IAAI,CAACG,IAAtB;AACA,IAAMC,WAAW,GAAGL,UAAU,CAACK,WAA/B;AACA,IAAMC,WAAW,GAAGN,UAAU,CAACM,WAA/B;;IAGMC,mB;;;;;;;;;;;;;;;;;;UAGJC,Y,GAAe,UAACC,CAAD,EAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;;AAEA,YAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,WAAN,EAAsB;AACnD,YAAID,GAAJ,EAAS;AACP;AACD,SAHkD,CAKnD;;;AACA,YAAME,UAAU,GAAGD,WAAW,CAAC,cAAD,CAA9B;AACA,YAAME,cAAc,GAAGF,WAAW,CAAC,mBAAD,CAAlC;;AACA,YAAMG,MAAM,qBACPH,WADO;AAEV,yBAAeA,WAAW,CAAC,aAAD,CAAX,CAA2BI,MAA3B,CAAkC,YAAlC,CAFL;AAGV,8BAAoBJ,WAAW,CAAC,kBAAD,CAAX,CAAgCI,MAAhC,CAAuC,qBAAvC,CAHV;AAIV,0BAAgBJ,WAAW,CAAC,cAAD,CAAX,CAA4BI,MAA5B,CAAmC,SAAnC,CAJN;AAKV,0BAAgB,CAACH,UAAU,CAAC,CAAD,CAAV,CAAcG,MAAd,CAAqB,YAArB,CAAD,EAAqCH,UAAU,CAAC,CAAD,CAAV,CAAcG,MAAd,CAAqB,YAArB,CAArC,CALN;AAMV,+BAAqB,CACnBF,cAAc,CAAC,CAAD,CAAd,CAAkBE,MAAlB,CAAyB,qBAAzB,CADmB,EAEnBF,cAAc,CAAC,CAAD,CAAd,CAAkBE,MAAlB,CAAyB,qBAAzB,CAFmB,CANX;AAUV,yBAAeJ,WAAW,CAAC,aAAD,CAAX,CAA2BI,MAA3B,CAAkC,UAAlC;AAVL,UAAZ;;AAYAC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCH,MAAzC;AACD,OArBD;AAsBD,K;;;;;;;6BAEQ;AAAA,UACAI,iBADA,GACqB,KAAKX,KAAL,CAAWC,IADhC,CACAU,iBADA;AAEP,UAAMC,cAAc,GAAG;AACrBC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,EAAE,EAAE;AAACC,YAAAA,IAAI,EAAE;AAAP,WADI;AAERC,UAAAA,EAAE,EAAE;AAACD,YAAAA,IAAI,EAAE;AAAP;AAFI,SADW;AAKrBE,QAAAA,UAAU,EAAE;AACVH,UAAAA,EAAE,EAAE;AAACC,YAAAA,IAAI,EAAE;AAAP,WADM;AAEVC,UAAAA,EAAE,EAAE;AAACD,YAAAA,IAAI,EAAE;AAAP;AAFM;AALS,OAAvB;AAUA,UAAMG,MAAM,GAAG;AACbC,QAAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE,QAAP;AAAiBC,UAAAA,QAAQ,EAAE,IAA3B;AAAiCC,UAAAA,OAAO,EAAE;AAA1C,SAAD;AADM,OAAf;AAGA,UAAMC,WAAW,GAAG;AAClBJ,QAAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE,OAAP;AAAgBC,UAAAA,QAAQ,EAAE,IAA1B;AAAgCC,UAAAA,OAAO,EAAE;AAAzC,SAAD;AADW,OAApB;AAIA,aACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,SAAhB;AAA0B,QAAA,KAAK,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKzB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,oBACMe,cADN;AAEE,QAAA,KAAK,EAAC,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIGD,iBAAiB,CAAC,aAAD,EAAgBO,MAAhB,CAAjB,CACC,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAJH,CADF,EASE,oBAAC,QAAD,oBACMN,cADN;AAEE,QAAA,KAAK,EAAC,sBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIGD,iBAAiB,CAAC,kBAAD,EAAqBO,MAArB,CAAjB,CACC,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,kBAAtB;AAAyC,QAAA,QAAQ,MAAjD;AAAkD,QAAA,MAAM,EAAC,qBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAJH,CATF,EAiBE,oBAAC,QAAD,oBACMN,cADN;AAEE,QAAA,KAAK,EAAC,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIGD,iBAAiB,CAAC,cAAD,EAAiBO,MAAjB,CAAjB,CACC,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAJH,CAjBF,EAyBE,oBAAC,QAAD,oBACMN,cADN;AAEE,QAAA,KAAK,EAAC,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIGD,iBAAiB,CAAC,cAAD,EAAiBY,WAAjB,CAAjB,CACC,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAJH,CAzBF,EAiCE,oBAAC,QAAD,oBACMX,cADN;AAEE,QAAA,KAAK,EAAC,uBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIGD,iBAAiB,CAAC,mBAAD,EAAsBY,WAAtB,CAAjB,CACC,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,kBAAvB;AAA0C,QAAA,QAAQ,MAAlD;AAAmD,QAAA,MAAM,EAAC,qBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAJH,CAjCF,EAyCE,oBAAC,QAAD,oBACMX,cADN;AAEE,QAAA,KAAK,EAAC,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIGD,iBAAiB,CAAC,aAAD,EAAgBO,MAAhB,CAAjB,CACC,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAJH,CAzCF,EAiDE,oBAAC,QAAD;AACE,QAAA,UAAU,EAAE;AACVJ,UAAAA,EAAE,EAAE;AAACC,YAAAA,IAAI,EAAE,EAAP;AAAWS,YAAAA,MAAM,EAAE;AAAnB,WADM;AAEVR,UAAAA,EAAE,EAAE;AAACD,YAAAA,IAAI,EAAE,EAAP;AAAWS,YAAAA,MAAM,EAAE;AAAnB;AAFM,SADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CAjDF,CADF,CADF;AA8DD;;;;EA/G+BtC,S;;AAmHlC,IAAMuC,WAAW,GAAGnC,IAAI,CAACoC,MAAL,GAAc9B,mBAAd,CAApB;AAEA,eAAe6B,WAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {Button, Card, DatePicker, Form, TimePicker} from \"antd\";\n\nconst FormItem = Form.Item;\nconst MonthPicker = DatePicker.MonthPicker;\nconst RangePicker = DatePicker.RangePicker;\n\n\nclass TimeRelatedControls extends Component {\n\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.form.validateFields((err, fieldsValue) => {\n      if (err) {\n        return;\n      }\n\n      // Should format date value before submit.\n      const rangeValue = fieldsValue['range-picker'];\n      const rangeTimeValue = fieldsValue['range-time-picker'];\n      const values = {\n        ...fieldsValue,\n        'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\n        'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\n        'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\n        'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\n        'range-time-picker': [\n          rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'),\n          rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss'),\n        ],\n        'time-picker': fieldsValue['time-picker'].format('HH:mm:ss'),\n      };\n      console.log('Received values of form: ', values);\n    });\n  };\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 8},\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16},\n      },\n    };\n    const config = {\n      rules: [{type: 'object', required: true, message: 'Please select time!'}],\n    };\n    const rangeConfig = {\n      rules: [{type: 'array', required: true, message: 'Please select time!'}],\n    };\n\n    return (\n      <Card className=\"gx-card\" title=\"Time Related Controls\">\n        <Form onSubmit={this.handleSubmit}>\n          <FormItem\n            {...formItemLayout}\n            label=\"DatePicker\"\n          >\n            {getFieldDecorator('date-picker', config)(\n              <DatePicker className=\"gx-mb-3 gx-w-100\"/>\n            )}\n          </FormItem>\n          <FormItem\n            {...formItemLayout}\n            label=\"DatePicker[showTime]\"\n          >\n            {getFieldDecorator('date-time-picker', config)(\n              <DatePicker className=\"gx-mb-3 gx-w-100\" showTime format=\"YYYY-MM-DD HH:mm:ss\"/>\n            )}\n          </FormItem>\n          <FormItem\n            {...formItemLayout}\n            label=\"MonthPicker\"\n          >\n            {getFieldDecorator('month-picker', config)(\n              <MonthPicker className=\"gx-mb-3 gx-w-100\"/>\n            )}\n          </FormItem>\n          <FormItem\n            {...formItemLayout}\n            label=\"RangePicker\"\n          >\n            {getFieldDecorator('range-picker', rangeConfig)(\n              <RangePicker className=\"gx-mb-3 gx-w-100\"/>\n            )}\n          </FormItem>\n          <FormItem\n            {...formItemLayout}\n            label=\"RangePicker[showTime]\"\n          >\n            {getFieldDecorator('range-time-picker', rangeConfig)(\n              <RangePicker className=\"gx-mb-3 gx-w-100\" showTime format=\"YYYY-MM-DD HH:mm:ss\"/>\n            )}\n          </FormItem>\n          <FormItem\n            {...formItemLayout}\n            label=\"TimePicker\"\n          >\n            {getFieldDecorator('time-picker', config)(\n              <TimePicker className=\"gx-mb-3 gx-w-100\"/>\n            )}\n          </FormItem>\n          <FormItem\n            wrapperCol={{\n              xs: {span: 24, offset: 0},\n              sm: {span: 16, offset: 8},\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n          </FormItem>\n        </Form>\n      </Card>\n    );\n  }\n\n}\n\nconst TimeRelated = Form.create()(TimeRelatedControls);\n\nexport default TimeRelated;\n"]},"metadata":{},"sourceType":"module"}