{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/table/Data/Operation.js\";\nimport React from \"react\";\nimport { Button, Card, Table } from \"antd\";\nvar columns = [{\n  title: 'Name',\n  dataIndex: 'name'\n}, {\n  title: 'Age',\n  dataIndex: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address'\n}];\nvar data = [];\n\nfor (var i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: \"Edward King \".concat(i),\n    age: 32,\n    address: \"London, Park Lane no. \".concat(i)\n  });\n}\n\nvar Operation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Operation, _React$Component);\n\n  function Operation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Operation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Operation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedRowKeys: [],\n      // Check here to configure the CRM column\n      loading: false\n    };\n\n    _this.start = function () {\n      _this.setState({\n        loading: true\n      }); // ajax request after empty completing\n\n\n      setTimeout(function () {\n        _this.setState({\n          selectedRowKeys: [],\n          loading: false\n        });\n      }, 1000);\n    };\n\n    _this.onSelectChange = function (selectedRowKeys) {\n      console.log('selectedRowKeys changed: ', selectedRowKeys);\n\n      _this.setState({\n        selectedRowKeys: selectedRowKeys\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Operation, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          selectedRowKeys = _this$state.selectedRowKeys;\n      var rowSelection = {\n        selectedRowKeys: selectedRowKeys,\n        onChange: this.onSelectChange\n      };\n      var hasSelected = selectedRowKeys.length > 0;\n      return React.createElement(Card, {\n        title: \"Operation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gx-mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.start,\n        disabled: !hasSelected,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Reload\"), React.createElement(\"span\", {\n        style: {\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, hasSelected ? \"Selected \".concat(selectedRowKeys.length, \" items\") : '')), React.createElement(Table, {\n        className: \"gx-table-responsive\",\n        rowSelection: rowSelection,\n        columns: columns,\n        dataSource: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Operation;\n}(React.Component);\n\nexport default Operation;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/table/Data/Operation.js"],"names":["React","Button","Card","Table","columns","title","dataIndex","data","i","push","key","name","age","address","Operation","state","selectedRowKeys","loading","start","setState","setTimeout","onSelectChange","console","log","rowSelection","onChange","hasSelected","length","marginLeft","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,MAAlC;AAEA,IAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE,MADQ;AAEfC,EAAAA,SAAS,EAAE;AAFI,CAAD,EAGb;AACDD,EAAAA,KAAK,EAAE,KADN;AAEDC,EAAAA,SAAS,EAAE;AAFV,CAHa,EAMb;AACDD,EAAAA,KAAK,EAAE,SADN;AAEDC,EAAAA,SAAS,EAAE;AAFV,CANa,CAAhB;AAWA,IAAMC,IAAI,GAAG,EAAb;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,EAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,IAAAA,GAAG,EAAEF,CADG;AAERG,IAAAA,IAAI,wBAAiBH,CAAjB,CAFI;AAGRI,IAAAA,GAAG,EAAE,EAHG;AAIRC,IAAAA,OAAO,kCAA2BL,CAA3B;AAJC,GAAV;AAMD;;IAEKM,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,eAAe,EAAE,EADX;AACe;AACrBC,MAAAA,OAAO,EAAE;AAFH,K;;UAIRC,K,GAAQ,YAAM;AACZ,YAAKC,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE;AAAV,OAAd,EADY,CAEZ;;;AACAG,MAAAA,UAAU,CAAC,YAAM;AACf,cAAKD,QAAL,CAAc;AACZH,UAAAA,eAAe,EAAE,EADL;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OALS,EAKP,IALO,CAAV;AAMD,K;;UACDI,c,GAAiB,UAACL,eAAD,EAAqB;AACpCM,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCP,eAAzC;;AACA,YAAKG,QAAL,CAAc;AAACH,QAAAA,eAAe,EAAfA;AAAD,OAAd;AACD,K;;;;;;;6BAEQ;AAAA,wBAC4B,KAAKD,KADjC;AAAA,UACAE,OADA,eACAA,OADA;AAAA,UACSD,eADT,eACSA,eADT;AAEP,UAAMQ,YAAY,GAAG;AACnBR,QAAAA,eAAe,EAAfA,eADmB;AAEnBS,QAAAA,QAAQ,EAAE,KAAKJ;AAFI,OAArB;AAIA,UAAMK,WAAW,GAAGV,eAAe,CAACW,MAAhB,GAAyB,CAA7C;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,OAAO,EAAE,KAAKT,KAFhB;AAGE,QAAA,QAAQ,EAAE,CAACQ,WAHb;AAIE,QAAA,OAAO,EAAET,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EASE;AAAM,QAAA,KAAK,EAAE;AAACW,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,WAAW,sBAAeV,eAAe,CAACW,MAA/B,cAAgD,EAD9D,CATF,CADF,EAcE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAuC,QAAA,YAAY,EAAEH,YAArD;AAAmE,QAAA,OAAO,EAAEpB,OAA5E;AAAqF,QAAA,UAAU,EAAEG,IAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CADF;AAkBD;;;;EA7CqBP,KAAK,CAAC6B,S;;AAiD9B,eAAef,SAAf","sourcesContent":["import React from \"react\";\nimport {Button, Card, Table} from \"antd\";\n\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n}];\n\nconst data = [];\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`,\n  });\n}\n\nclass Operation extends React.Component {\n  state = {\n    selectedRowKeys: [], // Check here to configure the CRM column\n    loading: false,\n  };\n  start = () => {\n    this.setState({loading: true});\n    // ajax request after empty completing\n    setTimeout(() => {\n      this.setState({\n        selectedRowKeys: [],\n        loading: false,\n      });\n    }, 1000);\n  };\n  onSelectChange = (selectedRowKeys) => {\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({selectedRowKeys});\n  };\n\n  render() {\n    const {loading, selectedRowKeys} = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n    return (\n      <Card title=\"Operation\">\n        <div className=\"gx-mb-3\">\n          <Button\n            type=\"primary\"\n            onClick={this.start}\n            disabled={!hasSelected}\n            loading={loading}\n          >\n            Reload\n          </Button>\n          <span style={{marginLeft: 8}}>\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n          </span>\n        </div>\n        <Table className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={data}/>\n      </Card>\n    );\n  }\n}\n\n\nexport default Operation;\n"]},"metadata":{},"sourceType":"module"}