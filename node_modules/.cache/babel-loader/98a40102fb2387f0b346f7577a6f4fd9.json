{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Upload/CompleteControl.js\";\nimport React from \"react\";\nimport { Button, Card, Icon, Upload } from \"antd\";\n\nvar CompleteControl =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CompleteControl, _React$Component);\n\n  function CompleteControl() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CompleteControl);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CompleteControl)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fileList: [{\n        uid: -1,\n        name: 'xxx.png',\n        status: 'done',\n        url: 'http://www.baidu.com/xxx.png'\n      }]\n    };\n\n    _this.handleChange = function (info) {\n      var fileList = info.fileList; // 1. Limit the number of uploaded files\n      //    Only to show two recent uploaded files, and old ones will be replaced by the new\n\n      fileList = fileList.slice(-2); // 2. read from response and show file link\n\n      fileList = fileList.map(function (file) {\n        if (file.response) {\n          // Component will show file.url as link\n          file.url = file.response.url;\n        }\n\n        return file;\n      }); // 3. filter successfully uploaded files according to response from server\n\n      fileList = fileList.filter(function (file) {\n        if (file.response) {\n          return file.response.status === 'success';\n        }\n\n        return true;\n      });\n\n      _this.setState({\n        fileList: fileList\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CompleteControl, [{\n    key: \"render\",\n    value: function render() {\n      var props = {\n        action: '//jsonplaceholder.typicode.com/posts/',\n        onChange: this.handleChange,\n        multiple: true\n      };\n      return React.createElement(Card, {\n        className: \"gx-card\",\n        title: \"Complete Control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Upload, Object.assign({}, props, {\n        fileList: this.state.fileList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), \" upload\")));\n    }\n  }]);\n\n  return CompleteControl;\n}(React.Component);\n\nexport default CompleteControl;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Upload/CompleteControl.js"],"names":["React","Button","Card","Icon","Upload","CompleteControl","state","fileList","uid","name","status","url","handleChange","info","slice","map","file","response","filter","setState","props","action","onChange","multiple","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,MAA5B,QAAyC,MAAzC;;IAEMC,e;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,CAAC;AACTC,QAAAA,GAAG,EAAE,CAAC,CADG;AAETC,QAAAA,IAAI,EAAE,SAFG;AAGTC,QAAAA,MAAM,EAAE,MAHC;AAITC,QAAAA,GAAG,EAAE;AAJI,OAAD;AADJ,K;;UAQRC,Y,GAAe,UAACC,IAAD,EAAU;AACvB,UAAIN,QAAQ,GAAGM,IAAI,CAACN,QAApB,CADuB,CAGvB;AACA;;AACAA,MAAAA,QAAQ,GAAGA,QAAQ,CAACO,KAAT,CAAe,CAAC,CAAhB,CAAX,CALuB,CAOvB;;AACAP,MAAAA,QAAQ,GAAGA,QAAQ,CAACQ,GAAT,CAAa,UAACC,IAAD,EAAU;AAChC,YAAIA,IAAI,CAACC,QAAT,EAAmB;AACjB;AACAD,UAAAA,IAAI,CAACL,GAAL,GAAWK,IAAI,CAACC,QAAL,CAAcN,GAAzB;AACD;;AACD,eAAOK,IAAP;AACD,OANU,CAAX,CARuB,CAgBvB;;AACAT,MAAAA,QAAQ,GAAGA,QAAQ,CAACW,MAAT,CAAgB,UAACF,IAAD,EAAU;AACnC,YAAIA,IAAI,CAACC,QAAT,EAAmB;AACjB,iBAAOD,IAAI,CAACC,QAAL,CAAcP,MAAd,KAAyB,SAAhC;AACD;;AACD,eAAO,IAAP;AACD,OALU,CAAX;;AAOA,YAAKS,QAAL,CAAc;AAACZ,QAAAA,QAAQ,EAARA;AAAD,OAAd;AACD,K;;;;;;;6BAEQ;AACP,UAAMa,KAAK,GAAG;AACZC,QAAAA,MAAM,EAAE,uCADI;AAEZC,QAAAA,QAAQ,EAAE,KAAKV,YAFH;AAGZW,QAAAA,QAAQ,EAAE;AAHE,OAAd;AAKA,aACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,SAAhB;AAA0B,QAAA,KAAK,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD,oBAAYH,KAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,YADF,CADF,CADF;AASD;;;;EAnD2BP,KAAK,CAACwB,S;;AAsDpC,eAAenB,eAAf","sourcesContent":["import React from \"react\";\nimport {Button, Card, Icon, Upload} from \"antd\";\n\nclass CompleteControl extends React.Component {\n  state = {\n    fileList: [{\n      uid: -1,\n      name: 'xxx.png',\n      status: 'done',\n      url: 'http://www.baidu.com/xxx.png',\n    }],\n  };\n  handleChange = (info) => {\n    let fileList = info.fileList;\n\n    // 1. Limit the number of uploaded files\n    //    Only to show two recent uploaded files, and old ones will be replaced by the new\n    fileList = fileList.slice(-2);\n\n    // 2. read from response and show file link\n    fileList = fileList.map((file) => {\n      if (file.response) {\n        // Component will show file.url as link\n        file.url = file.response.url;\n      }\n      return file;\n    });\n\n    // 3. filter successfully uploaded files according to response from server\n    fileList = fileList.filter((file) => {\n      if (file.response) {\n        return file.response.status === 'success';\n      }\n      return true;\n    });\n\n    this.setState({fileList});\n  };\n\n  render() {\n    const props = {\n      action: '//jsonplaceholder.typicode.com/posts/',\n      onChange: this.handleChange,\n      multiple: true,\n    };\n    return (\n      <Card className=\"gx-card\" title=\"Complete Control\">\n        <Upload {...props} fileList={this.state.fileList}>\n          <Button>\n            <Icon type=\"upload\"/> upload\n          </Button>\n        </Upload>\n      </Card>\n    );\n  }\n}\n\nexport default CompleteControl;\n"]},"metadata":{},"sourceType":"module"}