{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/extensions/map/googlemap/directions/Components/MapDirections.js\";\nimport React, { Component } from \"react\";\nimport { DirectionsRenderer, GoogleMap, withGoogleMap } from \"react-google-maps\";\nvar google = window.google;\nvar DirectionsExampleGoogleMap = withGoogleMap(function (props) {\n  return React.createElement(GoogleMap, {\n    defaultZoom: 7,\n    defaultCenter: props.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.directions && React.createElement(DirectionsRenderer, {\n    directions: props.directions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n});\n/*\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\n\nvar MapDirections =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapDirections, _Component);\n\n  function MapDirections() {\n    var _this;\n\n    _classCallCheck(this, MapDirections);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapDirections).call(this));\n    _this.state = {\n      origin: new google.maps.LatLng(41.8507300, -87.6512600),\n      destination: new google.maps.LatLng(41.8525800, -87.6514100),\n      directions: null\n    };\n    return _this;\n  }\n\n  _createClass(MapDirections, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var DirectionsService = new google.maps.DirectionsService();\n      DirectionsService.route({\n        origin: this.state.origin,\n        destination: this.state.destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      }, function (result, status) {\n        if (status === google.maps.DirectionsStatus.OK) {\n          _this2.setState({\n            directions: result\n          });\n        } else {\n          console.error(\"error fetching directions \".concat(result));\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DirectionsExampleGoogleMap, {\n        loadingElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }),\n        containerElement: React.createElement(\"div\", {\n          style: {\n            height: \"550px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }),\n        center: this.state.origin,\n        directions: this.state.directions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MapDirections;\n}(Component);\n\nexport { MapDirections as default };","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/extensions/map/googlemap/directions/Components/MapDirections.js"],"names":["React","Component","DirectionsRenderer","GoogleMap","withGoogleMap","google","window","DirectionsExampleGoogleMap","props","center","directions","MapDirections","state","origin","maps","LatLng","destination","DirectionsService","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","console","error","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,kBAAR,EAA4BC,SAA5B,EAAuCC,aAAvC,QAA2D,mBAA3D;AAEA,IAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;AAEA,IAAME,0BAA0B,GAAGH,aAAa,CAAC,UAAAI,KAAK;AAAA,SACpD,oBAAC,SAAD;AACE,IAAA,WAAW,EAAE,CADf;AAEE,IAAA,aAAa,EAAEA,KAAK,CAACC,MAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGD,KAAK,CAACE,UAAN,IAAoB,oBAAC,kBAAD;AAAoB,IAAA,UAAU,EAAEF,KAAK,CAACE,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJvB,CADoD;AAAA,CAAN,CAAhD;AASA;;;;IAGqBC,a;;;;;AAEnB,2BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,IAAIR,MAAM,CAACS,IAAP,CAAYC,MAAhB,CAAuB,UAAvB,EAAmC,CAAC,UAApC,CADG;AAEXC,MAAAA,WAAW,EAAE,IAAIX,MAAM,CAACS,IAAP,CAAYC,MAAhB,CAAuB,UAAvB,EAAmC,CAAC,UAApC,CAFF;AAGXL,MAAAA,UAAU,EAAE;AAHD,KAAb;AAFY;AAOb;;;;wCAEmB;AAAA;;AAClB,UAAMO,iBAAiB,GAAG,IAAIZ,MAAM,CAACS,IAAP,CAAYG,iBAAhB,EAA1B;AAEAA,MAAAA,iBAAiB,CAACC,KAAlB,CAAwB;AACtBL,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MADG;AAEtBG,QAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWI,WAFF;AAGtBG,QAAAA,UAAU,EAAEd,MAAM,CAACS,IAAP,CAAYM,UAAZ,CAAuBC;AAHb,OAAxB,EAIG,UAACC,MAAD,EAASC,MAAT,EAAoB;AACrB,YAAIA,MAAM,KAAKlB,MAAM,CAACS,IAAP,CAAYU,gBAAZ,CAA6BC,EAA5C,EAAgD;AAC9C,UAAA,MAAI,CAACC,QAAL,CAAc;AACZhB,YAAAA,UAAU,EAAEY;AADA,WAAd;AAGD,SAJD,MAIO;AACLK,UAAAA,OAAO,CAACC,KAAR,qCAA2CN,MAA3C;AACD;AACF,OAZD;AAaD;;;6BAEQ;AACP,aACE,oBAAC,0BAAD;AACE,QAAA,cAAc,EAAE;AAAK,UAAA,KAAK,EAAE;AAACO,YAAAA,MAAM;AAAP,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADlB;AAEE,QAAA,gBAAgB,EAAE;AAAK,UAAA,KAAK,EAAE;AAACA,YAAAA,MAAM;AAAP,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFpB;AAGE,QAAA,UAAU,EAAE;AAAK,UAAA,KAAK,EAAE;AAACA,YAAAA,MAAM;AAAP,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHd;AAIE,QAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWC,MAJrB;AAKE,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWF,UALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD;;;;EAvCwCT,S;;SAAtBU,a","sourcesContent":["import React, {Component} from \"react\";\nimport {DirectionsRenderer, GoogleMap, withGoogleMap} from \"react-google-maps\";\n\nconst google = window.google;\n\nconst DirectionsExampleGoogleMap = withGoogleMap(props => (\n  <GoogleMap\n    defaultZoom={7}\n    defaultCenter={props.center}\n  >\n    {props.directions && <DirectionsRenderer directions={props.directions}/>}\n  </GoogleMap>\n));\n\n/*\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\n */\nexport default class MapDirections extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      origin: new google.maps.LatLng(41.8507300, -87.6512600),\n      destination: new google.maps.LatLng(41.8525800, -87.6514100),\n      directions: null,\n    };\n  }\n\n  componentDidMount() {\n    const DirectionsService = new google.maps.DirectionsService();\n\n    DirectionsService.route({\n      origin: this.state.origin,\n      destination: this.state.destination,\n      travelMode: google.maps.TravelMode.DRIVING,\n    }, (result, status) => {\n      if (status === google.maps.DirectionsStatus.OK) {\n        this.setState({\n          directions: result,\n        });\n      } else {\n        console.error(`error fetching directions ${result}`);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <DirectionsExampleGoogleMap\n        loadingElement={<div style={{height: `100%`}}/>}\n        containerElement={<div style={{height: `550px`}}/>}\n        mapElement={<div style={{height: `100%`}}/>}\n        center={this.state.origin}\n        directions={this.state.directions}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}