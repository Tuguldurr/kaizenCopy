{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/extraComponents/Notification/index.js\";\nimport React from \"react\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport { Button, Card, Col, Row } from \"antd\";\nimport ContainerHeader from \"components/ContainerHeader/index\";\nimport IntlMessages from \"util/IntlMessages\";\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Example)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.createNotification = function (type) {\n      return function () {\n        switch (type) {\n          case 'info':\n            NotificationManager.info(React.createElement(IntlMessages, {\n              id: \"notification.infoMsg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 13\n              },\n              __self: this\n            }));\n            break;\n\n          case 'success':\n            NotificationManager.success(React.createElement(IntlMessages, {\n              id: \"notification.successMessage\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 16\n              },\n              __self: this\n            }), React.createElement(IntlMessages, {\n              id: \"notification.titleHere\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 16\n              },\n              __self: this\n            }));\n            break;\n\n          case 'warning':\n            NotificationManager.warning(React.createElement(IntlMessages, {\n              id: \"notification.warningMessage\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20\n              },\n              __self: this\n            }), React.createElement(IntlMessages, {\n              id: \"notification.closeAfter3000ms\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20\n              },\n              __self: this\n            }), 3000);\n            break;\n\n          case 'error':\n            NotificationManager.error(React.createElement(IntlMessages, {\n              id: \"notification.errorMessage\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24\n              },\n              __self: this\n            }), React.createElement(IntlMessages, {\n              id: \"notification.clickMe\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24\n              },\n              __self: this\n            }), 5000, function () {\n              alert('callback');\n            });\n            break;\n\n          default:\n            NotificationManager.info(React.createElement(IntlMessages, {\n              id: \"notification.infoMsg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30\n              },\n              __self: this\n            }));\n            break;\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"gx-main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(ContainerHeader, {\n        title: React.createElement(IntlMessages, {\n          id: \"extension.notification\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }),\n        match: this.props.match,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"gx-text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn btn-info\",\n        type: \"primary\",\n        onClick: this.createNotification('info'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"notification.info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: \"gx-btn-success\",\n        onClick: this.createNotification('success'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"notification.success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: \"gx-btn-warning\",\n        onClick: this.createNotification('warning'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"notification.warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: \"gx-btn-danger gx-mb-lg-3\",\n        onClick: this.createNotification('error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"notification.error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))))), React.createElement(NotificationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport default Example;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/extraComponents/Notification/index.js"],"names":["React","NotificationContainer","NotificationManager","Button","Card","Col","Row","ContainerHeader","IntlMessages","Example","createNotification","type","info","success","warning","error","alert","props","match","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {NotificationContainer, NotificationManager} from \"react-notifications\";\nimport {Button, Card, Col, Row} from \"antd\";\n\nimport ContainerHeader from \"components/ContainerHeader/index\";\nimport IntlMessages from \"util/IntlMessages\";\n\nclass Example extends React.Component {\n  createNotification = (type) => {\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info(<IntlMessages id=\"notification.infoMsg\"/>);\n          break;\n        case 'success':\n          NotificationManager.success(<IntlMessages id=\"notification.successMessage\"/>, <IntlMessages\n            id=\"notification.titleHere\"/>);\n          break;\n        case 'warning':\n          NotificationManager.warning(<IntlMessages id=\"notification.warningMessage\"/>, <IntlMessages\n            id=\"notification.closeAfter3000ms\"/>, 3000);\n          break;\n        case 'error':\n          NotificationManager.error(<IntlMessages id=\"notification.errorMessage\"/>, <IntlMessages\n            id=\"notification.clickMe\"/>, 5000, () => {\n            alert('callback');\n          });\n          break;\n        default:\n          NotificationManager.info(<IntlMessages id=\"notification.infoMsg\"/>);\n          break;\n\n      }\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"gx-main-content\">\n        <ContainerHeader title={<IntlMessages id=\"extension.notification\"/>} match={this.props.match}/>\n        <Row>\n          <Col span={24}>\n            <Card className=\"gx-text-center\">\n              <Button className='btn btn-info' type=\"primary\"\n                      onClick={this.createNotification('info')}><IntlMessages id=\"notification.info\"/>\n              </Button>\n              <Button className='gx-btn-success'\n                      onClick={this.createNotification('success')}><IntlMessages\n                id=\"notification.success\"/>\n              </Button>\n              <Button className='gx-btn-warning'\n                      onClick={this.createNotification('warning')}><IntlMessages\n                id=\"notification.warning\"/>\n              </Button>\n              <Button className='gx-btn-danger gx-mb-lg-3'\n                      onClick={this.createNotification('error')}><IntlMessages id=\"notification.error\"/>\n              </Button>\n            </Card>\n          </Col>\n\n        </Row>\n\n        <NotificationContainer/>\n      </div>\n    );\n  }\n}\n\nexport default Example;\n"]},"metadata":{},"sourceType":"module"}