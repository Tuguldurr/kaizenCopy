{"ast":null,"code":"import _classCallCheck from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/home/tuguldursaikhan/Desktop/kaizen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Form/StoreFormData.js\";\nimport React, { Component } from \"react\";\nimport { Card, Form, Input } from \"antd\";\nvar FormItem = Form.Item;\nvar CustomizedForm = Form.create({\n  onFieldsChange: function onFieldsChange(props, changedFields) {\n    props.onChange(changedFields);\n  },\n  mapPropsToFields: function mapPropsToFields(props) {\n    return {\n      username: Form.createFormField(_objectSpread({}, props.username, {\n        value: props.username.value\n      }))\n    };\n  },\n  onValuesChange: function onValuesChange(_, values) {\n    console.log(values);\n  }\n})(function (props) {\n  var getFieldDecorator = props.form.getFieldDecorator;\n  return React.createElement(Form, {\n    layout: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(FormItem, {\n    label: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, getFieldDecorator('username', {\n    rules: [{\n      required: true,\n      message: 'Username is required!'\n    }]\n  })(React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))));\n});\n\nvar StoreFormData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StoreFormData, _Component);\n\n  function StoreFormData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StoreFormData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StoreFormData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fields: {\n        username: {\n          value: 'benjycui'\n        }\n      }\n    };\n\n    _this.handleFormChange = function (changedFields) {\n      _this.setState({\n        fields: _objectSpread({}, _this.state.fields, changedFields)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StoreFormData, [{\n    key: \"render\",\n    value: function render() {\n      var fields = this.state.fields;\n      return React.createElement(Card, {\n        className: \"gx-card\",\n        title: \"Store Form Data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(CustomizedForm, Object.assign({}, fields, {\n        onChange: this.handleFormChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(\"pre\", {\n        className: \"language-bash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, JSON.stringify(fields, null, 2)));\n    }\n  }]);\n\n  return StoreFormData;\n}(Component);\n\nexport default StoreFormData;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataEntry/Form/StoreFormData.js"],"names":["React","Component","Card","Form","Input","FormItem","Item","CustomizedForm","create","onFieldsChange","props","changedFields","onChange","mapPropsToFields","username","createFormField","value","onValuesChange","_","values","console","log","getFieldDecorator","form","rules","required","message","StoreFormData","state","fields","handleFormChange","setState","JSON","stringify"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,KAApB,QAAgC,MAAhC;AAEA,IAAMC,QAAQ,GAAGF,IAAI,CAACG,IAAtB;AAGA,IAAMC,cAAc,GAAGJ,IAAI,CAACK,MAAL,CAAY;AACjCC,EAAAA,cADiC,0BAClBC,KADkB,EACXC,aADW,EACI;AACnCD,IAAAA,KAAK,CAACE,QAAN,CAAeD,aAAf;AACD,GAHgC;AAIjCE,EAAAA,gBAJiC,4BAIhBH,KAJgB,EAIT;AACtB,WAAO;AACLI,MAAAA,QAAQ,EAAEX,IAAI,CAACY,eAAL,mBACLL,KAAK,CAACI,QADD;AAERE,QAAAA,KAAK,EAAEN,KAAK,CAACI,QAAN,CAAeE;AAFd;AADL,KAAP;AAMD,GAXgC;AAYjCC,EAAAA,cAZiC,0BAYlBC,CAZkB,EAYfC,MAZe,EAYP;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD;AAdgC,CAAZ,EAepB,UAACT,KAAD,EAAW;AAAA,MACLY,iBADK,GACgBZ,KAAK,CAACa,IADtB,CACLD,iBADK;AAEZ,SACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,iBAAiB,CAAC,UAAD,EAAa;AAC7BE,IAAAA,KAAK,EAAE,CAAC;AAACC,MAAAA,QAAQ,EAAE,IAAX;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAD;AADsB,GAAb,CAAjB,CAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADH,CADF,CADF;AASD,CA1BsB,CAAvB;;IA4BMC,a;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AACNf,QAAAA,QAAQ,EAAE;AACRE,UAAAA,KAAK,EAAE;AADC;AADJ;AADF,K;;UAORc,gB,GAAmB,UAACnB,aAAD,EAAmB;AACpC,YAAKoB,QAAL,CAAc;AACZF,QAAAA,MAAM,oBAAM,MAAKD,KAAL,CAAWC,MAAjB,EAA4BlB,aAA5B;AADM,OAAd;AAGD,K;;;;;;;6BAEQ;AACP,UAAMkB,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAA1B;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,SAAhB;AAA0B,QAAA,KAAK,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD,oBAAoBA,MAApB;AAA4B,QAAA,QAAQ,EAAE,KAAKC,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,IAAI,CAACC,SAAL,CAAeJ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CADH,CAFF,CADF;AAQD;;;;EAzByB5B,S;;AA6B5B,eAAe0B,aAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {Card, Form, Input} from \"antd\";\n\nconst FormItem = Form.Item;\n\n\nconst CustomizedForm = Form.create({\n  onFieldsChange(props, changedFields) {\n    props.onChange(changedFields);\n  },\n  mapPropsToFields(props) {\n    return {\n      username: Form.createFormField({\n        ...props.username,\n        value: props.username.value,\n      }),\n    };\n  },\n  onValuesChange(_, values) {\n    console.log(values);\n  },\n})((props) => {\n  const {getFieldDecorator} = props.form;\n  return (\n    <Form layout=\"inline\">\n      <FormItem label=\"Username\">\n        {getFieldDecorator('username', {\n          rules: [{required: true, message: 'Username is required!'}],\n        })(<Input/>)}\n      </FormItem>\n    </Form>\n  );\n});\n\nclass StoreFormData extends Component {\n\n  state = {\n    fields: {\n      username: {\n        value: 'benjycui',\n      },\n    },\n  };\n  handleFormChange = (changedFields) => {\n    this.setState({\n      fields: {...this.state.fields, ...changedFields},\n    });\n  }\n\n  render() {\n    const fields = this.state.fields;\n    return (\n      <Card className=\"gx-card\" title=\"Store Form Data\">\n        <CustomizedForm {...fields} onChange={this.handleFormChange}/>\n        <pre className=\"language-bash\">\n          {JSON.stringify(fields, null, 2)}\n        </pre>\n      </Card>\n    );\n  }\n\n}\n\nexport default StoreFormData;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}