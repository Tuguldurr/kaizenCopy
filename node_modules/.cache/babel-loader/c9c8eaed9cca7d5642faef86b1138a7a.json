{"ast":null,"code":"var _jsxFileName = \"/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataDisplay/Calendar/NoticeCalendar.js\";\nimport React from \"react\";\nimport { Badge, Calendar, Card } from \"antd\";\n\nfunction getListData(value) {\n  var listData;\n\n  switch (value.date()) {\n    case 8:\n      listData = [{\n        type: 'warning',\n        content: 'This is warning event.'\n      }, {\n        type: 'success',\n        content: 'This is usual event.'\n      }];\n      break;\n\n    case 10:\n      listData = [{\n        type: 'warning',\n        content: 'This is warning event.'\n      }, {\n        type: 'success',\n        content: 'This is usual event.'\n      }, {\n        type: 'error',\n        content: 'This is error event.'\n      }];\n      break;\n\n    case 15:\n      listData = [{\n        type: 'warning',\n        content: 'This is warning event'\n      }, {\n        type: 'success',\n        content: 'This is very long usual event。。....'\n      }, {\n        type: 'error',\n        content: 'This is error event 1.'\n      }, {\n        type: 'error',\n        content: 'This is error event 2.'\n      }, {\n        type: 'error',\n        content: 'This is error event 3.'\n      }, {\n        type: 'error',\n        content: 'This is error event 4.'\n      }];\n      break;\n\n    default:\n  }\n\n  return listData || [];\n}\n\nvar NoticeCalendar = function NoticeCalendar() {\n  function dateCellRender(value) {\n    var listData = getListData(value);\n    return React.createElement(\"ul\", {\n      className: \"events gx-text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, listData.map(function (item) {\n      return React.createElement(\"li\", {\n        key: item.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        className: \"gx-text-left\",\n        status: item.type,\n        text: item.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    }));\n  }\n\n  function getMonthData(value) {\n    if (value.month() === 8) {\n      return 1394;\n    }\n  }\n\n  function monthCellRender(value) {\n    var num = getMonthData(value);\n    return num ? React.createElement(\"div\", {\n      className: \"notes-month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, num), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Backlog number\")) : null;\n  }\n\n  return React.createElement(Card, {\n    className: \"gx-card\",\n    title: \"Notice Calendar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Calendar, {\n    className: \"gx-com-calendar\",\n    dateCellRender: dateCellRender,\n    monthCellRender: monthCellRender,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n};\n\nexport default NoticeCalendar;","map":{"version":3,"sources":["/home/tuguldursaikhan/Desktop/kaizen/src/routes/components/dataDisplay/Calendar/NoticeCalendar.js"],"names":["React","Badge","Calendar","Card","getListData","value","listData","date","type","content","NoticeCalendar","dateCellRender","map","item","getMonthData","month","monthCellRender","num"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,IAAzB,QAAoC,MAApC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,QAAJ;;AACA,UAAQD,KAAK,CAACE,IAAN,EAAR;AACE,SAAK,CAAL;AACED,MAAAA,QAAQ,GAAG,CACT;AAACE,QAAAA,IAAI,EAAE,SAAP;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OADS,EAET;AAACD,QAAAA,IAAI,EAAE,SAAP;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAFS,CAAX;AAIA;;AACF,SAAK,EAAL;AACEH,MAAAA,QAAQ,GAAG,CACT;AAACE,QAAAA,IAAI,EAAE,SAAP;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OADS,EAET;AAACD,QAAAA,IAAI,EAAE,SAAP;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAFS,EAGT;AAACD,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,OAHS,CAAX;AAKA;;AACF,SAAK,EAAL;AACEH,MAAAA,QAAQ,GAAG,CACT;AAACE,QAAAA,IAAI,EAAE,SAAP;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OADS,EAET;AAACD,QAAAA,IAAI,EAAE,SAAP;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAFS,EAGT;AAACD,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,OAHS,EAIT;AAACD,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,OAJS,EAKT;AAACD,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,OALS,EAMT;AAACD,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,OANS,CAAX;AAQA;;AACF;AAxBF;;AA0BA,SAAOH,QAAQ,IAAI,EAAnB;AACD;;AAED,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,WAASC,cAAT,CAAwBN,KAAxB,EAA+B;AAC7B,QAAMC,QAAQ,GAAGF,WAAW,CAACC,KAAD,CAA5B;AACA,WACE;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIC,QAAQ,CAACM,GAAT,CAAa,UAAAC,IAAI;AAAA,aACf;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACJ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,MAAM,EAAEI,IAAI,CAACL,IAA7C;AAAmD,QAAA,IAAI,EAAEK,IAAI,CAACJ,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADe;AAAA,KAAjB,CAFJ,CADF;AAWD;;AAED,WAASK,YAAT,CAAsBT,KAAtB,EAA6B;AAC3B,QAAIA,KAAK,CAACU,KAAN,OAAkB,CAAtB,EAAyB;AACvB,aAAO,IAAP;AACD;AACF;;AAED,WAASC,eAAT,CAAyBX,KAAzB,EAAgC;AAC9B,QAAMY,GAAG,GAAGH,YAAY,CAACT,KAAD,CAAxB;AACA,WAAOY,GAAG,GACR;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUA,GAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADQ,GAKN,IALJ;AAMD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,iBAApB;AAAsC,IAAA,cAAc,EAAEN,cAAtD;AAAsE,IAAA,eAAe,EAAEK,eAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CArCD;;AAuCA,eAAeN,cAAf","sourcesContent":["import React from \"react\";\nimport {Badge, Calendar, Card} from \"antd\";\n\nfunction getListData(value) {\n  let listData;\n  switch (value.date()) {\n    case 8:\n      listData = [\n        {type: 'warning', content: 'This is warning event.'},\n        {type: 'success', content: 'This is usual event.'},\n      ];\n      break;\n    case 10:\n      listData = [\n        {type: 'warning', content: 'This is warning event.'},\n        {type: 'success', content: 'This is usual event.'},\n        {type: 'error', content: 'This is error event.'},\n      ];\n      break;\n    case 15:\n      listData = [\n        {type: 'warning', content: 'This is warning event'},\n        {type: 'success', content: 'This is very long usual event。。....'},\n        {type: 'error', content: 'This is error event 1.'},\n        {type: 'error', content: 'This is error event 2.'},\n        {type: 'error', content: 'This is error event 3.'},\n        {type: 'error', content: 'This is error event 4.'},\n      ];\n      break;\n    default:\n  }\n  return listData || [];\n}\n\nconst NoticeCalendar = () => {\n  function dateCellRender(value) {\n    const listData = getListData(value);\n    return (\n      <ul className=\"events gx-text-left\">\n        {\n          listData.map(item => (\n            <li key={item.content}>\n              <Badge className=\"gx-text-left\" status={item.type} text={item.content}/>\n            </li>\n          ))\n        }\n      </ul>\n    );\n  }\n\n  function getMonthData(value) {\n    if (value.month() === 8) {\n      return 1394;\n    }\n  }\n\n  function monthCellRender(value) {\n    const num = getMonthData(value);\n    return num ? (\n      <div className=\"notes-month\">\n        <section>{num}</section>\n        <span>Backlog number</span>\n      </div>\n    ) : null;\n  }\n\n  return (\n    <Card className=\"gx-card\" title=\"Notice Calendar\">\n      <Calendar className=\"gx-com-calendar\" dateCellRender={dateCellRender} monthCellRender={monthCellRender}/>\n    </Card>\n  );\n}\n\nexport default NoticeCalendar;\n"]},"metadata":{},"sourceType":"module"}